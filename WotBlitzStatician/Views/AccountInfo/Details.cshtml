@model WotBlitzStatician.ViewModel.AccountInfoViewModel
@{
	ViewData["NickName"] = Model.NickName;
	ViewData["AccountId"] = Model.AccountId;
	var clanInfo = Model.AccountClanInfo == null ? "" : $"В клане [{Model.AccountClanInfo.ClanTag}] '{Model.AccountClanInfo.ClanName}' c {Model.AccountClanInfo.JoinedAt}";
}

<table>
    <tr>
        <td>
            <h2>@Model.NickName</h2>
        </td>
        <td style="padding-left: 100px">
        <form asp-action="RefreshDataFromWg" asp-controller="AccountInfo" asp-route-accountId="@Model.AccountId">
            <button class="btn"><img src="../../img/menu-logo.png"/>Обновить данные</button>
        </form>
        </td>
    </tr>
</table>
<br/>
<p>@clanInfo</p>
<p>Последний бой @Html.DisplayFor(m => m.LastBattleTime, null)</p>
<br/>
<table class="table">
	<tr>
		<td>
			<table class="table">
				<tr>
					<td>
						Статистика обновлена
					</td>
					<td>
						@Html.DisplayFor(m => m.AccountInfoDelta.Statistics.LastBattle.PresentValue, null) <small>@Html.DisplayFor(m => m.AccountInfoDelta.Statistics.LastBattle.Delta, null)</small>
					</td>
					<td>
						@Html.DisplayFor(m => m.AccountInfoDelta.Statistics.LastBattle.Interval, null)
					</td>
					<td>
						<Form method="post" asp-action="DetailsWithDate" asp-controller="AccountInfo" >
							@Html.TextBoxFor(m => m.PreLastUpdatedDate, "{0:dd.MM.yyyy}")
							@Html.HiddenFor(m => m.AccountId)
							<button class="btn-link">Обновить</button>
						</Form>
					</td>
				</tr>
				<tr>
					<td>
						Боёв
					</td>
					<td>
						@Html.DisplayFor(m => m.AccountInfoDelta.Statistics.Battles.PresentValue, null) <small>@Html.DisplayFor(m => m.AccountInfoDelta.Statistics.Battles.Delta, null)</small>
					</td>
					<td>
						@Html.DisplayFor(m => m.AccountInfoDelta.Statistics.Battles.Interval, null)
					</td>
					<td>
						@Html.DisplayFor(m => m.AccountInfoDelta.Statistics.Battles.PastValue, null)
					</td>
				</tr>
				<tr>
					<td>
						Побед
					</td>
					<td>
						@Html.DisplayFor(m => m.AccountInfoDelta.Statistics.Wins.PresentValue, null) <small>@Html.DisplayFor(m => m.AccountInfoDelta.Statistics.Wins.Delta, null) </small>
					</td>
					<td>
						@Html.DisplayFor(m => m.AccountInfoDelta.Statistics.Wins.Interval, null)
					</td>
					<td>
						@Html.DisplayFor(m => m.AccountInfoDelta.Statistics.Wins.PastValue, null)
					</td>
				</tr>
				<tr>
					<td>
						Winrate
					</td>
					<td>
						<b style="color: @(Model.AccountInfoDelta.Statistics.Winrate.PresentValue.GetWinrateGrade().GetColorByGrade())">
							@Html.DisplayFor(m => m.AccountInfoDelta.Statistics.Winrate.PresentValue, null)% (@Model.AccountInfoDelta.Statistics.Winrate.PresentValue.GetWinrateGrade())
						</b> <small>@Html.DisplayFor(m => m.AccountInfoDelta.Statistics.Winrate.Delta, null) </small>
					</td>
					<td>
						<b style="color: @(Model.AccountInfoDelta.Statistics.Winrate.Interval.GetWinrateGrade().GetColorByGrade())">
							@Html.DisplayFor(m => m.AccountInfoDelta.Statistics.Winrate.Interval, null)%
						</b>
					</td>
					<td>
						<b>@Html.DisplayFor(m => m.AccountInfoDelta.Statistics.Winrate.PastValue, null)%</b>
					</td>
				</tr>
				<tr>
					<td>
						Wn7
					</td>
					<td>
						<b style="color: @(Model.AccountInfoDelta.Statistics.Wn7.PresentValue.GetWn7Grade().GetColorByGrade())">
							@Html.DisplayFor(m => m.AccountInfoDelta.Statistics.Wn7.PresentValue, null) (@Model.AccountInfoDelta.Statistics.Wn7.PresentValue.GetWn7Grade())
						</b> <small>@Html.DisplayFor(m => m.AccountInfoDelta.Statistics.Wn7.Delta, null)</small>
					</td>
					<td>
						<b style="color: @(Model.AccountInfoDelta.Statistics.Wn7.Interval.GetWn7Grade().GetColorByGrade())">
							@Html.DisplayFor(m => m.AccountInfoDelta.Statistics.Wn7.Interval, null)
						</b>
					</td>
					<td>
						@Html.DisplayFor(m => m.AccountInfoDelta.Statistics.Wn7.PastValue, null)
					</td>
				</tr>
				<tr>
					<td>
						Средний урон
					</td>
					<td>
						@Html.DisplayFor(m => m.AccountInfoDelta.Statistics.AvgDamage.PresentValue, null) <small>@Html.DisplayFor(m => m.AccountInfoDelta.Statistics.AvgDamage.Delta, null) </small>
					</td>
					<td>
						@Html.DisplayFor(m => m.AccountInfoDelta.Statistics.AvgDamage.Interval, null)
					</td>
					<td>
						@Html.DisplayFor(m => m.AccountInfoDelta.Statistics.AvgDamage.PastValue, null)
					</td>
				</tr>
				<tr>
					<td>
						Средний опыт
					</td>
					<td>
						@Html.DisplayFor(m => m.AccountInfoDelta.Statistics.AvgXp.PresentValue, null) <small>@Html.DisplayFor(m => m.AccountInfoDelta.Statistics.AvgXp.Delta, null) </small>
					</td>
					<td>
						@Html.DisplayFor(m => m.AccountInfoDelta.Statistics.AvgXp.Interval, null)
					</td>
					<td>
						@Html.DisplayFor(m => m.AccountInfoDelta.Statistics.AvgXp.PastValue, null)
					</td>
				</tr>
				<tr>
					<td>
						Танкоуровень
					</td>
					<td>
						@Html.DisplayFor(m => m.AccountInfoDelta.AvgTier.PresentValue, null) <small>@Html.DisplayFor(m => m.AccountInfoDelta.AvgTier.Delta, null) </small>
					</td>
					<td>
						@Html.DisplayFor(m => m.AccountInfoDelta.AvgTier.Interval, null)
					</td>
					<td>
						@Html.DisplayFor(m => m.AccountInfoDelta.AvgTier.PastValue, null)
					</td>
				</tr>
			</table>
		</td>
	</tr>
</table>
<table class="table">
	@foreach (var tankDelta in Model.TanksDelta)
	{
		<tr><td>
			@await Component.InvokeAsync("TankDelta", tankDelta)
		</td></tr>
	}
</table>