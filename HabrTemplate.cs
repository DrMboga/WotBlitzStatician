using System;
using System.Collections.Generic;
using System.Net.Http;
using System.Reflection;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using WGClient.Attributes;

namespace WGClient.Attributes
{
    public class MethodAttribute : Attribute
    {
        public string Url { get; set; }
    }

    public class FieldIsMandatoryAttribute : Attribute
    {
    }

    public class DescriptionUrlAttribute : Attribute
    {
        public string Url { get; set; }
    }
}

namespace WGClient
{
    public interface IRequest
    {

    }

    public interface IResponse
    {

    }

    public class Client
    {
        public Task<Dictionary<string,TResponse>> SendRequestDictionary<TResponse>(IRequest request) where TResponse : IResponse
        {
            return BaseSendRequest<Dictionary<string,TResponse>>(request);
        }

        public Task<List<TResponse>> SendRequestArray<TResponse>(IRequest request) where TResponse : IResponse
        {
            return BaseSendRequest<List<TResponse>>(request);
        }

        public Task<TResponse> SendRequest<TResponse>(IRequest request) where TResponse : IResponse
        {
            return BaseSendRequest<TResponse>(request);
        }

        private async Task<TResponse> BaseSendRequest<TResponse>(IRequest request)
        {
            var client = new HttpClient();
            var requestUrl ="http://"+request.GetType().GetTypeInfo().GetCustomAttribute<MethodAttribute>().Url;
            var requestBody =GetBody(request);
            var httpContent = new StringContent(requestBody,Encoding.UTF8, "application/x-www-form-urlencoded");
            
            var requestMessage=new HttpRequestMessage(HttpMethod.Post, requestUrl);
            requestMessage.Content = httpContent;
            var responseMessage=await client.SendAsync(requestMessage);
            var response= await responseMessage.Content.ReadAsStringAsync();

            var responseBody=JsonConvert.DeserializeObject<ResponseBody<TResponse>>(response);

            if (responseBody.Status == "ok")
            {
                return responseBody.Data;
            }
            if (responseBody.Status == "error")
            {
                var error = responseBody.Error;
                var message = $"Field:{error.Field}  Message:{error.Message}  Value:{error.Value}  Code:{error.Code}";
                throw new ResponseException(message)
                {
                    Error = error,
                    
                };
            }
            return default(TResponse);
        }

        private string GetBody(IRequest request)
        {
            var list = new List<string>();
            
            foreach (var propertyInfo in request.GetType().GetRuntimeProperties())
            {
                var propertyName = propertyInfo.Name;
                var jsonPropertyAttribute = propertyInfo.GetCustomAttribute<JsonPropertyAttribute>();
                if (jsonPropertyAttribute != null)
                {
                    propertyName = jsonPropertyAttribute.PropertyName;
                }
                var value =((string) propertyInfo.GetValue(request))??string.Empty;
                
                list.Add($"{propertyName}={value}");
                
                if (string.IsNullOrEmpty(value))
                {
                    var isMandatory = propertyInfo.GetCustomAttribute<FieldIsMandatoryAttribute>();
                    if (isMandatory != null)
                    {
                        var helpUrl = request.GetType().GetTypeInfo().GetCustomAttribute<DescriptionUrlAttribute>().Url;
                        throw new ArgumentException($"Обязательное поле {propertyInfo.Name} не указано. Смотрите подробности {helpUrl}");
                    }
                }
                
            }
            return string.Join("&",list);
        }

        public class ResponseException : Exception
        {
            public ResponseException(string message) : base(message)
            {
            }

            public Error Error { get; set; }
        }

        public class ResponseBody<T>
        {
            [JsonProperty("status")]
            public string Status { get; set; }

            [JsonProperty("meta")]
            public Meta Meta { get; set; }

            [JsonProperty("data")]
            public T Data { get; set; }

            [JsonProperty("error")]
            public Error Error { get; set; }
        }

        public class Meta
        {
            [JsonProperty("count")]
            public int Count { get; set; }
        }

        public class Error
        {
            [JsonProperty("field")]
            public string Field { get; set; }

            [JsonProperty("message")]
            public string Message { get; set; }

            [JsonProperty("code")]
            public string Code { get; set; }

            [JsonProperty("value")]
            public string Value { get; set; }
        }
    }
}
namespace WGClient.WorldOfTanks
{
    ///<summary>
    /// Игроки
    /// https://ru.wargaming.net/developers/api_reference/wot/account/list/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/account/list/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/account/list/")]
    public class RequestWotAccountList:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Тип поиска. Определяет минимальную длину строки поиска и вид поиска. По умолчанию используется значение startswith. Допустимые значения: 
///
///"startswith" — Поиск по первым символам имени игрока. Минимальная длина: 3 символа без учёта регистра. (используется по умолчанию)
///"exact" — Поиск по строгому соответствию имени игрока. Минимальная длина: 1 символ без учёта регистра.
        ///string
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Строка поиска по имени игрока. Вид поиска и минимальная длина строки поиска зависят от параметра type.
///        Максимальная длина: 24 символа.
        ///string
        ///</summary>
        [JsonProperty("search")]
        [FieldIsMandatory]
        public string Search {get; set;}

        ///<summary>
        ///Количество возвращаемых записей (может вернуться меньше записей, но не больше 100). Если переданный лимит превышает 100, тогда автоматически выставляется лимит в 100 (по умолчанию).
        ///numeric
        ///</summary>
        [JsonProperty("limit")]
        public string Limit {get; set;}
    }
    
    ///<summary>
    ///Игроки
    ///</summary>
    public class ResponseWotAccountList:IResponse
    {

        ///<summary>
        ///Идентификатор аккаунта игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Имя игрока
        ///</summary>
        [JsonProperty("nickname")]
        public string Nickname {get; set;}
    }


    ///<summary>
    /// Персональные данные игрока
    /// https://ru.wargaming.net/developers/api_reference/wot/account/info/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/account/info/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/account/info/")]
    public class RequestWotAccountInfo:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Ключ доступа к персональным данным пользователя. Имеет срок действия. Для получения ключа доступа необходимо запросить аутентификацию.
        ///string
        ///</summary>
        [JsonProperty("access_token")]
        public string AccessToken {get; set;}

        ///<summary>
        ///Дополнительные поля, которые будут включены в ответ. Допустимые значения: 
///
///private.boosters
///private.garage
///private.grouped_contacts
///private.personal_missions
///private.rented
///statistics.fallout
///statistics.globalmap_absolute
///statistics.globalmap_champion
///statistics.globalmap_middle
///statistics.random
        ///string, list
        ///</summary>
        [JsonProperty("extra")]
        public string Extra {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор аккаунта игрока
        ///numeric, list
        ///</summary>
        [JsonProperty("account_id")]
        [FieldIsMandatory]
        public string AccountId {get; set;}
    }
    
    ///<summary>
    ///Персональные данные игрока
    ///</summary>
    public class ResponseWotAccountInfo:IResponse
    {

        ///<summary>
        ///Идентификатор аккаунта игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Информация о блокировке аккаунта
        ///</summary>
        [JsonProperty("ban_info")]
        public string BanInfo {get; set;}

        ///<summary>
        ///Время окончания блокировки аккаунта
        ///</summary>
        [JsonProperty("ban_time")]
        public int? BanTime {get; set;}

        ///<summary>
        ///Идентификатор клана
        ///</summary>
        [JsonProperty("clan_id")]
        public Int64? ClanId {get; set;}

        ///<summary>
        ///Язык, выбранный в клиенте игры
        ///</summary>
        [JsonProperty("client_language")]
        public string ClientLanguage {get; set;}

        ///<summary>
        ///Дата создания аккаунта игрока
        ///</summary>
        [JsonProperty("created_at")]
        public int? CreatedAt {get; set;}

        ///<summary>
        ///Личный рейтинг
        ///</summary>
        [JsonProperty("global_rating")]
        public Int64? GlobalRating {get; set;}

        ///<summary>
        ///Время последнего боя
        ///</summary>
        [JsonProperty("last_battle_time")]
        public int? LastBattleTime {get; set;}

        ///<summary>
        ///Время окончания последней игровой сессии
        ///</summary>
        [JsonProperty("logout_at")]
        public int? LogoutAt {get; set;}

        ///<summary>
        ///Имя игрока
        ///</summary>
        [JsonProperty("nickname")]
        public string Nickname {get; set;}

        ///<summary>
        ///Дата обновления информации об игроке
        ///</summary>
        [JsonProperty("updated_at")]
        public int? UpdatedAt {get; set;}

        ///<summary>
        ///Приватные данные игрока
        ///</summary>
        [JsonProperty("private")]
        public WotAccountInfoPrivate Private {get; set;}

        ///<summary>
        ///Статистика игрока
        ///</summary>
        [JsonProperty("statistics")]
        public WotAccountInfoStatistics Statistics {get; set;}
    }
    public class WotAccountInfoPrivate
    {

        ///<summary>
        ///Общее время в бою до уничтожения в секундах
        ///</summary>
        [JsonProperty("battle_life_time")]
        public Int64? BattleLifeTime {get; set;}

        ///<summary>
        ///Кредиты
        ///</summary>
        [JsonProperty("credits")]
        public Int64? Credits {get; set;}

        ///<summary>
        ///Свободный опыт
        ///</summary>
        [JsonProperty("free_xp")]
        public Int64? FreeXp {get; set;}

        ///<summary>
        ///Техника в Ангаре.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("garage")]
        public int[] Garage {get; set;}

        ///<summary>
        ///Золото
        ///</summary>
        [JsonProperty("gold")]
        public Int64? Gold {get; set;}

        ///<summary>
        ///Показывает, привязан ли аккаунт к номеру мобильного телефона
        ///</summary>
        [JsonProperty("is_bound_to_phone")]
        public bool IsBoundToPhone {get; set;}

        ///<summary>
        ///Показывает, является ли аккаунт премиум аккаунтом
        ///</summary>
        [JsonProperty("is_premium")]
        public bool IsPremium {get; set;}

        ///<summary>
        ///Прогресс по личным боевым задачам. Ключ - идентификатор задачи, значение - статус.
///Возможные статусы:
///
///NONE - миссия недоступна
///UNLOCKED - миссия доступна
///NEED_GET_MAIN_REWARD - не получено основное вознаграждение
///MAIN_REWARD_GOTTEN - основное вознаграждение получено
///NEED_GET_ADD_REWARD - не получено второстепенное вознаграждение
///NEED_GET_ALL_REWARDS - не получено ни одно вознаграждение
///ALL_REWARDS_GOTTEN - все вознаграждения получены
///.
///
///Дополнительное поле.
        ///</summary>
        [JsonProperty("personal_missions")]
        public Dictionary<string,string> PersonalMissions {get; set;}

        ///<summary>
        ///Срок действия премиум аккаунта
        ///</summary>
        [JsonProperty("premium_expires_at")]
        public int? PremiumExpiresAt {get; set;}

        ///<summary>
        ///Личные резервы.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("boosters")]
        public WotAccountInfoPrivateBoosters Boosters {get; set;}

        ///<summary>
        ///Группы контактов.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("grouped_contacts")]
        public WotAccountInfoPrivateGrouped_contacts GroupedContacts {get; set;}

        ///<summary>
        ///Аренда техники.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("rented")]
        public WotAccountInfoPrivateRented Rented {get; set;}

        ///<summary>
        ///Ограничения аккаунта
        ///</summary>
        [JsonProperty("restrictions")]
        public WotAccountInfoPrivateRestrictions Restrictions {get; set;}
    }
    public class WotAccountInfoPrivateBoosters
    {

        ///<summary>
        ///Количество личных резервов
        ///</summary>
        [JsonProperty("count")]
        public Int64? Count {get; set;}

        ///<summary>
        ///Время окончания действия
        ///</summary>
        [JsonProperty("expiration_time")]
        public int? ExpirationTime {get; set;}

        ///<summary>
        ///Статус личных резервов. Допустимые значения:
///
///ACTIVE - Активны
///INACTIVE - Неактивны
///USED - Использованы
        ///</summary>
        [JsonProperty("state")]
        public string State {get; set;}
    }

    public class WotAccountInfoPrivateGrouped_contacts
    {

        ///<summary>
        ///Заблокированные
        ///</summary>
        [JsonProperty("blocked")]
        public int[] Blocked {get; set;}

        ///<summary>
        ///Группы
        ///</summary>
        [JsonProperty("groups")]
        public Dictionary<string,string> Groups {get; set;}

        ///<summary>
        ///Игнорируемые
        ///</summary>
        [JsonProperty("ignored")]
        public int[] Ignored {get; set;}

        ///<summary>
        ///Отключён звук
        ///</summary>
        [JsonProperty("muted")]
        public int[] Muted {get; set;}

        ///<summary>
        ///Не сгруппированные
        ///</summary>
        [JsonProperty("ungrouped")]
        public int[] Ungrouped {get; set;}
    }

    public class WotAccountInfoPrivateRented
    {

        ///<summary>
        ///Компенсация аренды в кредитах
        ///</summary>
        [JsonProperty("compensation_credits")]
        public Int64? CompensationCredits {get; set;}

        ///<summary>
        ///Компенсация аренды в золоте
        ///</summary>
        [JsonProperty("compensation_gold")]
        public Int64? CompensationGold {get; set;}

        ///<summary>
        ///Время окончания аренды
        ///</summary>
        [JsonProperty("expiration_time")]
        public int? ExpirationTime {get; set;}

        ///<summary>
        ///Идентификатор техники в аренде
        ///</summary>
        [JsonProperty("tank_id")]
        public Int64? TankId {get; set;}
    }

    public class WotAccountInfoPrivateRestrictions
    {

        ///<summary>
        ///Время окончания блокировки в чате
        ///</summary>
        [JsonProperty("chat_ban_time")]
        public int? ChatBanTime {get; set;}
    }


    public class WotAccountInfoStatistics
    {

        ///<summary>
        ///Количество и модели уничтоженной игроком техники. Приватные данные игрока.
        ///</summary>
        [JsonProperty("frags")]
        public Dictionary<string,string> Frags {get; set;}

        ///<summary>
        ///Количество поваленных деревьев
        ///</summary>
        [JsonProperty("trees_cut")]
        public Int64? TreesCut {get; set;}

        ///<summary>
        ///Суммарная статистика по Случайным, Ротным и клановым боям без учёта статистики боёв на Глобальной Карте 2.0
        ///</summary>
        [JsonProperty("all")]
        public WotAccountInfoStatisticsAll All {get; set;}

        ///<summary>
        ///Статистика боёв в составе клана
        ///</summary>
        [JsonProperty("clan")]
        public WotAccountInfoStatisticsClan Clan {get; set;}

        ///<summary>
        ///Статистика боёв в составе роты
        ///</summary>
        [JsonProperty("company")]
        public WotAccountInfoStatisticsCompany Company {get; set;}

        ///<summary>
        ///Статистика в режиме «Бой до последнего».
///Дополнительное поле.
        ///</summary>
        [JsonProperty("fallout")]
        public WotAccountInfoStatisticsFallout Fallout {get; set;}

        ///<summary>
        ///Статистика боёв на Глобальной карте в Абсолютном дивизионе.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("globalmap_absolute")]
        public WotAccountInfoStatisticsGlobalmap_absolute GlobalmapAbsolute {get; set;}

        ///<summary>
        ///Статистика боёв на Глобальной карте в Чемпионском дивизионе.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("globalmap_champion")]
        public WotAccountInfoStatisticsGlobalmap_champion GlobalmapChampion {get; set;}

        ///<summary>
        ///Статистика боёв на Глобальной карте в Среднем дивизионе.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("globalmap_middle")]
        public WotAccountInfoStatisticsGlobalmap_middle GlobalmapMiddle {get; set;}

        ///<summary>
        ///Статистика исторических боёв
        ///</summary>
        [JsonProperty("historical")]
        public WotAccountInfoStatisticsHistorical Historical {get; set;}

        ///<summary>
        ///Статистика случайных боёв.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("random")]
        public WotAccountInfoStatisticsRandom Random {get; set;}

        ///<summary>
        ///Статистика командных боёв постоянных команд
        ///</summary>
        [JsonProperty("regular_team")]
        public WotAccountInfoStatisticsRegular_team RegularTeam {get; set;}

        ///<summary>
        ///Общая по всем кланам статистика боёв игрока в режиме обороны Укрепрайона
        ///</summary>
        [JsonProperty("stronghold_defense")]
        public WotAccountInfoStatisticsStronghold_defense StrongholdDefense {get; set;}

        ///<summary>
        ///Общая по всем кланам статистика боёв игрока в режиме вылазок Укрепрайона
        ///</summary>
        [JsonProperty("stronghold_skirmish")]
        public WotAccountInfoStatisticsStronghold_skirmish StrongholdSkirmish {get; set;}

        ///<summary>
        ///Статистика командных боёв
        ///</summary>
        [JsonProperty("team")]
        public WotAccountInfoStatisticsTeam Team {get; set;}
    }
    public class WotAccountInfoStatisticsAll
    {

        ///<summary>
        ///Средний урон, нанесённый с вашей помощью.
///Значение считается с версии игры 8.8.
        ///</summary>
        [JsonProperty("avg_damage_assisted")]
        public double AvgDamageAssisted {get; set;}

        ///<summary>
        ///Средний урон по вашим разведданным.
///Значение считается с версии игры 8.8.
        ///</summary>
        [JsonProperty("avg_damage_assisted_radio")]
        public double AvgDamageAssistedRadio {get; set;}

        ///<summary>
        ///Средний урон после вашего попадания, сбившего гусеницу.
///Значение считается с версии игры 8.8.
        ///</summary>
        [JsonProperty("avg_damage_assisted_track")]
        public double AvgDamageAssistedTrack {get; set;}

        ///<summary>
        ///Средний заблокированный бронёй урон за бой. Заблокированный бронёй урон — это урон от снарядов (бронебойных, кумулятивных и подкалиберных), которые попали в танк, но не нанесли урона.
///Значение считается с версии игры 9.0.
        ///</summary>
        [JsonProperty("avg_damage_blocked")]
        public double AvgDamageBlocked {get; set;}

        ///<summary>
        ///Средний опыт за бой
        ///</summary>
        [JsonProperty("battle_avg_xp")]
        public Int64? BattleAvgXp {get; set;}

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Нанесено повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Получено урона
        ///</summary>
        [JsonProperty("damage_received")]
        public Int64? DamageReceived {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий
        ///</summary>
        [JsonProperty("direct_hits_received")]
        public Int64? DirectHitsReceived {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits")]
        public Int64? ExplosionHits {get; set;}

        ///<summary>
        ///Количество полученных осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits_received")]
        public Int64? ExplosionHitsReceived {get; set;}

        ///<summary>
        ///Уничтожено техники
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Процент попаданий
        ///</summary>
        [JsonProperty("hits_percents")]
        public Int64? HitsPercents {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage")]
        public Int64? MaxDamage {get; set;}

        ///<summary>
        ///Техника, на которой был нанесён максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_tank_id")]
        public Int64? MaxDamageTankId {get; set;}

        ///<summary>
        ///Максимум уничтожено за бой
        ///</summary>
        [JsonProperty("max_frags")]
        public Int64? MaxFrags {get; set;}

        ///<summary>
        ///Техника, на которой уничтожено максимальное количество противников за бой
        ///</summary>
        [JsonProperty("max_frags_tank_id")]
        public Int64? MaxFragsTankId {get; set;}

        ///<summary>
        ///Максимальный опыт за бой
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Техника, на которой получен максимальный опыт за бой
        ///</summary>
        [JsonProperty("max_xp_tank_id")]
        public Int64? MaxXpTankId {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий, не нанёсших урон
        ///</summary>
        [JsonProperty("no_damage_direct_hits_received")]
        public Int64? NoDamageDirectHitsReceived {get; set;}

        ///<summary>
        ///Количество пробитий
        ///</summary>
        [JsonProperty("piercings")]
        public Int64? Piercings {get; set;}

        ///<summary>
        ///Количество полученных пробитий
        ///</summary>
        [JsonProperty("piercings_received")]
        public Int64? PiercingsReceived {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}

        ///<summary>
        ///Обнаружено противников
        ///</summary>
        [JsonProperty("spotted")]
        public Int64? Spotted {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Отношение заблокированного бронёй урона к полученному игроком урону от бронебойных, кумулятивных, подкалиберных снарядов.
///Значение считается с версии игры 9.0.
        ///</summary>
        [JsonProperty("tanking_factor")]
        public double TankingFactor {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Суммарный опыт
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}
    }

    public class WotAccountInfoStatisticsClan
    {

        ///<summary>
        ///Средний урон, нанесённый с вашей помощью.
///Значение считается с версии игры 8.9.
        ///</summary>
        [JsonProperty("avg_damage_assisted")]
        public double AvgDamageAssisted {get; set;}

        ///<summary>
        ///Средний урон по вашим разведданным.
///Значение считается с версии игры 8.9.
        ///</summary>
        [JsonProperty("avg_damage_assisted_radio")]
        public double AvgDamageAssistedRadio {get; set;}

        ///<summary>
        ///Средний урон после вашего попадания, сбившего гусеницу.
///Значение считается с версии игры 8.9.
        ///</summary>
        [JsonProperty("avg_damage_assisted_track")]
        public double AvgDamageAssistedTrack {get; set;}

        ///<summary>
        ///Средний заблокированный бронёй урон за бой. Заблокированный бронёй урон — это урон от снарядов (бронебойных, кумулятивных и подкалиберных), которые попали в танк, но не нанесли урона.
///Значение считается с версии игры 9.0.
        ///</summary>
        [JsonProperty("avg_damage_blocked")]
        public double AvgDamageBlocked {get; set;}

        ///<summary>
        ///Средний опыт за бой
        ///</summary>
        [JsonProperty("battle_avg_xp")]
        public Int64? BattleAvgXp {get; set;}

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Нанесено повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Получено урона
        ///</summary>
        [JsonProperty("damage_received")]
        public Int64? DamageReceived {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий
        ///</summary>
        [JsonProperty("direct_hits_received")]
        public Int64? DirectHitsReceived {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits")]
        public Int64? ExplosionHits {get; set;}

        ///<summary>
        ///Количество полученных осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits_received")]
        public Int64? ExplosionHitsReceived {get; set;}

        ///<summary>
        ///Уничтожено техники
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Процент попаданий
        ///</summary>
        [JsonProperty("hits_percents")]
        public Int64? HitsPercents {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий, не нанёсших урон
        ///</summary>
        [JsonProperty("no_damage_direct_hits_received")]
        public Int64? NoDamageDirectHitsReceived {get; set;}

        ///<summary>
        ///Количество пробитий
        ///</summary>
        [JsonProperty("piercings")]
        public Int64? Piercings {get; set;}

        ///<summary>
        ///Количество полученных пробитий
        ///</summary>
        [JsonProperty("piercings_received")]
        public Int64? PiercingsReceived {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}

        ///<summary>
        ///Обнаружено противников
        ///</summary>
        [JsonProperty("spotted")]
        public Int64? Spotted {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Отношение заблокированного бронёй урона к полученному игроком урону от бронебойных, кумулятивных, подкалиберных снарядов.
///Значение считается с версии игры 9.0.
        ///</summary>
        [JsonProperty("tanking_factor")]
        public double TankingFactor {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Суммарный опыт
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}
    }

    public class WotAccountInfoStatisticsCompany
    {

        ///<summary>
        ///Средний урон, нанесённый с вашей помощью.
///Значение считается с версии игры 8.9.
        ///</summary>
        [JsonProperty("avg_damage_assisted")]
        public double AvgDamageAssisted {get; set;}

        ///<summary>
        ///Средний урон по вашим разведданным.
///Значение считается с версии игры 8.9.
        ///</summary>
        [JsonProperty("avg_damage_assisted_radio")]
        public double AvgDamageAssistedRadio {get; set;}

        ///<summary>
        ///Средний урон после вашего попадания, сбившего гусеницу.
///Значение считается с версии игры 8.9.
        ///</summary>
        [JsonProperty("avg_damage_assisted_track")]
        public double AvgDamageAssistedTrack {get; set;}

        ///<summary>
        ///Средний заблокированный бронёй урон за бой. Заблокированный бронёй урон — это урон от снарядов (бронебойных, кумулятивных и подкалиберных), которые попали в танк, но не нанесли урона.
///Значение считается с версии игры 9.0.
        ///</summary>
        [JsonProperty("avg_damage_blocked")]
        public double AvgDamageBlocked {get; set;}

        ///<summary>
        ///Средний опыт за бой
        ///</summary>
        [JsonProperty("battle_avg_xp")]
        public Int64? BattleAvgXp {get; set;}

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Нанесено повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Получено урона
        ///</summary>
        [JsonProperty("damage_received")]
        public Int64? DamageReceived {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий
        ///</summary>
        [JsonProperty("direct_hits_received")]
        public Int64? DirectHitsReceived {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits")]
        public Int64? ExplosionHits {get; set;}

        ///<summary>
        ///Количество полученных осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits_received")]
        public Int64? ExplosionHitsReceived {get; set;}

        ///<summary>
        ///Уничтожено техники
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Процент попаданий
        ///</summary>
        [JsonProperty("hits_percents")]
        public Int64? HitsPercents {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий, не нанёсших урон
        ///</summary>
        [JsonProperty("no_damage_direct_hits_received")]
        public Int64? NoDamageDirectHitsReceived {get; set;}

        ///<summary>
        ///Количество пробитий
        ///</summary>
        [JsonProperty("piercings")]
        public Int64? Piercings {get; set;}

        ///<summary>
        ///Количество полученных пробитий
        ///</summary>
        [JsonProperty("piercings_received")]
        public Int64? PiercingsReceived {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}

        ///<summary>
        ///Обнаружено противников
        ///</summary>
        [JsonProperty("spotted")]
        public Int64? Spotted {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Отношение заблокированного бронёй урона к полученному игроком урону от бронебойных, кумулятивных, подкалиберных снарядов.
///Значение считается с версии игры 9.0.
        ///</summary>
        [JsonProperty("tanking_factor")]
        public double TankingFactor {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Суммарный опыт
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}
    }

    public class WotAccountInfoStatisticsFallout
    {

        ///<summary>
        ///Урон, нанесённый при помощи боевых резервов
        ///</summary>
        [JsonProperty("avatar_damage_dealt")]
        public Int64? AvatarDamageDealt {get; set;}

        ///<summary>
        ///Уничтожено при помощи боевых резервов
        ///</summary>
        [JsonProperty("avatar_frags")]
        public Int64? AvatarFrags {get; set;}

        ///<summary>
        ///Средний урон, нанесённый с вашей помощью
        ///</summary>
        [JsonProperty("avg_damage_assisted")]
        public double AvgDamageAssisted {get; set;}

        ///<summary>
        ///Средний урон по вашим разведданным
        ///</summary>
        [JsonProperty("avg_damage_assisted_radio")]
        public double AvgDamageAssistedRadio {get; set;}

        ///<summary>
        ///Средний урон после вашего попадания, сбившего гусеницу
        ///</summary>
        [JsonProperty("avg_damage_assisted_track")]
        public double AvgDamageAssistedTrack {get; set;}

        ///<summary>
        ///Средний заблокированный бронёй урон за бой. Заблокированный бронёй урон — это урон от снарядов (бронебойных, кумулятивных и подкалиберных), которые попали в танк, но не нанесли урона.
///Значение считается с версии игры 9.0.
        ///</summary>
        [JsonProperty("avg_damage_blocked")]
        public double AvgDamageBlocked {get; set;}

        ///<summary>
        ///Средний опыт за бой
        ///</summary>
        [JsonProperty("battle_avg_xp")]
        public Int64? BattleAvgXp {get; set;}

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Нанесено повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Получено урона
        ///</summary>
        [JsonProperty("damage_received")]
        public Int64? DamageReceived {get; set;}

        ///<summary>
        ///Погиб
        ///</summary>
        [JsonProperty("death_count")]
        public Int64? DeathCount {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий
        ///</summary>
        [JsonProperty("direct_hits_received")]
        public Int64? DirectHitsReceived {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits")]
        public Int64? ExplosionHits {get; set;}

        ///<summary>
        ///Количество полученных осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits_received")]
        public Int64? ExplosionHitsReceived {get; set;}

        ///<summary>
        ///Захвачено флагов в составе взвода
        ///</summary>
        [JsonProperty("flag_capture")]
        public Int64? FlagCapture {get; set;}

        ///<summary>
        ///Захвачено флагов в роли одиночного игрока
        ///</summary>
        [JsonProperty("flag_capture_solo")]
        public Int64? FlagCaptureSolo {get; set;}

        ///<summary>
        ///Уничтожено техники
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Процент попаданий
        ///</summary>
        [JsonProperty("hits_percents")]
        public Int64? HitsPercents {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage")]
        public Int64? MaxDamage {get; set;}

        ///<summary>
        ///Техника, на которой был нанесён максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_tank_id")]
        public Int64? MaxDamageTankId {get; set;}

        ///<summary>
        ///Максимальный урон, нанесённый в одном бою, включая урон от аватара
        ///</summary>
        [JsonProperty("max_damage_with_avatar")]
        public Int64? MaxDamageWithAvatar {get; set;}

        ///<summary>
        ///Максимум уничтожено за бой
        ///</summary>
        [JsonProperty("max_frags")]
        public Int64? MaxFrags {get; set;}

        ///<summary>
        ///Техника, на которой уничтожено максимальное количество противников за бой
        ///</summary>
        [JsonProperty("max_frags_tank_id")]
        public Int64? MaxFragsTankId {get; set;}

        ///<summary>
        ///Максимальное количество уничтоженной техники, включая технику, уничтоженную аватаром
        ///</summary>
        [JsonProperty("max_frags_with_avatar")]
        public Int64? MaxFragsWithAvatar {get; set;}

        ///<summary>
        ///Максимальное количество Очков победы, заработанное в режиме «Бой до последнего»
        ///</summary>
        [JsonProperty("max_win_points")]
        public Int64? MaxWinPoints {get; set;}

        ///<summary>
        ///Максимальный опыт за бой
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Техника, на которой получен максимальный опыт за бой
        ///</summary>
        [JsonProperty("max_xp_tank_id")]
        public Int64? MaxXpTankId {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий, не нанёсших урон
        ///</summary>
        [JsonProperty("no_damage_direct_hits_received")]
        public Int64? NoDamageDirectHitsReceived {get; set;}

        ///<summary>
        ///Количество пробитий
        ///</summary>
        [JsonProperty("piercings")]
        public Int64? Piercings {get; set;}

        ///<summary>
        ///Количество полученных пробитий
        ///</summary>
        [JsonProperty("piercings_received")]
        public Int64? PiercingsReceived {get; set;}

        ///<summary>
        ///Ресурсы, захваченные на ресурсных точках
        ///</summary>
        [JsonProperty("resource_absorbed")]
        public Int64? ResourceAbsorbed {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}

        ///<summary>
        ///Обнаружено противников
        ///</summary>
        [JsonProperty("spotted")]
        public Int64? Spotted {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Отношение заблокированного бронёй урона к полученному игроком урону от бронебойных, кумулятивных, подкалиберных снарядов.
///Значение считается с версии игры 9.0.
        ///</summary>
        [JsonProperty("tanking_factor")]
        public double TankingFactor {get; set;}

        ///<summary>
        ///Очки победы
        ///</summary>
        [JsonProperty("win_points")]
        public Int64? WinPoints {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Суммарный опыт
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}
    }

    public class WotAccountInfoStatisticsGlobalmap_absolute
    {

        ///<summary>
        ///Средний урон, нанесённый с вашей помощью
        ///</summary>
        [JsonProperty("avg_damage_assisted")]
        public double AvgDamageAssisted {get; set;}

        ///<summary>
        ///Средний урон по вашим разведданным
        ///</summary>
        [JsonProperty("avg_damage_assisted_radio")]
        public double AvgDamageAssistedRadio {get; set;}

        ///<summary>
        ///Средний урон после вашего попадания, сбившего гусеницу
        ///</summary>
        [JsonProperty("avg_damage_assisted_track")]
        public double AvgDamageAssistedTrack {get; set;}

        ///<summary>
        ///Средний заблокированный бронёй урон за бой. Заблокированный бронёй урон — это урон от снарядов (бронебойных, кумулятивных и подкалиберных), которые попали в танк, но не нанесли урона.
///Значение считается с версии игры 9.0.
        ///</summary>
        [JsonProperty("avg_damage_blocked")]
        public double AvgDamageBlocked {get; set;}

        ///<summary>
        ///Средний опыт за бой
        ///</summary>
        [JsonProperty("battle_avg_xp")]
        public Int64? BattleAvgXp {get; set;}

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Нанесено повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Получено урона
        ///</summary>
        [JsonProperty("damage_received")]
        public Int64? DamageReceived {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий
        ///</summary>
        [JsonProperty("direct_hits_received")]
        public Int64? DirectHitsReceived {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits")]
        public Int64? ExplosionHits {get; set;}

        ///<summary>
        ///Количество полученных осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits_received")]
        public Int64? ExplosionHitsReceived {get; set;}

        ///<summary>
        ///Уничтожено техники
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Процент попаданий
        ///</summary>
        [JsonProperty("hits_percents")]
        public Int64? HitsPercents {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий, не нанёсших урон
        ///</summary>
        [JsonProperty("no_damage_direct_hits_received")]
        public Int64? NoDamageDirectHitsReceived {get; set;}

        ///<summary>
        ///Количество пробитий
        ///</summary>
        [JsonProperty("piercings")]
        public Int64? Piercings {get; set;}

        ///<summary>
        ///Количество полученных пробитий
        ///</summary>
        [JsonProperty("piercings_received")]
        public Int64? PiercingsReceived {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}

        ///<summary>
        ///Обнаружено противников
        ///</summary>
        [JsonProperty("spotted")]
        public Int64? Spotted {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Отношение заблокированного бронёй урона к полученному игроком урону от бронебойных, кумулятивных, подкалиберных снарядов.
///Значение считается с версии игры 9.0.
        ///</summary>
        [JsonProperty("tanking_factor")]
        public double TankingFactor {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Суммарный опыт
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}
    }

    public class WotAccountInfoStatisticsGlobalmap_champion
    {

        ///<summary>
        ///Средний урон, нанесённый с вашей помощью
        ///</summary>
        [JsonProperty("avg_damage_assisted")]
        public double AvgDamageAssisted {get; set;}

        ///<summary>
        ///Средний урон по вашим разведданным
        ///</summary>
        [JsonProperty("avg_damage_assisted_radio")]
        public double AvgDamageAssistedRadio {get; set;}

        ///<summary>
        ///Средний урон после вашего попадания, сбившего гусеницу
        ///</summary>
        [JsonProperty("avg_damage_assisted_track")]
        public double AvgDamageAssistedTrack {get; set;}

        ///<summary>
        ///Средний заблокированный бронёй урон за бой. Заблокированный бронёй урон — это урон от снарядов (бронебойных, кумулятивных и подкалиберных), которые попали в танк, но не нанесли урона.
///Значение считается с версии игры 9.0.
        ///</summary>
        [JsonProperty("avg_damage_blocked")]
        public double AvgDamageBlocked {get; set;}

        ///<summary>
        ///Средний опыт за бой
        ///</summary>
        [JsonProperty("battle_avg_xp")]
        public Int64? BattleAvgXp {get; set;}

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Нанесено повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Получено урона
        ///</summary>
        [JsonProperty("damage_received")]
        public Int64? DamageReceived {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий
        ///</summary>
        [JsonProperty("direct_hits_received")]
        public Int64? DirectHitsReceived {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits")]
        public Int64? ExplosionHits {get; set;}

        ///<summary>
        ///Количество полученных осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits_received")]
        public Int64? ExplosionHitsReceived {get; set;}

        ///<summary>
        ///Уничтожено техники
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Процент попаданий
        ///</summary>
        [JsonProperty("hits_percents")]
        public Int64? HitsPercents {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий, не нанёсших урон
        ///</summary>
        [JsonProperty("no_damage_direct_hits_received")]
        public Int64? NoDamageDirectHitsReceived {get; set;}

        ///<summary>
        ///Количество пробитий
        ///</summary>
        [JsonProperty("piercings")]
        public Int64? Piercings {get; set;}

        ///<summary>
        ///Количество полученных пробитий
        ///</summary>
        [JsonProperty("piercings_received")]
        public Int64? PiercingsReceived {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}

        ///<summary>
        ///Обнаружено противников
        ///</summary>
        [JsonProperty("spotted")]
        public Int64? Spotted {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Отношение заблокированного бронёй урона к полученному игроком урону от бронебойных, кумулятивных, подкалиберных снарядов.
///Значение считается с версии игры 9.0.
        ///</summary>
        [JsonProperty("tanking_factor")]
        public double TankingFactor {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Суммарный опыт
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}
    }

    public class WotAccountInfoStatisticsGlobalmap_middle
    {

        ///<summary>
        ///Средний урон, нанесённый с вашей помощью
        ///</summary>
        [JsonProperty("avg_damage_assisted")]
        public double AvgDamageAssisted {get; set;}

        ///<summary>
        ///Средний урон по вашим разведданным
        ///</summary>
        [JsonProperty("avg_damage_assisted_radio")]
        public double AvgDamageAssistedRadio {get; set;}

        ///<summary>
        ///Средний урон после вашего попадания, сбившего гусеницу
        ///</summary>
        [JsonProperty("avg_damage_assisted_track")]
        public double AvgDamageAssistedTrack {get; set;}

        ///<summary>
        ///Средний заблокированный бронёй урон за бой. Заблокированный бронёй урон — это урон от снарядов (бронебойных, кумулятивных и подкалиберных), которые попали в танк, но не нанесли урона.
///Значение считается с версии игры 9.0.
        ///</summary>
        [JsonProperty("avg_damage_blocked")]
        public double AvgDamageBlocked {get; set;}

        ///<summary>
        ///Средний опыт за бой
        ///</summary>
        [JsonProperty("battle_avg_xp")]
        public Int64? BattleAvgXp {get; set;}

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Нанесено повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Получено урона
        ///</summary>
        [JsonProperty("damage_received")]
        public Int64? DamageReceived {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий
        ///</summary>
        [JsonProperty("direct_hits_received")]
        public Int64? DirectHitsReceived {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits")]
        public Int64? ExplosionHits {get; set;}

        ///<summary>
        ///Количество полученных осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits_received")]
        public Int64? ExplosionHitsReceived {get; set;}

        ///<summary>
        ///Уничтожено техники
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Процент попаданий
        ///</summary>
        [JsonProperty("hits_percents")]
        public Int64? HitsPercents {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий, не нанёсших урон
        ///</summary>
        [JsonProperty("no_damage_direct_hits_received")]
        public Int64? NoDamageDirectHitsReceived {get; set;}

        ///<summary>
        ///Количество пробитий
        ///</summary>
        [JsonProperty("piercings")]
        public Int64? Piercings {get; set;}

        ///<summary>
        ///Количество полученных пробитий
        ///</summary>
        [JsonProperty("piercings_received")]
        public Int64? PiercingsReceived {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}

        ///<summary>
        ///Обнаружено противников
        ///</summary>
        [JsonProperty("spotted")]
        public Int64? Spotted {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Отношение заблокированного бронёй урона к полученному игроком урону от бронебойных, кумулятивных, подкалиберных снарядов.
///Значение считается с версии игры 9.0.
        ///</summary>
        [JsonProperty("tanking_factor")]
        public double TankingFactor {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Суммарный опыт
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}
    }

    public class WotAccountInfoStatisticsHistorical
    {

        ///<summary>
        ///Средний урон, нанесённый с вашей помощью
        ///</summary>
        [JsonProperty("avg_damage_assisted")]
        public double AvgDamageAssisted {get; set;}

        ///<summary>
        ///Средний урон по вашим разведданным
        ///</summary>
        [JsonProperty("avg_damage_assisted_radio")]
        public double AvgDamageAssistedRadio {get; set;}

        ///<summary>
        ///Средний урон после вашего попадания, сбившего гусеницу
        ///</summary>
        [JsonProperty("avg_damage_assisted_track")]
        public double AvgDamageAssistedTrack {get; set;}

        ///<summary>
        ///Средний заблокированный бронёй урон за бой. Заблокированный бронёй урон — это урон от снарядов (бронебойных, кумулятивных и подкалиберных), которые попали в танк, но не нанесли урона.
///Значение считается с версии игры 9.0.
        ///</summary>
        [JsonProperty("avg_damage_blocked")]
        public double AvgDamageBlocked {get; set;}

        ///<summary>
        ///Средний опыт за бой
        ///</summary>
        [JsonProperty("battle_avg_xp")]
        public Int64? BattleAvgXp {get; set;}

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Нанесено повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Получено урона
        ///</summary>
        [JsonProperty("damage_received")]
        public Int64? DamageReceived {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий
        ///</summary>
        [JsonProperty("direct_hits_received")]
        public Int64? DirectHitsReceived {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits")]
        public Int64? ExplosionHits {get; set;}

        ///<summary>
        ///Количество полученных осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits_received")]
        public Int64? ExplosionHitsReceived {get; set;}

        ///<summary>
        ///Уничтожено техники
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Процент попаданий
        ///</summary>
        [JsonProperty("hits_percents")]
        public Int64? HitsPercents {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage")]
        public Int64? MaxDamage {get; set;}

        ///<summary>
        ///Техника, на которой был нанесён максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_tank_id")]
        public Int64? MaxDamageTankId {get; set;}

        ///<summary>
        ///Максимум уничтожено за бой
        ///</summary>
        [JsonProperty("max_frags")]
        public Int64? MaxFrags {get; set;}

        ///<summary>
        ///Техника, на которой уничтожено максимальное количество противников за бой
        ///</summary>
        [JsonProperty("max_frags_tank_id")]
        public Int64? MaxFragsTankId {get; set;}

        ///<summary>
        ///Максимальный опыт за бой
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Техника, на которой получен максимальный опыт за бой
        ///</summary>
        [JsonProperty("max_xp_tank_id")]
        public Int64? MaxXpTankId {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий, не нанёсших урон
        ///</summary>
        [JsonProperty("no_damage_direct_hits_received")]
        public Int64? NoDamageDirectHitsReceived {get; set;}

        ///<summary>
        ///Количество пробитий
        ///</summary>
        [JsonProperty("piercings")]
        public Int64? Piercings {get; set;}

        ///<summary>
        ///Количество полученных пробитий
        ///</summary>
        [JsonProperty("piercings_received")]
        public Int64? PiercingsReceived {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}

        ///<summary>
        ///Обнаружено противников
        ///</summary>
        [JsonProperty("spotted")]
        public Int64? Spotted {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Отношение заблокированного бронёй урона к полученному игроком урону от бронебойных, кумулятивных, подкалиберных снарядов.
///Значение считается с версии игры 9.0.
        ///</summary>
        [JsonProperty("tanking_factor")]
        public double TankingFactor {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Суммарный опыт
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}
    }

    public class WotAccountInfoStatisticsRandom
    {

        ///<summary>
        ///Средний урон, нанесённый с вашей помощью
        ///</summary>
        [JsonProperty("avg_damage_assisted")]
        public double AvgDamageAssisted {get; set;}

        ///<summary>
        ///Средний урон по вашим разведданным
        ///</summary>
        [JsonProperty("avg_damage_assisted_radio")]
        public double AvgDamageAssistedRadio {get; set;}

        ///<summary>
        ///Средний урон после вашего попадания, сбившего гусеницу
        ///</summary>
        [JsonProperty("avg_damage_assisted_track")]
        public double AvgDamageAssistedTrack {get; set;}

        ///<summary>
        ///Средний заблокированный бронёй урон за бой. Заблокированный бронёй урон — это урон от снарядов (бронебойных, кумулятивных и подкалиберных), которые попали в танк, но не нанесли урона.
///Значение считается с версии игры 9.0.
        ///</summary>
        [JsonProperty("avg_damage_blocked")]
        public double AvgDamageBlocked {get; set;}

        ///<summary>
        ///Средний опыт за бой
        ///</summary>
        [JsonProperty("battle_avg_xp")]
        public Int64? BattleAvgXp {get; set;}

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Нанесено повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Получено урона
        ///</summary>
        [JsonProperty("damage_received")]
        public Int64? DamageReceived {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий
        ///</summary>
        [JsonProperty("direct_hits_received")]
        public Int64? DirectHitsReceived {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits")]
        public Int64? ExplosionHits {get; set;}

        ///<summary>
        ///Количество полученных осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits_received")]
        public Int64? ExplosionHitsReceived {get; set;}

        ///<summary>
        ///Уничтожено техники
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Процент попаданий
        ///</summary>
        [JsonProperty("hits_percents")]
        public Int64? HitsPercents {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий, не нанёсших урон
        ///</summary>
        [JsonProperty("no_damage_direct_hits_received")]
        public Int64? NoDamageDirectHitsReceived {get; set;}

        ///<summary>
        ///Количество пробитий
        ///</summary>
        [JsonProperty("piercings")]
        public Int64? Piercings {get; set;}

        ///<summary>
        ///Количество полученных пробитий
        ///</summary>
        [JsonProperty("piercings_received")]
        public Int64? PiercingsReceived {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}

        ///<summary>
        ///Обнаружено противников
        ///</summary>
        [JsonProperty("spotted")]
        public Int64? Spotted {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Отношение заблокированного бронёй урона к полученному игроком урону от бронебойных, кумулятивных, подкалиберных снарядов.
///Значение считается с версии игры 9.0.
        ///</summary>
        [JsonProperty("tanking_factor")]
        public double TankingFactor {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Суммарный опыт
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}
    }

    public class WotAccountInfoStatisticsRegular_team
    {

        ///<summary>
        ///Средний урон, нанесённый с вашей помощью
        ///</summary>
        [JsonProperty("avg_damage_assisted")]
        public double AvgDamageAssisted {get; set;}

        ///<summary>
        ///Средний урон по вашим разведданным
        ///</summary>
        [JsonProperty("avg_damage_assisted_radio")]
        public double AvgDamageAssistedRadio {get; set;}

        ///<summary>
        ///Средний урон после вашего попадания, сбившего гусеницу
        ///</summary>
        [JsonProperty("avg_damage_assisted_track")]
        public double AvgDamageAssistedTrack {get; set;}

        ///<summary>
        ///Средний заблокированный бронёй урон за бой. Заблокированный бронёй урон — это урон от снарядов (бронебойных, кумулятивных и подкалиберных), которые попали в танк, но не нанесли урона.
///Значение считается с версии игры 9.0.
        ///</summary>
        [JsonProperty("avg_damage_blocked")]
        public double AvgDamageBlocked {get; set;}

        ///<summary>
        ///Средний опыт за бой
        ///</summary>
        [JsonProperty("battle_avg_xp")]
        public Int64? BattleAvgXp {get; set;}

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Нанесено повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Получено урона
        ///</summary>
        [JsonProperty("damage_received")]
        public Int64? DamageReceived {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий
        ///</summary>
        [JsonProperty("direct_hits_received")]
        public Int64? DirectHitsReceived {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits")]
        public Int64? ExplosionHits {get; set;}

        ///<summary>
        ///Количество полученных осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits_received")]
        public Int64? ExplosionHitsReceived {get; set;}

        ///<summary>
        ///Уничтожено техники
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Процент попаданий
        ///</summary>
        [JsonProperty("hits_percents")]
        public Int64? HitsPercents {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage")]
        public Int64? MaxDamage {get; set;}

        ///<summary>
        ///Техника, на которой был нанесён максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_tank_id")]
        public Int64? MaxDamageTankId {get; set;}

        ///<summary>
        ///Максимум уничтожено за бой
        ///</summary>
        [JsonProperty("max_frags")]
        public Int64? MaxFrags {get; set;}

        ///<summary>
        ///Техника, на которой уничтожено максимальное количество противников за бой
        ///</summary>
        [JsonProperty("max_frags_tank_id")]
        public Int64? MaxFragsTankId {get; set;}

        ///<summary>
        ///Максимальный опыт за бой
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Техника, на которой получен максимальный опыт за бой
        ///</summary>
        [JsonProperty("max_xp_tank_id")]
        public Int64? MaxXpTankId {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий, не нанёсших урон
        ///</summary>
        [JsonProperty("no_damage_direct_hits_received")]
        public Int64? NoDamageDirectHitsReceived {get; set;}

        ///<summary>
        ///Количество пробитий
        ///</summary>
        [JsonProperty("piercings")]
        public Int64? Piercings {get; set;}

        ///<summary>
        ///Количество полученных пробитий
        ///</summary>
        [JsonProperty("piercings_received")]
        public Int64? PiercingsReceived {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}

        ///<summary>
        ///Обнаружено противников
        ///</summary>
        [JsonProperty("spotted")]
        public Int64? Spotted {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Отношение заблокированного бронёй урона к полученному игроком урону от бронебойных, кумулятивных, подкалиберных снарядов.
///Значение считается с версии игры 9.0.
        ///</summary>
        [JsonProperty("tanking_factor")]
        public double TankingFactor {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Суммарный опыт
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}
    }

    public class WotAccountInfoStatisticsStronghold_defense
    {

        ///<summary>
        ///Средний опыт за бой
        ///</summary>
        [JsonProperty("battle_avg_xp")]
        public Int64? BattleAvgXp {get; set;}

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Нанесено повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Получено урона
        ///</summary>
        [JsonProperty("damage_received")]
        public Int64? DamageReceived {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий
        ///</summary>
        [JsonProperty("direct_hits_received")]
        public Int64? DirectHitsReceived {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits")]
        public Int64? ExplosionHits {get; set;}

        ///<summary>
        ///Количество полученных осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits_received")]
        public Int64? ExplosionHitsReceived {get; set;}

        ///<summary>
        ///Уничтожено техники
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Процент попаданий
        ///</summary>
        [JsonProperty("hits_percents")]
        public Int64? HitsPercents {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage")]
        public Int64? MaxDamage {get; set;}

        ///<summary>
        ///Техника, на которой был нанесён максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_tank_id")]
        public Int64? MaxDamageTankId {get; set;}

        ///<summary>
        ///Максимум уничтожено за бой
        ///</summary>
        [JsonProperty("max_frags")]
        public Int64? MaxFrags {get; set;}

        ///<summary>
        ///Техника, на которой уничтожено максимальное количество противников за бой
        ///</summary>
        [JsonProperty("max_frags_tank_id")]
        public Int64? MaxFragsTankId {get; set;}

        ///<summary>
        ///Максимальный опыт за бой
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Техника, на которой получен максимальный опыт за бой
        ///</summary>
        [JsonProperty("max_xp_tank_id")]
        public Int64? MaxXpTankId {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий, не нанёсших урон
        ///</summary>
        [JsonProperty("no_damage_direct_hits_received")]
        public Int64? NoDamageDirectHitsReceived {get; set;}

        ///<summary>
        ///Количество пробитий
        ///</summary>
        [JsonProperty("piercings")]
        public Int64? Piercings {get; set;}

        ///<summary>
        ///Количество полученных пробитий
        ///</summary>
        [JsonProperty("piercings_received")]
        public Int64? PiercingsReceived {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}

        ///<summary>
        ///Обнаружено противников
        ///</summary>
        [JsonProperty("spotted")]
        public Int64? Spotted {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Отношение заблокированного бронёй урона к полученному игроком урону от бронебойных, кумулятивных, подкалиберных снарядов.
///Значение считается с версии игры 9.0.
        ///</summary>
        [JsonProperty("tanking_factor")]
        public double TankingFactor {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Суммарный опыт
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}
    }

    public class WotAccountInfoStatisticsStronghold_skirmish
    {

        ///<summary>
        ///Средний опыт за бой
        ///</summary>
        [JsonProperty("battle_avg_xp")]
        public Int64? BattleAvgXp {get; set;}

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Нанесено повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Получено урона
        ///</summary>
        [JsonProperty("damage_received")]
        public Int64? DamageReceived {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий
        ///</summary>
        [JsonProperty("direct_hits_received")]
        public Int64? DirectHitsReceived {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits")]
        public Int64? ExplosionHits {get; set;}

        ///<summary>
        ///Количество полученных осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits_received")]
        public Int64? ExplosionHitsReceived {get; set;}

        ///<summary>
        ///Уничтожено техники
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Процент попаданий
        ///</summary>
        [JsonProperty("hits_percents")]
        public Int64? HitsPercents {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage")]
        public Int64? MaxDamage {get; set;}

        ///<summary>
        ///Техника, на которой был нанесён максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_tank_id")]
        public Int64? MaxDamageTankId {get; set;}

        ///<summary>
        ///Максимум уничтожено за бой
        ///</summary>
        [JsonProperty("max_frags")]
        public Int64? MaxFrags {get; set;}

        ///<summary>
        ///Техника, на которой уничтожено максимальное количество противников за бой
        ///</summary>
        [JsonProperty("max_frags_tank_id")]
        public Int64? MaxFragsTankId {get; set;}

        ///<summary>
        ///Максимальный опыт за бой
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Техника, на которой получен максимальный опыт за бой
        ///</summary>
        [JsonProperty("max_xp_tank_id")]
        public Int64? MaxXpTankId {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий, не нанёсших урон
        ///</summary>
        [JsonProperty("no_damage_direct_hits_received")]
        public Int64? NoDamageDirectHitsReceived {get; set;}

        ///<summary>
        ///Количество пробитий
        ///</summary>
        [JsonProperty("piercings")]
        public Int64? Piercings {get; set;}

        ///<summary>
        ///Количество полученных пробитий
        ///</summary>
        [JsonProperty("piercings_received")]
        public Int64? PiercingsReceived {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}

        ///<summary>
        ///Обнаружено противников
        ///</summary>
        [JsonProperty("spotted")]
        public Int64? Spotted {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Отношение заблокированного бронёй урона к полученному игроком урону от бронебойных, кумулятивных, подкалиберных снарядов.
///Значение считается с версии игры 9.0.
        ///</summary>
        [JsonProperty("tanking_factor")]
        public double TankingFactor {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Суммарный опыт
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}
    }

    public class WotAccountInfoStatisticsTeam
    {

        ///<summary>
        ///Средний урон, нанесённый с вашей помощью
        ///</summary>
        [JsonProperty("avg_damage_assisted")]
        public double AvgDamageAssisted {get; set;}

        ///<summary>
        ///Средний урон по вашим разведданным
        ///</summary>
        [JsonProperty("avg_damage_assisted_radio")]
        public double AvgDamageAssistedRadio {get; set;}

        ///<summary>
        ///Средний урон после вашего попадания, сбившего гусеницу
        ///</summary>
        [JsonProperty("avg_damage_assisted_track")]
        public double AvgDamageAssistedTrack {get; set;}

        ///<summary>
        ///Средний заблокированный бронёй урон за бой. Заблокированный бронёй урон — это урон от снарядов (бронебойных, кумулятивных и подкалиберных), которые попали в танк, но не нанесли урона.
///Значение считается с версии игры 9.0.
        ///</summary>
        [JsonProperty("avg_damage_blocked")]
        public double AvgDamageBlocked {get; set;}

        ///<summary>
        ///Средний опыт за бой
        ///</summary>
        [JsonProperty("battle_avg_xp")]
        public Int64? BattleAvgXp {get; set;}

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Нанесено повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Получено урона
        ///</summary>
        [JsonProperty("damage_received")]
        public Int64? DamageReceived {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий
        ///</summary>
        [JsonProperty("direct_hits_received")]
        public Int64? DirectHitsReceived {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits")]
        public Int64? ExplosionHits {get; set;}

        ///<summary>
        ///Количество полученных осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits_received")]
        public Int64? ExplosionHitsReceived {get; set;}

        ///<summary>
        ///Уничтожено техники
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Процент попаданий
        ///</summary>
        [JsonProperty("hits_percents")]
        public Int64? HitsPercents {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage")]
        public Int64? MaxDamage {get; set;}

        ///<summary>
        ///Техника, на которой был нанесён максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_tank_id")]
        public Int64? MaxDamageTankId {get; set;}

        ///<summary>
        ///Максимум уничтожено за бой
        ///</summary>
        [JsonProperty("max_frags")]
        public Int64? MaxFrags {get; set;}

        ///<summary>
        ///Техника, на которой уничтожено максимальное количество противников за бой
        ///</summary>
        [JsonProperty("max_frags_tank_id")]
        public Int64? MaxFragsTankId {get; set;}

        ///<summary>
        ///Максимальный опыт за бой
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Техника, на которой получен максимальный опыт за бой
        ///</summary>
        [JsonProperty("max_xp_tank_id")]
        public Int64? MaxXpTankId {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий, не нанёсших урон
        ///</summary>
        [JsonProperty("no_damage_direct_hits_received")]
        public Int64? NoDamageDirectHitsReceived {get; set;}

        ///<summary>
        ///Количество пробитий
        ///</summary>
        [JsonProperty("piercings")]
        public Int64? Piercings {get; set;}

        ///<summary>
        ///Количество полученных пробитий
        ///</summary>
        [JsonProperty("piercings_received")]
        public Int64? PiercingsReceived {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}

        ///<summary>
        ///Обнаружено противников
        ///</summary>
        [JsonProperty("spotted")]
        public Int64? Spotted {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Отношение заблокированного бронёй урона к полученному игроком урону от бронебойных, кумулятивных, подкалиберных снарядов.
///Значение считается с версии игры 9.0.
        ///</summary>
        [JsonProperty("tanking_factor")]
        public double TankingFactor {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Суммарный опыт
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}
    }




    ///<summary>
    /// Техника игрока
    /// https://ru.wargaming.net/developers/api_reference/wot/account/tanks/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/account/tanks/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/account/tanks/")]
    public class RequestWotAccountTanks:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Ключ доступа к персональным данным пользователя. Имеет срок действия. Для получения ключа доступа необходимо запросить аутентификацию.
        ///string
        ///</summary>
        [JsonProperty("access_token")]
        public string AccessToken {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор аккаунта игрока
        ///numeric, list
        ///</summary>
        [JsonProperty("account_id")]
        [FieldIsMandatory]
        public string AccountId {get; set;}

        ///<summary>
        ///Идентификатор техники игрока
        ///numeric, list
        ///</summary>
        [JsonProperty("tank_id")]
        public string TankId {get; set;}
    }
    
    ///<summary>
    ///Техника игрока
    ///</summary>
    public class ResponseWotAccountTanks:IResponse
    {

        ///<summary>
        ///Знаки классности:
///
///0 — Отсутствует
///1 — 3 степень
///2 — 2 степень
///3 — 1 степень
///4 — Мастер
        ///</summary>
        [JsonProperty("mark_of_mastery")]
        public Int64? MarkOfMastery {get; set;}

        ///<summary>
        ///Идентификатор техники
        ///</summary>
        [JsonProperty("tank_id")]
        public Int64? TankId {get; set;}

        ///<summary>
        ///Статистика машины
        ///</summary>
        [JsonProperty("statistics")]
        public WotAccountTanksStatistics Statistics {get; set;}
    }
    public class WotAccountTanksStatistics
    {

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}
    }



    ///<summary>
    /// Достижения игрока
    /// https://ru.wargaming.net/developers/api_reference/wot/account/achievements/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/account/achievements/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/account/achievements/")]
    public class RequestWotAccountAchievements:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор аккаунта игрока
        ///numeric, list
        ///</summary>
        [JsonProperty("account_id")]
        [FieldIsMandatory]
        public string AccountId {get; set;}
    }
    
    ///<summary>
    ///Достижения игрока
    ///</summary>
    public class ResponseWotAccountAchievements:IResponse
    {

        ///<summary>
        ///Полученные достижения
        ///</summary>
        [JsonProperty("achievements")]
        public Dictionary<string,string> Achievements {get; set;}

        ///<summary>
        ///Прогресс достижений
        ///</summary>
        [JsonProperty("frags")]
        public Dictionary<string,string> Frags {get; set;}

        ///<summary>
        ///Максимальные значения серийных достижений
        ///</summary>
        [JsonProperty("max_series")]
        public Dictionary<string,string> MaxSeries {get; set;}
    }


    ///<summary>
    /// Продление Access Token
    /// https://ru.wargaming.net/developers/api_reference/wot/auth/prolongate/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/auth/prolongate/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/auth/prolongate/")]
    public class RequestWotAuthProlongate:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Ключ доступа к персональным данным пользователя. Имеет срок действия. Для получения ключа доступа необходимо запросить аутентификацию.
        ///string
        ///</summary>
        [JsonProperty("access_token")]
        [FieldIsMandatory]
        public string AccessToken {get; set;}

        ///<summary>
        ///Срок действия access_token в формате UNIX. Также можно указать дельту в секундах.
///Срок действия и дельта не должны превышать две недели, начиная с настоящего времени.
        ///numeric
        ///</summary>
        [JsonProperty("expires_at")]
        public string ExpiresAt {get; set;}
    }
    
    ///<summary>
    ///Продление Access Token
    ///</summary>
    public class ResponseWotAuthProlongate:IResponse
    {

        ///<summary>
        ///Ключ доступа. Передаётся во все методы, требующие авторизацию.
        ///</summary>
        [JsonProperty("access_token")]
        public string AccessToken {get; set;}

        ///<summary>
        ///Идентификатор аккаунта игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Срок действия access_token
        ///</summary>
        [JsonProperty("expires_at")]
        public int? ExpiresAt {get; set;}
    }


    ///<summary>
    /// Выход
    /// https://ru.wargaming.net/developers/api_reference/wot/auth/logout/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/auth/logout/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/auth/logout/")]
    public class RequestWotAuthLogout:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Ключ доступа к персональным данным пользователя. Имеет срок действия. Для получения ключа доступа необходимо запросить аутентификацию.
        ///string
        ///</summary>
        [JsonProperty("access_token")]
        [FieldIsMandatory]
        public string AccessToken {get; set;}
    }
    
    ///<summary>
    ///Выход
    ///</summary>
    public class ResponseWotAuthLogout:IResponse
    {
    }


    ///<summary>
    /// Укрепрайон клана
    /// https://ru.wargaming.net/developers/api_reference/wot/stronghold/info/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/stronghold/info/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/stronghold/info/")]
    public class RequestWotStrongholdInfo:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Ключ доступа к персональным данным пользователя. Имеет срок действия. Для получения ключа доступа необходимо запросить аутентификацию.
        ///string
        ///</summary>
        [JsonProperty("access_token")]
        public string AccessToken {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор клана
        ///numeric, list
        ///</summary>
        [JsonProperty("clan_id")]
        [FieldIsMandatory]
        public string ClanId {get; set;}
    }
    
    ///<summary>
    ///Укрепрайон клана
    ///</summary>
    public class ResponseWotStrongholdInfo:IResponse
    {

        ///<summary>
        ///Общее количество боёв, проведённых кланом
        ///</summary>
        [JsonProperty("battles_count_total")]
        public Int64? BattlesCountTotal {get; set;}

        ///<summary>
        ///Количество строений
        ///</summary>
        [JsonProperty("buildings_count")]
        public Int64? BuildingsCount {get; set;}

        ///<summary>
        ///Идентификатор клана
        ///</summary>
        [JsonProperty("clan_id")]
        public Int64? ClanId {get; set;}

        ///<summary>
        ///Название клана
        ///</summary>
        [JsonProperty("clan_name")]
        public string ClanName {get; set;}

        ///<summary>
        ///Тег клана
        ///</summary>
        [JsonProperty("clan_tag")]
        public string ClanTag {get; set;}

        ///<summary>
        ///День прекращения огня. Указывает порядковый номер дня недели: 0 - понедельник, ... 6 - воскресенье. Если период обороны не активирован, значение равно -1.
        ///</summary>
        [JsonProperty("day_off")]
        public Int64? DayOff {get; set;}

        ///<summary>
        ///Показывает, что период обороны активирован
        ///</summary>
        [JsonProperty("defense_mode_is_activated")]
        public bool DefenseModeIsActivated {get; set;}

        ///<summary>
        ///Названия доступных направлений в Укрепрайоне
        ///</summary>
        [JsonProperty("directions")]
        public string[] Directions {get; set;}

        ///<summary>
        ///Количество направлений
        ///</summary>
        [JsonProperty("directions_count")]
        public Int64? DirectionsCount {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("level")]
        public Int64? Level {get; set;}

        ///<summary>
        ///Идентификатор сервера
        ///</summary>
        [JsonProperty("server")]
        public string Server {get; set;}

        ///<summary>
        ///Дата окончания периода нейтралитета
        ///</summary>
        [JsonProperty("vacation_finish")]
        public int? VacationFinish {get; set;}

        ///<summary>
        ///Дата начала периода нейтралитета
        ///</summary>
        [JsonProperty("vacation_start")]
        public int? VacationStart {get; set;}

        ///<summary>
        ///Информация о строениях по уникальным ключам их типов
        ///</summary>
        [JsonProperty("buildings")]
        public WotStrongholdInfoBuildings Buildings {get; set;}

        ///<summary>
        ///Информация об активном Периоде обороны. Если оборона отключена, полю присваивается значение null.
        ///</summary>
        [JsonProperty("defense")]
        public WotStrongholdInfoDefense Defense {get; set;}

        ///<summary>
        ///Секретные данные Укрепрайона
        ///</summary>
        [JsonProperty("private")]
        public WotStrongholdInfoPrivate Private {get; set;}

        ///<summary>
        ///Информация о вылазках
        ///</summary>
        [JsonProperty("skirmish")]
        public WotStrongholdInfoSkirmish Skirmish {get; set;}
    }
    public class WotStrongholdInfoBuildings
    {

        ///<summary>
        ///Количество игроков, которые закреплены за данным строением
        ///</summary>
        [JsonProperty("attached_account_count")]
        public Int64? AttachedAccountCount {get; set;}

        ///<summary>
        ///Список идентификаторов игроков, закреплённых за данным строением
        ///</summary>
        [JsonProperty("attached_account_ids")]
        public int[] AttachedAccountIds {get; set;}

        ///<summary>
        ///Название направления. Значение '–-' используется только для Командного центра.
        ///</summary>
        [JsonProperty("direction_name")]
        public string DirectionName {get; set;}

        ///<summary>
        ///Уровень строения
        ///</summary>
        [JsonProperty("level")]
        public Int64? Level {get; set;}

        ///<summary>
        ///Тип строения
        ///</summary>
        [JsonProperty("type")]
        public Int64? Type {get; set;}
    }

    public class WotStrongholdInfoDefense
    {

        ///<summary>
        ///Общее количество атак
        ///</summary>
        [JsonProperty("attacks_count")]
        public Int64? AttacksCount {get; set;}

        ///<summary>
        ///Эффективность Атак
        ///</summary>
        [JsonProperty("attacks_efficiency")]
        public double AttacksEfficiency {get; set;}

        ///<summary>
        ///Количество атак, в которых клан разграбил хотя бы одно вражеское строение
        ///</summary>
        [JsonProperty("attacks_wins")]
        public Int64? AttacksWins {get; set;}

        ///<summary>
        ///Общее количество боёв
        ///</summary>
        [JsonProperty("battles_count")]
        public Int64? BattlesCount {get; set;}

        ///<summary>
        ///Процент побед
        ///</summary>
        [JsonProperty("battles_win_percentage")]
        public double BattlesWinPercentage {get; set;}

        ///<summary>
        ///Количество побед в боях
        ///</summary>
        [JsonProperty("battles_wins")]
        public Int64? BattlesWins {get; set;}

        ///<summary>
        ///Количество захваченных коммандных центров
        ///</summary>
        [JsonProperty("capture_bases_count")]
        public Int64? CaptureBasesCount {get; set;}

        ///<summary>
        ///Количество разграбленных вражеских строений
        ///</summary>
        [JsonProperty("capture_buildings_count")]
        public Int64? CaptureBuildingsCount {get; set;}

        ///<summary>
        ///Количество захваченного промресурса
        ///</summary>
        [JsonProperty("capture_resources_count")]
        public Int64? CaptureResourcesCount {get; set;}

        ///<summary>
        ///Общее количество боёв за строения
        ///</summary>
        [JsonProperty("clashes_count")]
        public Int64? ClashesCount {get; set;}

        ///<summary>
        ///Процент побед в боях за строения
        ///</summary>
        [JsonProperty("clashes_win_percentage")]
        public double ClashesWinPercentage {get; set;}

        ///<summary>
        ///Количество атак, в которых клан разграбил хотя бы одно вражеское строение
        ///</summary>
        [JsonProperty("clashes_wins")]
        public Int64? ClashesWins {get; set;}

        ///<summary>
        ///Общее количество Оборон
        ///</summary>
        [JsonProperty("defenses_count")]
        public Int64? DefensesCount {get; set;}

        ///<summary>
        ///Эффективность Обороны
        ///</summary>
        [JsonProperty("defenses_efficiency")]
        public double DefensesEfficiency {get; set;}

        ///<summary>
        ///Количество Оборон, в которых клан не потерял ни одного строения
        ///</summary>
        [JsonProperty("defenses_wins")]
        public Int64? DefensesWins {get; set;}

        ///<summary>
        ///Количество потерянных коммандных центров
        ///</summary>
        [JsonProperty("loss_bases_count")]
        public Int64? LossBasesCount {get; set;}

        ///<summary>
        ///Количество разграбленных строений клана
        ///</summary>
        [JsonProperty("loss_buildings_count")]
        public Int64? LossBuildingsCount {get; set;}

        ///<summary>
        ///Количество потерянного промресурса
        ///</summary>
        [JsonProperty("loss_resources_count")]
        public Int64? LossResourcesCount {get; set;}
    }

    public class WotStrongholdInfoPrivate
    {

        ///<summary>
        ///Общее количество промресурса в Укрепрайоне
        ///</summary>
        [JsonProperty("total_resource_amount")]
        public Int64? TotalResourceAmount {get; set;}

        ///<summary>
        ///Секретная информация о строениях по уникальным ключам их типов
        ///</summary>
        [JsonProperty("buildings")]
        public WotStrongholdInfoPrivateBuildings Buildings {get; set;}

        ///<summary>
        ///Приватные данные о периоде обороны.
        ///</summary>
        [JsonProperty("defense")]
        public WotStrongholdInfoPrivateDefense Defense {get; set;}

        ///<summary>
        ///Секретная информация о вылазках
        ///</summary>
        [JsonProperty("skirmish")]
        public WotStrongholdInfoPrivateSkirmish Skirmish {get; set;}
    }
    public class WotStrongholdInfoPrivateBuildings
    {

        ///<summary>
        ///Количество промресурса в данном строении
        ///</summary>
        [JsonProperty("resource_amount")]
        public Int64? ResourceAmount {get; set;}

        ///<summary>
        ///Тип строения
        ///</summary>
        [JsonProperty("type")]
        public Int64? Type {get; set;}
    }

    public class WotStrongholdInfoPrivateDefense
    {
    }

    public class WotStrongholdInfoPrivateSkirmish
    {

        ///<summary>
        ///Количество вылазок в Абсолютном дивизионе
        ///</summary>
        [JsonProperty("absolute_battles_count")]
        public Int64? AbsoluteBattlesCount {get; set;}

        ///<summary>
        ///Количество промресурса, захваченного в вылазках Абсолютного дивизиона
        ///</summary>
        [JsonProperty("absolute_resource_capture")]
        public Int64? AbsoluteResourceCapture {get; set;}

        ///<summary>
        ///Количество вылазок в Чемпионском дивизионе
        ///</summary>
        [JsonProperty("champion_battles_count")]
        public Int64? ChampionBattlesCount {get; set;}

        ///<summary>
        ///Количество промресурса, захваченного в вылазках Чемпионского дивизиона
        ///</summary>
        [JsonProperty("champion_resource_capture")]
        public Int64? ChampionResourceCapture {get; set;}

        ///<summary>
        ///Количество вылазок в Среднем дивизионе
        ///</summary>
        [JsonProperty("middle_battles_count")]
        public Int64? MiddleBattlesCount {get; set;}

        ///<summary>
        ///Количество промресурса, захваченного в вылазках Среднего дивизиона
        ///</summary>
        [JsonProperty("middle_resource_capture")]
        public Int64? MiddleResourceCapture {get; set;}
    }


    public class WotStrongholdInfoSkirmish
    {

        ///<summary>
        ///Общее количество Вылазок
        ///</summary>
        [JsonProperty("battles_count")]
        public Int64? BattlesCount {get; set;}

        ///<summary>
        ///Количество поражений в Вылазках
        ///</summary>
        [JsonProperty("battles_losses")]
        public Int64? BattlesLosses {get; set;}

        ///<summary>
        ///Процент побед в Вылазках
        ///</summary>
        [JsonProperty("battles_win_percentage")]
        public double BattlesWinPercentage {get; set;}

        ///<summary>
        ///Количество побед в Вылазках
        ///</summary>
        [JsonProperty("battles_wins")]
        public Int64? BattlesWins {get; set;}

        ///<summary>
        ///Суммарное количество промресурса, заработанное в Вылазках.
        ///</summary>
        [JsonProperty("total_resource_capture")]
        public Int64? TotalResourceCapture {get; set;}
    }



    ///<summary>
    /// Строения
    /// https://ru.wargaming.net/developers/api_reference/wot/stronghold/buildings/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/stronghold/buildings/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/stronghold/buildings/")]
    public class RequestWotStrongholdBuildings:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}
    }
    
    ///<summary>
    ///Строения
    ///</summary>
    public class ResponseWotStrongholdBuildings:IResponse
    {

        ///<summary>
        ///Локализованное полное описание
        ///</summary>
        [JsonProperty("description")]
        public string Description {get; set;}

        ///<summary>
        ///Ссылка на изображение
        ///</summary>
        [JsonProperty("image_url")]
        public string ImageUrl {get; set;}

        ///<summary>
        ///Локализованное краткое описание
        ///</summary>
        [JsonProperty("short_description")]
        public string ShortDescription {get; set;}

        ///<summary>
        ///Локализованное название
        ///</summary>
        [JsonProperty("title")]
        public string Title {get; set;}

        ///<summary>
        ///Уникальный тип
        ///</summary>
        [JsonProperty("type")]
        public Int64? Type {get; set;}

        ///<summary>
        ///Информация о резерве
        ///</summary>
        [JsonProperty("reserve")]
        public WotStrongholdBuildingsReserve Reserve {get; set;}
    }
    public class WotStrongholdBuildingsReserve
    {

        ///<summary>
        ///Локализованное описание
        ///</summary>
        [JsonProperty("description")]
        public string Description {get; set;}

        ///<summary>
        ///Ссылка на изображение
        ///</summary>
        [JsonProperty("image_url")]
        public string ImageUrl {get; set;}

        ///<summary>
        ///Локализованное название
        ///</summary>
        [JsonProperty("title")]
        public string Title {get; set;}
    }



    ///<summary>
    /// Статистика игрока по Укрепрайону текущего клана
    /// https://ru.wargaming.net/developers/api_reference/wot/stronghold/accountstats/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/stronghold/accountstats/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/stronghold/accountstats/")]
    public class RequestWotStrongholdAccountstats:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Ключ доступа к персональным данным пользователя. Имеет срок действия. Для получения ключа доступа необходимо запросить аутентификацию.
        ///string
        ///</summary>
        [JsonProperty("access_token")]
        public string AccessToken {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор аккаунта игрока
        ///numeric, list
        ///</summary>
        [JsonProperty("account_id")]
        [FieldIsMandatory]
        public string AccountId {get; set;}
    }
    
    ///<summary>
    ///Статистика игрока по Укрепрайону текущего клана
    ///</summary>
    public class ResponseWotStrongholdAccountstats:IResponse
    {

        ///<summary>
        ///Идентификатор аккаунта игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Идентификатор клана игрока
        ///</summary>
        [JsonProperty("clan_id")]
        public Int64? ClanId {get; set;}

        ///<summary>
        ///Общее количество промресурса, заработанного игроком
        ///</summary>
        [JsonProperty("total_resources_earned")]
        public Int64? TotalResourcesEarned {get; set;}

        ///<summary>
        ///Количество промресурса, заработанного игроком за неделю
        ///</summary>
        [JsonProperty("week_resources_earned")]
        public Int64? WeekResourcesEarned {get; set;}

        ///<summary>
        ///Статистика боёв игрока в режиме обороны в текущем клане. Если у клана игрока нет Укрепрайона, полю присваивается значение null.
        ///</summary>
        [JsonProperty("stronghold_defense")]
        public WotStrongholdAccountstatsStronghold_defense StrongholdDefense {get; set;}

        ///<summary>
        ///Статистика боёв игрока в режиме вылазок в текущем клане. Если у клана игрока нет Укрепрайона, полю присваивается значение null.
        ///</summary>
        [JsonProperty("stronghold_skirmish")]
        public WotStrongholdAccountstatsStronghold_skirmish StrongholdSkirmish {get; set;}
    }
    public class WotStrongholdAccountstatsStronghold_defense
    {

        ///<summary>
        ///Средний опыт за бой
        ///</summary>
        [JsonProperty("battle_avg_xp")]
        public Int64? BattleAvgXp {get; set;}

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Нанесено повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Получено урона
        ///</summary>
        [JsonProperty("damage_received")]
        public Int64? DamageReceived {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий
        ///</summary>
        [JsonProperty("direct_hits_received")]
        public Int64? DirectHitsReceived {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits")]
        public Int64? ExplosionHits {get; set;}

        ///<summary>
        ///Количество полученных осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits_received")]
        public Int64? ExplosionHitsReceived {get; set;}

        ///<summary>
        ///Уничтожено техники
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Процент попаданий
        ///</summary>
        [JsonProperty("hits_percents")]
        public Int64? HitsPercents {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий, не нанёсших урон
        ///</summary>
        [JsonProperty("no_damage_direct_hits_received")]
        public Int64? NoDamageDirectHitsReceived {get; set;}

        ///<summary>
        ///Количество пробитий
        ///</summary>
        [JsonProperty("piercings")]
        public Int64? Piercings {get; set;}

        ///<summary>
        ///Количество полученных пробитий
        ///</summary>
        [JsonProperty("piercings_received")]
        public Int64? PiercingsReceived {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}

        ///<summary>
        ///Обнаружено противников
        ///</summary>
        [JsonProperty("spotted")]
        public Int64? Spotted {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Отношение заблокированного бронёй урона к полученному игроком урону от бронебойных, кумулятивных, подкалиберных снарядов.
///Значение считается с версии игры 9.0.
        ///</summary>
        [JsonProperty("tanking_factor")]
        public double TankingFactor {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Суммарный опыт
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}
    }

    public class WotStrongholdAccountstatsStronghold_skirmish
    {

        ///<summary>
        ///Средний опыт за бой
        ///</summary>
        [JsonProperty("battle_avg_xp")]
        public Int64? BattleAvgXp {get; set;}

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Нанесено повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Получено урона
        ///</summary>
        [JsonProperty("damage_received")]
        public Int64? DamageReceived {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий
        ///</summary>
        [JsonProperty("direct_hits_received")]
        public Int64? DirectHitsReceived {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits")]
        public Int64? ExplosionHits {get; set;}

        ///<summary>
        ///Количество полученных осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits_received")]
        public Int64? ExplosionHitsReceived {get; set;}

        ///<summary>
        ///Уничтожено техники
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Процент попаданий
        ///</summary>
        [JsonProperty("hits_percents")]
        public Int64? HitsPercents {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий, не нанёсших урон
        ///</summary>
        [JsonProperty("no_damage_direct_hits_received")]
        public Int64? NoDamageDirectHitsReceived {get; set;}

        ///<summary>
        ///Количество пробитий
        ///</summary>
        [JsonProperty("piercings")]
        public Int64? Piercings {get; set;}

        ///<summary>
        ///Количество полученных пробитий
        ///</summary>
        [JsonProperty("piercings_received")]
        public Int64? PiercingsReceived {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}

        ///<summary>
        ///Обнаружено противников
        ///</summary>
        [JsonProperty("spotted")]
        public Int64? Spotted {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Отношение заблокированного бронёй урона к полученному игроком урону от бронебойных, кумулятивных, подкалиберных снарядов.
///Значение считается с версии игры 9.0.
        ///</summary>
        [JsonProperty("tanking_factor")]
        public double TankingFactor {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Суммарный опыт
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}
    }



    ///<summary>
    /// Запланированные бои
    /// https://ru.wargaming.net/developers/api_reference/wot/stronghold/plannedbattles/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/stronghold/plannedbattles/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/stronghold/plannedbattles/")]
    public class RequestWotStrongholdPlannedbattles:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор клана
        ///numeric, list
        ///</summary>
        [JsonProperty("clan_id")]
        [FieldIsMandatory]
        public string ClanId {get; set;}
    }
    
    ///<summary>
    ///Запланированные бои
    ///</summary>
    public class ResponseWotStrongholdPlannedbattles:IResponse
    {

        ///<summary>
        ///Направление атаки
        ///</summary>
        [JsonProperty("attack_direction")]
        public string AttackDirection {get; set;}

        ///<summary>
        ///Идентификатор атакующего клана
        ///</summary>
        [JsonProperty("attacker_clan_id")]
        public Int64? AttackerClanId {get; set;}

        ///<summary>
        ///Название атакующего клана
        ///</summary>
        [JsonProperty("attacker_clan_name")]
        public string AttackerClanName {get; set;}

        ///<summary>
        ///Тег атакующего клана
        ///</summary>
        [JsonProperty("attacker_clan_tag")]
        public string AttackerClanTag {get; set;}

        ///<summary>
        ///Дата создания боя
        ///</summary>
        [JsonProperty("battle_creation_date")]
        public int? BattleCreationDate {get; set;}

        ///<summary>
        ///Запланированная дата боя
        ///</summary>
        [JsonProperty("battle_planned_date")]
        public int? BattlePlannedDate {get; set;}

        ///<summary>
        ///Тип боя (атака / оборона)
        ///</summary>
        [JsonProperty("battle_type")]
        public string BattleType {get; set;}

        ///<summary>
        ///Идентификатор обороняющегося клана
        ///</summary>
        [JsonProperty("defender_clan_id")]
        public Int64? DefenderClanId {get; set;}

        ///<summary>
        ///Название обороняющегося клана
        ///</summary>
        [JsonProperty("defender_clan_name")]
        public string DefenderClanName {get; set;}

        ///<summary>
        ///Тег обороняющегося клана
        ///</summary>
        [JsonProperty("defender_clan_tag")]
        public string DefenderClanTag {get; set;}

        ///<summary>
        ///Направление обороны
        ///</summary>
        [JsonProperty("defense_direction")]
        public string DefenseDirection {get; set;}
    }


    ///<summary>
    /// Внимание! Метод работает в тестовом режиме.
    /// Фронты
    /// https://ru.wargaming.net/developers/api_reference/wot/globalmap/fronts/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/globalmap/fronts/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/globalmap/fronts/")]
    public class RequestWotGlobalmapFronts:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Язык. Допустимые значения: 
///
///"ru" — Русский (используется по умолчанию)
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Количество возвращаемых записей (может вернуться меньше записей, но не больше 100). Если переданный лимит превышает 100, тогда автоматически выставляется лимит в 100 (по умолчанию).
        ///numeric
        ///</summary>
        [JsonProperty("limit")]
        public string Limit {get; set;}

        ///<summary>
        ///Номер страницы. По умолчанию: 1. Минимальное значение: 1.
        ///numeric
        ///</summary>
        [JsonProperty("page_no")]
        public string PageNo {get; set;}

        ///<summary>
        ///Список идентификаторов фронтов, указывающий, какие фронты необходимо возвращать
        ///string, list
        ///</summary>
        [JsonProperty("front_id")]
        public string FrontId {get; set;}
    }
    
    ///<summary>
    ///Фронты
    ///</summary>
    public class ResponseWotGlobalmapFronts:IResponse
    {

        ///<summary>
        ///Средний уровень кланов
        ///</summary>
        [JsonProperty("avg_clans_rating")]
        public Int64? AvgClansRating {get; set;}

        ///<summary>
        ///Средняя минимальная ставка
        ///</summary>
        [JsonProperty("avg_min_bet")]
        public Int64? AvgMinBet {get; set;}

        ///<summary>
        ///Средняя выигрышная ставка
        ///</summary>
        [JsonProperty("avg_won_bet")]
        public Int64? AvgWonBet {get; set;}

        ///<summary>
        ///Максимальное время боя в минутах
        ///</summary>
        [JsonProperty("battle_time_limit")]
        public Int64? BattleTimeLimit {get; set;}

        ///<summary>
        ///Стоимость покупки дивизии
        ///</summary>
        [JsonProperty("division_cost")]
        public Int64? DivisionCost {get; set;}

        ///<summary>
        ///Показывает, присутствует ли Туман войны
        ///</summary>
        [JsonProperty("fog_of_war")]
        public bool FogOfWar {get; set;}

        ///<summary>
        ///Идентификатор фронта
        ///</summary>
        [JsonProperty("front_id")]
        public string FrontId {get; set;}

        ///<summary>
        ///Название фронта
        ///</summary>
        [JsonProperty("front_name")]
        public string FrontName {get; set;}

        ///<summary>
        ///Показывает, активна ли карта
        ///</summary>
        [JsonProperty("is_active")]
        public bool IsActive {get; set;}

        ///<summary>
        ///Показывает тип карты: обычная карта или карта события
        ///</summary>
        [JsonProperty("is_event")]
        public bool IsEvent {get; set;}

        ///<summary>
        ///Максимальное количество техники в дивизионе
        ///</summary>
        [JsonProperty("max_tanks_per_division")]
        public Int64? MaxTanksPerDivision {get; set;}

        ///<summary>
        ///Максимальный уровень техники
        ///</summary>
        [JsonProperty("max_vehicle_level")]
        public Int64? MaxVehicleLevel {get; set;}

        ///<summary>
        ///Минимальное количество техники в дивизионе
        ///</summary>
        [JsonProperty("min_tanks_per_division")]
        public Int64? MinTanksPerDivision {get; set;}

        ///<summary>
        ///Минимальный уровень техники
        ///</summary>
        [JsonProperty("min_vehicle_level")]
        public Int64? MinVehicleLevel {get; set;}

        ///<summary>
        ///Количество провинций
        ///</summary>
        [JsonProperty("provinces_count")]
        public Int64? ProvincesCount {get; set;}

        ///<summary>
        ///Показывает, присутствует ли блокировка техники
        ///</summary>
        [JsonProperty("vehicle_freeze")]
        public bool VehicleFreeze {get; set;}

        ///<summary>
        ///Доступные модули
        ///</summary>
        [JsonProperty("available_extensions")]
        public WotGlobalmapFrontsAvailable_extensions AvailableExtensions {get; set;}
    }
    public class WotGlobalmapFrontsAvailable_extensions
    {

        ///<summary>
        ///Стоимость покупки модулей
        ///</summary>
        [JsonProperty("cost")]
        public Int64? Cost {get; set;}

        ///<summary>
        ///Локализованое описание стратегического эффекта
        ///</summary>
        [JsonProperty("description_strategic")]
        public string DescriptionStrategic {get; set;}

        ///<summary>
        ///Локализованое описание тактического эффекта
        ///</summary>
        [JsonProperty("description_tactical")]
        public string DescriptionTactical {get; set;}

        ///<summary>
        ///Идентификатор расходника
        ///</summary>
        [JsonProperty("extension_id")]
        public string ExtensionId {get; set;}

        ///<summary>
        ///Локализованое название cнаряжения
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Стоимость содержания модулей
        ///</summary>
        [JsonProperty("wage")]
        public Int64? Wage {get; set;}
    }



    ///<summary>
    /// Внимание! Метод работает в тестовом режиме.
    /// Провинции
    /// https://ru.wargaming.net/developers/api_reference/wot/globalmap/provinces/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/globalmap/provinces/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/globalmap/provinces/")]
    public class RequestWotGlobalmapProvinces:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Язык. Допустимые значения: 
///
///"ru" — Русский (используется по умолчанию)
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Количество возвращаемых записей (может вернуться меньше записей, но не больше 100). Если переданный лимит превышает 100, тогда автоматически выставляется лимит в 100 (по умолчанию).
        ///numeric
        ///</summary>
        [JsonProperty("limit")]
        public string Limit {get; set;}

        ///<summary>
        ///Номер страницы. По умолчанию: 1. Минимальное значение: 1.
        ///numeric
        ///</summary>
        [JsonProperty("page_no")]
        public string PageNo {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор Фронта
        ///string
        ///</summary>
        [JsonProperty("front_id")]
        [FieldIsMandatory]
        public string FrontId {get; set;}

        ///<summary>
        ///Поиск провинций со значением часа начала Прайм-тайма. Доступные значения: от 0 до 23.
        ///numeric
        ///</summary>
        [JsonProperty("prime_hour")]
        public string PrimeHour {get; set;}

        ///<summary>
        ///Поиск провинций с типом высадки. Допустимые значения: 
///
///"null" — аукционы отключены 
///"auction" — аукцион 
///"tournament" — высадочный турнир
        ///string
        ///</summary>
        [JsonProperty("landing_type")]
        public string LandingType {get; set;}

        ///<summary>
        ///Идентификатор игровой карты
        ///string
        ///</summary>
        [JsonProperty("arena_id")]
        public string ArenaId {get; set;}

        ///<summary>
        ///Поиск провинций с дневным доходом меньше или равным значению
        ///numeric
        ///</summary>
        [JsonProperty("daily_revenue_lte")]
        public string DailyRevenueLte {get; set;}

        ///<summary>
        ///Поиск провинций с дневным доходом больше или равным значению
        ///numeric
        ///</summary>
        [JsonProperty("daily_revenue_gte")]
        public string DailyRevenueGte {get; set;}

        ///<summary>
        ///Сортировка. Допустимые значения: 
///
///"province_id" — по названию провинции 
///"-province_id" — по названии провинции в обратном порядке 
///"daily_revenue" — по доходности провинции 
///"-daily_revenue" — по доходности провинции в обратном порядке 
///"prime_hour" — по Прайм-тайму 
///"-prime_hour" — по Прайм-тайму в обратном порядке
        ///string
        ///</summary>
        [JsonProperty("order_by")]
        public string OrderBy {get; set;}

        ///<summary>
        ///Фильтр по списку идентификаторов провинций
        ///string, list
        ///</summary>
        [JsonProperty("province_id")]
        public string ProvinceId {get; set;}
    }
    
    ///<summary>
    ///Провинции
    ///</summary>
    public class ResponseWotGlobalmapProvinces:IResponse
    {

        ///<summary>
        ///Идентификатор игровой карты
        ///</summary>
        [JsonProperty("arena_id")]
        public string ArenaId {get; set;}

        ///<summary>
        ///Локализованное название карты
        ///</summary>
        [JsonProperty("arena_name")]
        public string ArenaName {get; set;}

        ///<summary>
        ///Список идентификаторов атакующих кланов
        ///</summary>
        [JsonProperty("attackers")]
        public int[] Attackers {get; set;}

        ///<summary>
        ///Время начала сражений в UTC
        ///</summary>
        [JsonProperty("battles_start_at")]
        public string BattlesStartAt {get; set;}

        ///<summary>
        ///Список идентификаторов кланов участвующих в турнире
        ///</summary>
        [JsonProperty("competitors")]
        public int[] Competitors {get; set;}

        ///<summary>
        ///Текущая минимальная ставка
        ///</summary>
        [JsonProperty("current_min_bet")]
        public Int64? CurrentMinBet {get; set;}

        ///<summary>
        ///Доходность за день
        ///</summary>
        [JsonProperty("daily_revenue")]
        public Int64? DailyRevenue {get; set;}

        ///<summary>
        ///Идентификатор фронта
        ///</summary>
        [JsonProperty("front_id")]
        public string FrontId {get; set;}

        ///<summary>
        ///Название фронта
        ///</summary>
        [JsonProperty("front_name")]
        public string FrontName {get; set;}

        ///<summary>
        ///Границы провинции закрыты
        ///</summary>
        [JsonProperty("is_borders_disabled")]
        public bool IsBordersDisabled {get; set;}

        ///<summary>
        ///Тип высадки: аукцион, турнир или значение "null"
        ///</summary>
        [JsonProperty("landing_type")]
        public string LandingType {get; set;}

        ///<summary>
        ///Последняя выигрышная ставка
        ///</summary>
        [JsonProperty("last_won_bet")]
        public Int64? LastWonBet {get; set;}

        ///<summary>
        ///Максимальное количество ставок
        ///</summary>
        [JsonProperty("max_bets")]
        public Int64? MaxBets {get; set;}

        ///<summary>
        ///Список идентификаторов соседних провинций
        ///</summary>
        [JsonProperty("neighbours")]
        public string[] Neighbours {get; set;}

        ///<summary>
        ///Идентификатор клана владельца
        ///</summary>
        [JsonProperty("owner_clan_id")]
        public Int64? OwnerClanId {get; set;}

        ///<summary>
        ///Дата, когда провинция восстановит свою доходность после разграбления
        ///</summary>
        [JsonProperty("pillage_end_at")]
        public string PillageEndAt {get; set;}

        ///<summary>
        ///Прайм-тайм в UTC
        ///</summary>
        [JsonProperty("prime_time")]
        public string PrimeTime {get; set;}

        ///<summary>
        ///Идентификатор провинции
        ///</summary>
        [JsonProperty("province_id")]
        public string ProvinceId {get; set;}

        ///<summary>
        ///Название провинции
        ///</summary>
        [JsonProperty("province_name")]
        public string ProvinceName {get; set;}

        ///<summary>
        ///Уровень доходности от 0 до 11. Значение 0 означает, что доходность не повышалась.
        ///</summary>
        [JsonProperty("revenue_level")]
        public Int64? RevenueLevel {get; set;}

        ///<summary>
        ///Раунд
        ///</summary>
        [JsonProperty("round_number")]
        public Int64? RoundNumber {get; set;}

        ///<summary>
        ///Идентификатор сервера
        ///</summary>
        [JsonProperty("server")]
        public string Server {get; set;}

        ///<summary>
        ///Статус турнира: STARTED, FINISHED или null
        ///</summary>
        [JsonProperty("status")]
        public string Status {get; set;}

        ///<summary>
        ///Относительная ссылка на провинцию
        ///</summary>
        [JsonProperty("uri")]
        public string Uri {get; set;}

        ///<summary>
        ///Показывает, включен ли Передел мира
        ///</summary>
        [JsonProperty("world_redivision")]
        public bool WorldRedivision {get; set;}

        ///<summary>
        ///Текущие битвы
        ///</summary>
        [JsonProperty("active_battles")]
        public WotGlobalmapProvincesActive_battles ActiveBattles {get; set;}
    }
    public class WotGlobalmapProvincesActive_battles
    {

        ///<summary>
        ///Награда
        ///</summary>
        [JsonProperty("battle_reward")]
        public Int64? BattleReward {get; set;}

        ///<summary>
        ///Раунд
        ///</summary>
        [JsonProperty("round")]
        public Int64? Round {get; set;}

        ///<summary>
        ///Время начала битвы в UTC
        ///</summary>
        [JsonProperty("start_at")]
        public string StartAt {get; set;}

        ///<summary>
        ///Идентификатор первого клана-участника
        ///</summary>
        [JsonProperty("clan_a")]
        public WotGlobalmapProvincesActive_battlesClan_a ClanA {get; set;}

        ///<summary>
        ///Идентификатор второго клана-участника
        ///</summary>
        [JsonProperty("clan_b")]
        public WotGlobalmapProvincesActive_battlesClan_b ClanB {get; set;}
    }
    public class WotGlobalmapProvincesActive_battlesClan_a
    {

        ///<summary>
        ///Идентификатор клана
        ///</summary>
        [JsonProperty("clan_id")]
        public Int64? ClanId {get; set;}

        ///<summary>
        ///Изменения в Эло-рейтинге в результате поражения
        ///</summary>
        [JsonProperty("loose_elo_delta")]
        public Int64? LooseEloDelta {get; set;}

        ///<summary>
        ///Изменения в Эло-рейтинге в результате победы
        ///</summary>
        [JsonProperty("win_elo_delta")]
        public Int64? WinEloDelta {get; set;}
    }

    public class WotGlobalmapProvincesActive_battlesClan_b
    {

        ///<summary>
        ///Идентификатор клана
        ///</summary>
        [JsonProperty("clan_id")]
        public Int64? ClanId {get; set;}

        ///<summary>
        ///Изменения в Эло-рейтинге в результате поражения
        ///</summary>
        [JsonProperty("loose_elo_delta")]
        public Int64? LooseEloDelta {get; set;}

        ///<summary>
        ///Изменения в Эло-рейтинге в результате победы
        ///</summary>
        [JsonProperty("win_elo_delta")]
        public Int64? WinEloDelta {get; set;}
    }




    ///<summary>
    /// Внимание! Метод работает в тестовом режиме.
    /// Данные клана
    /// https://ru.wargaming.net/developers/api_reference/wot/globalmap/claninfo/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/globalmap/claninfo/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/globalmap/claninfo/")]
    public class RequestWotGlobalmapClaninfo:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Ключ доступа к персональным данным пользователя. Имеет срок действия. Для получения ключа доступа необходимо запросить аутентификацию.
        ///string
        ///</summary>
        [JsonProperty("access_token")]
        public string AccessToken {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор клана
        ///numeric, list
        ///</summary>
        [JsonProperty("clan_id")]
        [FieldIsMandatory]
        public string ClanId {get; set;}
    }
    
    ///<summary>
    ///Данные клана
    ///</summary>
    public class ResponseWotGlobalmapClaninfo:IResponse
    {

        ///<summary>
        ///Идентификатор клана
        ///</summary>
        [JsonProperty("clan_id")]
        public Int64? ClanId {get; set;}

        ///<summary>
        ///Название клана
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Тег клана
        ///</summary>
        [JsonProperty("tag")]
        public string Tag {get; set;}

        ///<summary>
        ///Секретная информация клана на Глобальной карте
        ///</summary>
        [JsonProperty("private")]
        public WotGlobalmapClaninfoPrivate Private {get; set;}

        ///<summary>
        ///Рейтинг клана на Глобальной карте
        ///</summary>
        [JsonProperty("ratings")]
        public WotGlobalmapClaninfoRatings Ratings {get; set;}

        ///<summary>
        ///Статистика клана на Глобальной карте
        ///</summary>
        [JsonProperty("statistics")]
        public WotGlobalmapClaninfoStatistics Statistics {get; set;}
    }
    public class WotGlobalmapClaninfoPrivate
    {

        ///<summary>
        ///Дневной расход очков влияния
        ///</summary>
        [JsonProperty("daily_wage")]
        public Int64? DailyWage {get; set;}

        ///<summary>
        ///Количество очков влияния
        ///</summary>
        [JsonProperty("influence")]
        public Int64? Influence {get; set;}
    }

    public class WotGlobalmapClaninfoRatings
    {

        ///<summary>
        ///Эло-рейтинг клана в Абсолютном дивизионе
        ///</summary>
        [JsonProperty("elo_10")]
        public Int64? Elo10 {get; set;}

        ///<summary>
        ///Эло-рейтинг клана в Среднем дивизионе
        ///</summary>
        [JsonProperty("elo_6")]
        public Int64? Elo6 {get; set;}

        ///<summary>
        ///Эло-рейтинг клана в Чемпионском дивизионе
        ///</summary>
        [JsonProperty("elo_8")]
        public Int64? Elo8 {get; set;}

        ///<summary>
        ///Время обновления рейтингов
        ///</summary>
        [JsonProperty("updated_at")]
        public int? UpdatedAt {get; set;}
    }

    public class WotGlobalmapClaninfoStatistics
    {

        ///<summary>
        ///Количество боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Количество боёв в Абсолютном дивизионе
        ///</summary>
        [JsonProperty("battles_10_level")]
        public Int64? Battles10Level {get; set;}

        ///<summary>
        ///Количество боёв Среднем дивизионе
        ///</summary>
        [JsonProperty("battles_6_level")]
        public Int64? Battles6Level {get; set;}

        ///<summary>
        ///Количество боёв Чемпионском дивизионе
        ///</summary>
        [JsonProperty("battles_8_level")]
        public Int64? Battles8Level {get; set;}

        ///<summary>
        ///Общее количество провинций, захваченных кланом
        ///</summary>
        [JsonProperty("captures")]
        public Int64? Captures {get; set;}

        ///<summary>
        ///Количество поражений
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Текущее количество захваченных провинций
        ///</summary>
        [JsonProperty("provinces_count")]
        public Int64? ProvincesCount {get; set;}

        ///<summary>
        ///Количество побед клана
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Количество побед в Абсолютном дивизионе
        ///</summary>
        [JsonProperty("wins_10_level")]
        public Int64? Wins10Level {get; set;}

        ///<summary>
        ///Количество побед в Среднем дивизионе
        ///</summary>
        [JsonProperty("wins_6_level")]
        public Int64? Wins6Level {get; set;}

        ///<summary>
        ///Количество побед в Чемпионском дивизионе
        ///</summary>
        [JsonProperty("wins_8_level")]
        public Int64? Wins8Level {get; set;}
    }



    ///<summary>
    /// Внимание! Метод работает в тестовом режиме.
    /// Провинции клана
    /// https://ru.wargaming.net/developers/api_reference/wot/globalmap/clanprovinces/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/globalmap/clanprovinces/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/globalmap/clanprovinces/")]
    public class RequestWotGlobalmapClanprovinces:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Ключ доступа к персональным данным пользователя. Имеет срок действия. Для получения ключа доступа необходимо запросить аутентификацию.
        ///string
        ///</summary>
        [JsonProperty("access_token")]
        public string AccessToken {get; set;}

        ///<summary>
        ///Язык. Допустимые значения: 
///
///"ru" — Русский (используется по умолчанию)
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Список идентификаторов кланов. Максимальное количество 10.
        ///numeric, list
        ///</summary>
        [JsonProperty("clan_id")]
        [FieldIsMandatory]
        public string ClanId {get; set;}
    }
    
    ///<summary>
    ///Провинции клана
    ///</summary>
    public class ResponseWotGlobalmapClanprovinces:IResponse
    {

        ///<summary>
        ///Идентификатор игровой карты
        ///</summary>
        [JsonProperty("arena_id")]
        public string ArenaId {get; set;}

        ///<summary>
        ///Локализованное название карты
        ///</summary>
        [JsonProperty("arena_name")]
        public string ArenaName {get; set;}

        ///<summary>
        ///Идентификатор клана
        ///</summary>
        [JsonProperty("clan_id")]
        public Int64? ClanId {get; set;}

        ///<summary>
        ///Доходность за день
        ///</summary>
        [JsonProperty("daily_revenue")]
        public Int64? DailyRevenue {get; set;}

        ///<summary>
        ///Идентификатор фронта
        ///</summary>
        [JsonProperty("front_id")]
        public string FrontId {get; set;}

        ///<summary>
        ///Название фронта
        ///</summary>
        [JsonProperty("front_name")]
        public string FrontName {get; set;}

        ///<summary>
        ///Показывает, является ли провинция высадочной
        ///</summary>
        [JsonProperty("landing_type")]
        public string LandingType {get; set;}

        ///<summary>
        ///Максимальный уровень техники на Фронте
        ///</summary>
        [JsonProperty("max_vehicle_level")]
        public Int64? MaxVehicleLevel {get; set;}

        ///<summary>
        ///Дата, когда провинция восстановит свою доходность после разграбления
        ///</summary>
        [JsonProperty("pillage_end_at")]
        public string PillageEndAt {get; set;}

        ///<summary>
        ///Прайм-тайм в UTC
        ///</summary>
        [JsonProperty("prime_time")]
        public string PrimeTime {get; set;}

        ///<summary>
        ///Идентификатор провинции
        ///</summary>
        [JsonProperty("province_id")]
        public string ProvinceId {get; set;}

        ///<summary>
        ///Название провинции
        ///</summary>
        [JsonProperty("province_name")]
        public string ProvinceName {get; set;}

        ///<summary>
        ///Уровень доходности от 0 до 11. Значение 0 означает, что доходность не повышалась.
        ///</summary>
        [JsonProperty("revenue_level")]
        public Int64? RevenueLevel {get; set;}

        ///<summary>
        ///Длительность владения провинцией (в ходах)
        ///</summary>
        [JsonProperty("turns_owned")]
        public Int64? TurnsOwned {get; set;}

        ///<summary>
        ///Секретная информация о провинции
        ///</summary>
        [JsonProperty("private")]
        public WotGlobalmapClanprovincesPrivate Private {get; set;}
    }
    public class WotGlobalmapClanprovincesPrivate
    {

        ///<summary>
        ///Показывает наличие связи со штабом клана
        ///</summary>
        [JsonProperty("hq_connected")]
        public bool HqConnected {get; set;}
    }



    ///<summary>
    /// Внимание! Метод работает в тестовом режиме.
    /// Бои клана
    /// https://ru.wargaming.net/developers/api_reference/wot/globalmap/clanbattles/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/globalmap/clanbattles/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/globalmap/clanbattles/")]
    public class RequestWotGlobalmapClanbattles:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Язык. Допустимые значения: 
///
///"ru" — Русский (используется по умолчанию)
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Количество возвращаемых записей (может вернуться меньше записей, но не больше 100). Если переданный лимит превышает 100, тогда автоматически выставляется лимит в 100 (по умолчанию).
        ///numeric
        ///</summary>
        [JsonProperty("limit")]
        public string Limit {get; set;}

        ///<summary>
        ///Номер страницы. По умолчанию: 1. Минимальное значение: 1.
        ///numeric
        ///</summary>
        [JsonProperty("page_no")]
        public string PageNo {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор клана
        ///numeric
        ///</summary>
        [JsonProperty("clan_id")]
        [FieldIsMandatory]
        public string ClanId {get; set;}
    }
    
    ///<summary>
    ///Бои клана
    ///</summary>
    public class ResponseWotGlobalmapClanbattles:IResponse
    {

        ///<summary>
        ///Тип атаки: наземный, аукцион, турнир
        ///</summary>
        [JsonProperty("attack_type")]
        public string AttackType {get; set;}

        ///<summary>
        ///Идентификатор клана противника
        ///</summary>
        [JsonProperty("competitor_id")]
        public Int64? CompetitorId {get; set;}

        ///<summary>
        ///Идентификатор фронта
        ///</summary>
        [JsonProperty("front_id")]
        public string FrontId {get; set;}

        ///<summary>
        ///Название фронта
        ///</summary>
        [JsonProperty("front_name")]
        public string FrontName {get; set;}

        ///<summary>
        ///Идентификатор провинции
        ///</summary>
        [JsonProperty("province_id")]
        public string ProvinceId {get; set;}

        ///<summary>
        ///Название провинции
        ///</summary>
        [JsonProperty("province_name")]
        public string ProvinceName {get; set;}

        ///<summary>
        ///Дата и время боя
        ///</summary>
        [JsonProperty("time")]
        public int? Time {get; set;}

        ///<summary>
        ///Тип боя: атака или оборона
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}

        ///<summary>
        ///Уровень техники
        ///</summary>
        [JsonProperty("vehicle_level")]
        public Int64? VehicleLevel {get; set;}
    }


    ///<summary>
    /// Сезоны
    /// https://ru.wargaming.net/developers/api_reference/wot/globalmap/seasons/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/globalmap/seasons/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/globalmap/seasons/")]
    public class RequestWotGlobalmapSeasons:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Язык. Допустимые значения: 
///
///"ru" — Русский (используется по умолчанию)
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Номер страницы. По умолчанию: 1. Минимальное значение: 1.
        ///numeric
        ///</summary>
        [JsonProperty("page_no")]
        public string PageNo {get; set;}

        ///<summary>
        ///Идентификатор сезона
        ///string
        ///</summary>
        [JsonProperty("season_id")]
        public string SeasonId {get; set;}

        ///<summary>
        ///Количество страниц. По умолчанию: 5. Минимальное значение: 1. Максимальное значение: 20.
        ///numeric
        ///</summary>
        [JsonProperty("limit")]
        public string Limit {get; set;}

        ///<summary>
        ///Возвращает сезоны, отфильтрованные по статусу. Допустимые значения: 
///
///"PLANNED" — Предстоящий сезон 
///"ACTIVE" — Текущий сезон 
///"FINISHED" — Сезон окончен
        ///string
        ///</summary>
        [JsonProperty("status")]
        public string Status {get; set;}
    }
    
    ///<summary>
    ///Сезоны
    ///</summary>
    public class ResponseWotGlobalmapSeasons:IResponse
    {

        ///<summary>
        ///Время окончания
        ///</summary>
        [JsonProperty("end")]
        public string End {get; set;}

        ///<summary>
        ///Идентификатор сезона
        ///</summary>
        [JsonProperty("season_id")]
        public string SeasonId {get; set;}

        ///<summary>
        ///Название сезона
        ///</summary>
        [JsonProperty("season_name")]
        public string SeasonName {get; set;}

        ///<summary>
        ///Время начала
        ///</summary>
        [JsonProperty("start")]
        public string Start {get; set;}

        ///<summary>
        ///Статус
        ///</summary>
        [JsonProperty("status")]
        public string Status {get; set;}

        ///<summary>
        ///Фронты. В ответе представлены только фронты сезона.
        ///</summary>
        [JsonProperty("fronts")]
        public WotGlobalmapSeasonsFronts Fronts {get; set;}
    }
    public class WotGlobalmapSeasonsFronts
    {

        ///<summary>
        ///Идентификатор фронта
        ///</summary>
        [JsonProperty("front_id")]
        public string FrontId {get; set;}

        ///<summary>
        ///Название фронта
        ///</summary>
        [JsonProperty("front_name")]
        public string FrontName {get; set;}

        ///<summary>
        ///Ссылка на фронт
        ///</summary>
        [JsonProperty("url")]
        public string Url {get; set;}
    }



    ///<summary>
    /// Данные клана по сезону
    /// https://ru.wargaming.net/developers/api_reference/wot/globalmap/seasonclaninfo/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/globalmap/seasonclaninfo/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/globalmap/seasonclaninfo/")]
    public class RequestWotGlobalmapSeasonclaninfo:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор сезона
        ///string
        ///</summary>
        [JsonProperty("season_id")]
        [FieldIsMandatory]
        public string SeasonId {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Перечень уровней техники. Допустимые значения: 
///
///"6" — Техника 6 уровня 
///"8" — Техника 8 уровня 
///"10" — Техника 10 уровня
        ///string, list
        ///</summary>
        [JsonProperty("vehicle_level")]
        [FieldIsMandatory]
        public string VehicleLevel {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор клана
        ///numeric
        ///</summary>
        [JsonProperty("clan_id")]
        [FieldIsMandatory]
        public string ClanId {get; set;}
    }
    
    ///<summary>
    ///Данные клана по сезону
    ///</summary>
    public class ResponseWotGlobalmapSeasonclaninfo:IResponse
    {

        ///<summary>
        ///Информация о клане по сезонам и уровням техники
        ///</summary>
        [JsonProperty("seasons")]
        public WotGlobalmapSeasonclaninfoSeasons Seasons {get; set;}
    }
    public class WotGlobalmapSeasonclaninfoSeasons
    {

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Рейтинг Эло
        ///</summary>
        [JsonProperty("elo")]
        public Int64? Elo {get; set;}

        ///<summary>
        ///Текущий рейтинг
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменения в рейтинге во время предыдущего хода
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Уровень техники
        ///</summary>
        [JsonProperty("vehicle_level")]
        public Int64? VehicleLevel {get; set;}

        ///<summary>
        ///Очки победы
        ///</summary>
        [JsonProperty("victory_points")]
        public Int64? VictoryPoints {get; set;}

        ///<summary>
        ///Изменение Очков победы с момента последнего расчёта хода
        ///</summary>
        [JsonProperty("victory_points_since_turn")]
        public Int64? VictoryPointsSinceTurn {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}
    }



    ///<summary>
    /// Данные аккаунта по сезону
    /// https://ru.wargaming.net/developers/api_reference/wot/globalmap/seasonaccountinfo/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/globalmap/seasonaccountinfo/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/globalmap/seasonaccountinfo/")]
    public class RequestWotGlobalmapSeasonaccountinfo:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор сезона
        ///string
        ///</summary>
        [JsonProperty("season_id")]
        [FieldIsMandatory]
        public string SeasonId {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Перечень уровней техники. Допустимые значения: 
///
///"6" — Техника 6 уровня 
///"8" — Техника 8 уровня 
///"10" — Техника 10 уровня
        ///string, list
        ///</summary>
        [JsonProperty("vehicle_level")]
        [FieldIsMandatory]
        public string VehicleLevel {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор аккаунта
        ///numeric
        ///</summary>
        [JsonProperty("account_id")]
        [FieldIsMandatory]
        public string AccountId {get; set;}
    }
    
    ///<summary>
    ///Данные аккаунта по сезону
    ///</summary>
    public class ResponseWotGlobalmapSeasonaccountinfo:IResponse
    {

        ///<summary>
        ///Информация об аккаунте по сезонам и уровням техники
        ///</summary>
        [JsonProperty("seasons")]
        public WotGlobalmapSeasonaccountinfoSeasons Seasons {get; set;}
    }
    public class WotGlobalmapSeasonaccountinfoSeasons
    {

        ///<summary>
        ///Идентификатор аккаунта
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Уровень награды
        ///</summary>
        [JsonProperty("award_level")]
        public string AwardLevel {get; set;}

        ///<summary>
        ///Проведено боёв за текущий клан
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Число боёв, которые необходимо провести в составе текущего клана, чтобы получить клановую награду за сезон
        ///</summary>
        [JsonProperty("battles_to_award")]
        public Int64? BattlesToAward {get; set;}

        ///<summary>
        ///Идентификатор клана
        ///</summary>
        [JsonProperty("clan_id")]
        public Int64? ClanId {get; set;}

        ///<summary>
        ///Рейтинг клана
        ///</summary>
        [JsonProperty("clan_rank")]
        public Int64? ClanRank {get; set;}

        ///<summary>
        ///Идентификатор сезона
        ///</summary>
        [JsonProperty("season_id")]
        public string SeasonId {get; set;}

        ///<summary>
        ///Дата обновления данных аккаунта
        ///</summary>
        [JsonProperty("updated_at")]
        public int? UpdatedAt {get; set;}

        ///<summary>
        ///Уровень техники
        ///</summary>
        [JsonProperty("vehicle_level")]
        public Int64? VehicleLevel {get; set;}
    }



    ///<summary>
    /// Рейтинг в сезоне
    /// https://ru.wargaming.net/developers/api_reference/wot/globalmap/seasonrating/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/globalmap/seasonrating/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/globalmap/seasonrating/")]
    public class RequestWotGlobalmapSeasonrating:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Номер страницы. По умолчанию: 1. Минимальное значение: 1.
        ///numeric
        ///</summary>
        [JsonProperty("page_no")]
        public string PageNo {get; set;}

        ///<summary>
        ///Количество кланов. По умолчанию: 10. Минимальное значение: 1. Максимальное значение: 100.
        ///numeric
        ///</summary>
        [JsonProperty("limit")]
        public string Limit {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор сезона
        ///string
        ///</summary>
        [JsonProperty("season_id")]
        [FieldIsMandatory]
        public string SeasonId {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Уровень техники. Допустимые значения: 
///
///"6" — Техника 6 уровня 
///"8" — Техника 8 уровня 
///"10" — Техника 10 уровня
        ///string
        ///</summary>
        [JsonProperty("vehicle_level")]
        [FieldIsMandatory]
        public string VehicleLevel {get; set;}
    }
    
    ///<summary>
    ///Рейтинг в сезоне
    ///</summary>
    public class ResponseWotGlobalmapSeasonrating:IResponse
    {

        ///<summary>
        ///Уровень награды
        ///</summary>
        [JsonProperty("award_level")]
        public string AwardLevel {get; set;}

        ///<summary>
        ///Идентификатор клана
        ///</summary>
        [JsonProperty("clan_id")]
        public Int64? ClanId {get; set;}

        ///<summary>
        ///Цвет клана
        ///</summary>
        [JsonProperty("color")]
        public string Color {get; set;}

        ///<summary>
        ///Название клана
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Текущий рейтинг
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменения в рейтинге во время предыдущего хода
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Тег клана
        ///</summary>
        [JsonProperty("tag")]
        public string Tag {get; set;}

        ///<summary>
        ///Дата подсчёта рейтинга
        ///</summary>
        [JsonProperty("updated_at")]
        public int? UpdatedAt {get; set;}

        ///<summary>
        ///Очки победы
        ///</summary>
        [JsonProperty("victory_points")]
        public Int64? VictoryPoints {get; set;}

        ///<summary>
        ///Очки победы для получения следующей награды
        ///</summary>
        [JsonProperty("victory_points_to_next_award")]
        public Int64? VictoryPointsToNextAward {get; set;}
    }


    ///<summary>
    /// Соседние позиции в клановом рейтинге сезона
    /// https://ru.wargaming.net/developers/api_reference/wot/globalmap/seasonratingneighbors/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/globalmap/seasonratingneighbors/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/globalmap/seasonratingneighbors/")]
    public class RequestWotGlobalmapSeasonratingneighbors:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор сезона
        ///string
        ///</summary>
        [JsonProperty("season_id")]
        [FieldIsMandatory]
        public string SeasonId {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Уровень техники. Допустимые значения: 
///
///"6" — Техника 6 уровня 
///"8" — Техника 8 уровня 
///"10" — Техника 10 уровня
        ///string
        ///</summary>
        [JsonProperty("vehicle_level")]
        [FieldIsMandatory]
        public string VehicleLevel {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор клана
        ///numeric
        ///</summary>
        [JsonProperty("clan_id")]
        [FieldIsMandatory]
        public string ClanId {get; set;}

        ///<summary>
        ///Количество соседних позиций По умолчанию: 10. Минимальное значение: 1. Максимальное значение: 99.
        ///numeric
        ///</summary>
        [JsonProperty("limit")]
        public string Limit {get; set;}
    }
    
    ///<summary>
    ///Соседние позиции в клановом рейтинге сезона
    ///</summary>
    public class ResponseWotGlobalmapSeasonratingneighbors:IResponse
    {

        ///<summary>
        ///Уровень награды
        ///</summary>
        [JsonProperty("award_level")]
        public string AwardLevel {get; set;}

        ///<summary>
        ///Идентификатор клана
        ///</summary>
        [JsonProperty("clan_id")]
        public Int64? ClanId {get; set;}

        ///<summary>
        ///Цвет клана
        ///</summary>
        [JsonProperty("color")]
        public string Color {get; set;}

        ///<summary>
        ///Название клана
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Текущий рейтинг
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменения в рейтинге во время предыдущего хода
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Тег клана
        ///</summary>
        [JsonProperty("tag")]
        public string Tag {get; set;}

        ///<summary>
        ///Дата подсчёта рейтинга
        ///</summary>
        [JsonProperty("updated_at")]
        public int? UpdatedAt {get; set;}

        ///<summary>
        ///Очки победы
        ///</summary>
        [JsonProperty("victory_points")]
        public Int64? VictoryPoints {get; set;}

        ///<summary>
        ///Очки победы для получения следующей награды
        ///</summary>
        [JsonProperty("victory_points_to_next_award")]
        public Int64? VictoryPointsToNextAward {get; set;}
    }


    ///<summary>
    /// События
    /// https://ru.wargaming.net/developers/api_reference/wot/globalmap/events/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/globalmap/events/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/globalmap/events/")]
    public class RequestWotGlobalmapEvents:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Язык. Допустимые значения: 
///
///"ru" — Русский (используется по умолчанию)
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Номер страницы. По умолчанию: 1. Минимальное значение: 1.
        ///numeric
        ///</summary>
        [JsonProperty("page_no")]
        public string PageNo {get; set;}

        ///<summary>
        ///Идентификатор события
        ///string
        ///</summary>
        [JsonProperty("event_id")]
        public string EventId {get; set;}

        ///<summary>
        ///Количество страниц. По умолчанию: 5. Минимальное значение: 1. Максимальное значение: 20.
        ///numeric
        ///</summary>
        [JsonProperty("limit")]
        public string Limit {get; set;}

        ///<summary>
        ///Возвращает события, отфильтрованные по статусу. Допустимые значения: 
///
///"PLANNED" — Предстоящее событие 
///"ACTIVE" — Текущее событие 
///"FINISHED" — Событие завершено
        ///string
        ///</summary>
        [JsonProperty("status")]
        public string Status {get; set;}
    }
    
    ///<summary>
    ///События
    ///</summary>
    public class ResponseWotGlobalmapEvents:IResponse
    {

        ///<summary>
        ///Время окончания
        ///</summary>
        [JsonProperty("end")]
        public string End {get; set;}

        ///<summary>
        ///Идентификатор события
        ///</summary>
        [JsonProperty("event_id")]
        public string EventId {get; set;}

        ///<summary>
        ///Название события
        ///</summary>
        [JsonProperty("event_name")]
        public string EventName {get; set;}

        ///<summary>
        ///Время начала
        ///</summary>
        [JsonProperty("start")]
        public string Start {get; set;}

        ///<summary>
        ///Статус
        ///</summary>
        [JsonProperty("status")]
        public string Status {get; set;}

        ///<summary>
        ///Фронты. В ответе представлены только фронты события.
        ///</summary>
        [JsonProperty("fronts")]
        public WotGlobalmapEventsFronts Fronts {get; set;}
    }
    public class WotGlobalmapEventsFronts
    {

        ///<summary>
        ///Идентификатор фронта
        ///</summary>
        [JsonProperty("front_id")]
        public string FrontId {get; set;}

        ///<summary>
        ///Название фронта
        ///</summary>
        [JsonProperty("front_name")]
        public string FrontName {get; set;}

        ///<summary>
        ///Ссылка на фронт
        ///</summary>
        [JsonProperty("url")]
        public string Url {get; set;}
    }



    ///<summary>
    /// Информация об участии клана в событии
    /// https://ru.wargaming.net/developers/api_reference/wot/globalmap/eventclaninfo/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/globalmap/eventclaninfo/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/globalmap/eventclaninfo/")]
    public class RequestWotGlobalmapEventclaninfo:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор события
        ///string
        ///</summary>
        [JsonProperty("event_id")]
        [FieldIsMandatory]
        public string EventId {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор фронта. Максимальное ограничение: 10.
        ///string, list
        ///</summary>
        [JsonProperty("front_id")]
        [FieldIsMandatory]
        public string FrontId {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор клана
        ///numeric
        ///</summary>
        [JsonProperty("clan_id")]
        [FieldIsMandatory]
        public string ClanId {get; set;}
    }
    
    ///<summary>
    ///Информация об участии клана в событии
    ///</summary>
    public class ResponseWotGlobalmapEventclaninfo:IResponse
    {

        ///<summary>
        ///Информация о клане по событиям и фронтам
        ///</summary>
        [JsonProperty("events")]
        public WotGlobalmapEventclaninfoEvents Events {get; set;}
    }
    public class WotGlobalmapEventclaninfoEvents
    {

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Идентификатор события
        ///</summary>
        [JsonProperty("event_id")]
        public string EventId {get; set;}

        ///<summary>
        ///Очки славы
        ///</summary>
        [JsonProperty("fame_points")]
        public Int64? FamePoints {get; set;}

        ///<summary>
        ///Изменение Очков славы с момента последнего расчёта хода
        ///</summary>
        [JsonProperty("fame_points_since_turn")]
        public Int64? FamePointsSinceTurn {get; set;}

        ///<summary>
        ///Идентификатор фронта
        ///</summary>
        [JsonProperty("front_id")]
        public string FrontId {get; set;}

        ///<summary>
        ///Текущий рейтинг
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменения в рейтинге во время предыдущего хода
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Ссылка на фронт
        ///</summary>
        [JsonProperty("url")]
        public string Url {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}
    }



    ///<summary>
    /// Задачи клана в событии
    /// https://ru.wargaming.net/developers/api_reference/wot/globalmap/eventclantasks/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/globalmap/eventclantasks/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/globalmap/eventclantasks/")]
    public class RequestWotGlobalmapEventclantasks:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Язык. Допустимые значения: 
///
///"ru" — Русский (используется по умолчанию)
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Номер страницы. По умолчанию: 1. Минимальное значение: 1.
        ///numeric
        ///</summary>
        [JsonProperty("page_no")]
        public string PageNo {get; set;}

        ///<summary>
        ///Размер страницы. По умолчанию: 5. Минимальное значение: 1. Максимальное значение: 20.
        ///numeric
        ///</summary>
        [JsonProperty("limit")]
        public string Limit {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор клана
        ///numeric
        ///</summary>
        [JsonProperty("clan_id")]
        [FieldIsMandatory]
        public string ClanId {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор события
        ///string
        ///</summary>
        [JsonProperty("event_id")]
        [FieldIsMandatory]
        public string EventId {get; set;}
    }
    
    ///<summary>
    ///Задачи клана в событии
    ///</summary>
    public class ResponseWotGlobalmapEventclantasks:IResponse
    {

        ///<summary>
        ///Идентификатор клана
        ///</summary>
        [JsonProperty("clan_id")]
        public Int64? ClanId {get; set;}

        ///<summary>
        ///Дата создания задачи
        ///</summary>
        [JsonProperty("created_at")]
        public string CreatedAt {get; set;}

        ///<summary>
        ///Идентификатор события
        ///</summary>
        [JsonProperty("event_id")]
        public string EventId {get; set;}

        ///<summary>
        ///Идентификатор фронта
        ///</summary>
        [JsonProperty("front_id")]
        public string FrontId {get; set;}

        ///<summary>
        ///Название фронта
        ///</summary>
        [JsonProperty("front_name")]
        public string FrontName {get; set;}

        ///<summary>
        ///Идентификатор провинции
        ///</summary>
        [JsonProperty("province_id")]
        public string ProvinceId {get; set;}

        ///<summary>
        ///Название провинции
        ///</summary>
        [JsonProperty("province_name")]
        public string ProvinceName {get; set;}

        ///<summary>
        ///Статус задачи
        ///</summary>
        [JsonProperty("status")]
        public string Status {get; set;}

        ///<summary>
        ///Идентификатор задачи
        ///</summary>
        [JsonProperty("task_id")]
        public Int64? TaskId {get; set;}

        ///<summary>
        ///Название задачи
        ///</summary>
        [JsonProperty("task_name")]
        public string TaskName {get; set;}

        ///<summary>
        ///Дата последнего обновления задачи
        ///</summary>
        [JsonProperty("updated_at")]
        public string UpdatedAt {get; set;}

        ///<summary>
        ///Ссылка на фронт
        ///</summary>
        [JsonProperty("url")]
        public string Url {get; set;}
    }


    ///<summary>
    /// Информация об участии аккаунта в событии
    /// https://ru.wargaming.net/developers/api_reference/wot/globalmap/eventaccountinfo/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/globalmap/eventaccountinfo/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/globalmap/eventaccountinfo/")]
    public class RequestWotGlobalmapEventaccountinfo:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор события
        ///string
        ///</summary>
        [JsonProperty("event_id")]
        [FieldIsMandatory]
        public string EventId {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор фронта. Максимальное ограничение: 10.
        ///string, list
        ///</summary>
        [JsonProperty("front_id")]
        [FieldIsMandatory]
        public string FrontId {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор аккаунта
        ///numeric
        ///</summary>
        [JsonProperty("account_id")]
        [FieldIsMandatory]
        public string AccountId {get; set;}
    }
    
    ///<summary>
    ///Информация об участии аккаунта в событии
    ///</summary>
    public class ResponseWotGlobalmapEventaccountinfo:IResponse
    {

        ///<summary>
        ///Информация об аккаунте по событиям и фронтам
        ///</summary>
        [JsonProperty("events")]
        public WotGlobalmapEventaccountinfoEvents Events {get; set;}
    }
    public class WotGlobalmapEventaccountinfoEvents
    {

        ///<summary>
        ///Идентификатор аккаунта
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Уровень награды
        ///</summary>
        [JsonProperty("award_level")]
        public string AwardLevel {get; set;}

        ///<summary>
        ///Проведено боёв за текущий клан
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Число боёв, которые необходимо провести в составе текущего клана, чтобы получить клановую награду за сезон
        ///</summary>
        [JsonProperty("battles_to_award")]
        public Int64? BattlesToAward {get; set;}

        ///<summary>
        ///Идентификатор клана
        ///</summary>
        [JsonProperty("clan_id")]
        public Int64? ClanId {get; set;}

        ///<summary>
        ///Рейтинг клана
        ///</summary>
        [JsonProperty("clan_rank")]
        public Int64? ClanRank {get; set;}

        ///<summary>
        ///Идентификатор события
        ///</summary>
        [JsonProperty("event_id")]
        public string EventId {get; set;}

        ///<summary>
        ///Очки славы
        ///</summary>
        [JsonProperty("fame_points")]
        public Int64? FamePoints {get; set;}

        ///<summary>
        ///Изменение Очков славы с момента последнего расчёта хода
        ///</summary>
        [JsonProperty("fame_points_since_turn")]
        public Int64? FamePointsSinceTurn {get; set;}

        ///<summary>
        ///Количество Очков славы, необходимое для улучшения личной награды
        ///</summary>
        [JsonProperty("fame_points_to_improve_award")]
        public Int64? FamePointsToImproveAward {get; set;}

        ///<summary>
        ///Идентификатор фронта
        ///</summary>
        [JsonProperty("front_id")]
        public string FrontId {get; set;}

        ///<summary>
        ///Текущий рейтинг
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменения в рейтинге во время предыдущего хода
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Дата обновления данных аккаунта
        ///</summary>
        [JsonProperty("updated_at")]
        public int? UpdatedAt {get; set;}

        ///<summary>
        ///Ссылка на фронт
        ///</summary>
        [JsonProperty("url")]
        public string Url {get; set;}
    }



    ///<summary>
    /// Рейтинг игрока в событии
    /// https://ru.wargaming.net/developers/api_reference/wot/globalmap/eventaccountratings/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/globalmap/eventaccountratings/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/globalmap/eventaccountratings/")]
    public class RequestWotGlobalmapEventaccountratings:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Номер страницы. По умолчанию: 1. Минимальное значение: 1.
        ///numeric
        ///</summary>
        [JsonProperty("page_no")]
        public string PageNo {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор события
        ///string
        ///</summary>
        [JsonProperty("event_id")]
        [FieldIsMandatory]
        public string EventId {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор фронта
        ///string
        ///</summary>
        [JsonProperty("front_id")]
        [FieldIsMandatory]
        public string FrontId {get; set;}

        ///<summary>
        ///Количество аккаунтов. По умолчанию: 20. Минимальное значение: 10. Максимальное значение: 100.
        ///numeric
        ///</summary>
        [JsonProperty("limit")]
        public string Limit {get; set;}

        ///<summary>
        ///Получить данные только для аккаунтов с рейтингом. Допустимые значения: 
///
///"1" — Только с рейтингом 
///"0" — Все (используется по умолчанию)
        ///numeric
        ///</summary>
        [JsonProperty("in_rating")]
        public string InRating {get; set;}
    }
    
    ///<summary>
    ///Рейтинг игрока в событии
    ///</summary>
    public class ResponseWotGlobalmapEventaccountratings:IResponse
    {

        ///<summary>
        ///Идентификатор аккаунта игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Уровень награды
        ///</summary>
        [JsonProperty("award_level")]
        public string AwardLevel {get; set;}

        ///<summary>
        ///Проведено боёв за текущий клан
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Число боёв, которые необходимо провести в составе текущего клана, чтобы получить клановую награду за сезон
        ///</summary>
        [JsonProperty("battles_to_award")]
        public Int64? BattlesToAward {get; set;}

        ///<summary>
        ///Идентификатор клана
        ///</summary>
        [JsonProperty("clan_id")]
        public Int64? ClanId {get; set;}

        ///<summary>
        ///Рейтинг клана
        ///</summary>
        [JsonProperty("clan_rank")]
        public Int64? ClanRank {get; set;}

        ///<summary>
        ///Идентификатор события
        ///</summary>
        [JsonProperty("event_id")]
        public string EventId {get; set;}

        ///<summary>
        ///Очки славы
        ///</summary>
        [JsonProperty("fame_points")]
        public Int64? FamePoints {get; set;}

        ///<summary>
        ///Количество Очков славы, необходимое для улучшения личной награды
        ///</summary>
        [JsonProperty("fame_points_to_improve_award")]
        public Int64? FamePointsToImproveAward {get; set;}

        ///<summary>
        ///Идентификатор фронта
        ///</summary>
        [JsonProperty("front_id")]
        public string FrontId {get; set;}

        ///<summary>
        ///Текущий рейтинг
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменения в рейтинге во время предыдущего хода
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Дата обновления данных аккаунта
        ///</summary>
        [JsonProperty("updated_at")]
        public int? UpdatedAt {get; set;}

        ///<summary>
        ///Ссылка на фронт
        ///</summary>
        [JsonProperty("url")]
        public string Url {get; set;}
    }


    ///<summary>
    /// Соседние позиции в рейтинге игроков события
    /// https://ru.wargaming.net/developers/api_reference/wot/globalmap/eventaccountratingneighbors/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/globalmap/eventaccountratingneighbors/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/globalmap/eventaccountratingneighbors/")]
    public class RequestWotGlobalmapEventaccountratingneighbors:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Номер страницы. По умолчанию: 1. Минимальное значение: 1.
        ///numeric
        ///</summary>
        [JsonProperty("page_no")]
        public string PageNo {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор события
        ///string
        ///</summary>
        [JsonProperty("event_id")]
        [FieldIsMandatory]
        public string EventId {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор фронта
        ///string
        ///</summary>
        [JsonProperty("front_id")]
        [FieldIsMandatory]
        public string FrontId {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор аккаунта
        ///numeric
        ///</summary>
        [JsonProperty("account_id")]
        [FieldIsMandatory]
        public string AccountId {get; set;}

        ///<summary>
        ///Количество кланов. По умолчанию: 20. Минимальное значение: 10. Максимальное значение: 100.
        ///numeric
        ///</summary>
        [JsonProperty("limit")]
        public string Limit {get; set;}

        ///<summary>
        ///Сколько соседних позиций отобразить рядом с аккаунтом. По умолчанию: 3. Минимальное значение: 1. Максимальное значение: 99.
        ///numeric
        ///</summary>
        [JsonProperty("neighbours_count")]
        public string NeighboursCount {get; set;}
    }
    
    ///<summary>
    ///Соседние позиции в рейтинге игроков события
    ///</summary>
    public class ResponseWotGlobalmapEventaccountratingneighbors:IResponse
    {

        ///<summary>
        ///Идентификатор аккаунта игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Уровень награды
        ///</summary>
        [JsonProperty("award_level")]
        public string AwardLevel {get; set;}

        ///<summary>
        ///Проведено боёв за текущий клан
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Число боёв, которые необходимо провести в составе текущего клана, чтобы получить клановую награду за сезон
        ///</summary>
        [JsonProperty("battles_to_award")]
        public Int64? BattlesToAward {get; set;}

        ///<summary>
        ///Идентификатор клана
        ///</summary>
        [JsonProperty("clan_id")]
        public Int64? ClanId {get; set;}

        ///<summary>
        ///Рейтинг клана
        ///</summary>
        [JsonProperty("clan_rank")]
        public Int64? ClanRank {get; set;}

        ///<summary>
        ///Идентификатор события
        ///</summary>
        [JsonProperty("event_id")]
        public string EventId {get; set;}

        ///<summary>
        ///Очки славы
        ///</summary>
        [JsonProperty("fame_points")]
        public Int64? FamePoints {get; set;}

        ///<summary>
        ///Количество Очков славы, необходимое для улучшения личной награды
        ///</summary>
        [JsonProperty("fame_points_to_improve_award")]
        public Int64? FamePointsToImproveAward {get; set;}

        ///<summary>
        ///Идентификатор фронта
        ///</summary>
        [JsonProperty("front_id")]
        public string FrontId {get; set;}

        ///<summary>
        ///Текущий рейтинг
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменения в рейтинге во время предыдущего хода
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Дата обновления данных аккаунта
        ///</summary>
        [JsonProperty("updated_at")]
        public int? UpdatedAt {get; set;}

        ///<summary>
        ///Ссылка на фронт
        ///</summary>
        [JsonProperty("url")]
        public string Url {get; set;}
    }


    ///<summary>
    /// Рейтинг в событии
    /// https://ru.wargaming.net/developers/api_reference/wot/globalmap/eventrating/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/globalmap/eventrating/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/globalmap/eventrating/")]
    public class RequestWotGlobalmapEventrating:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Номер страницы. По умолчанию: 1. Минимальное значение: 1.
        ///numeric
        ///</summary>
        [JsonProperty("page_no")]
        public string PageNo {get; set;}

        ///<summary>
        ///Количество кланов. По умолчанию: 10. Минимальное значение: 1. Максимальное значение: 100.
        ///numeric
        ///</summary>
        [JsonProperty("limit")]
        public string Limit {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор события
        ///string
        ///</summary>
        [JsonProperty("event_id")]
        [FieldIsMandatory]
        public string EventId {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор фронта
        ///string
        ///</summary>
        [JsonProperty("front_id")]
        [FieldIsMandatory]
        public string FrontId {get; set;}
    }
    
    ///<summary>
    ///Рейтинг в событии
    ///</summary>
    public class ResponseWotGlobalmapEventrating:IResponse
    {

        ///<summary>
        ///Уровень награды
        ///</summary>
        [JsonProperty("award_level")]
        public string AwardLevel {get; set;}

        ///<summary>
        ///Очки славы за бои
        ///</summary>
        [JsonProperty("battle_fame_points")]
        public Int64? BattleFamePoints {get; set;}

        ///<summary>
        ///Идентификатор клана
        ///</summary>
        [JsonProperty("clan_id")]
        public Int64? ClanId {get; set;}

        ///<summary>
        ///Цвет клана
        ///</summary>
        [JsonProperty("color")]
        public string Color {get; set;}

        ///<summary>
        ///Количество Очков славы, необходимое для улучшения личной награды
        ///</summary>
        [JsonProperty("fame_points_to_improve_award")]
        public Int64? FamePointsToImproveAward {get; set;}

        ///<summary>
        ///Название клана
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Текущий рейтинг
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменения в рейтинге во время предыдущего хода
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Тег клана
        ///</summary>
        [JsonProperty("tag")]
        public string Tag {get; set;}

        ///<summary>
        ///Очки славы задачи
        ///</summary>
        [JsonProperty("task_fame_points")]
        public Int64? TaskFamePoints {get; set;}

        ///<summary>
        ///Суммарное количество Очков славы
        ///</summary>
        [JsonProperty("total_fame_points")]
        public Int64? TotalFamePoints {get; set;}

        ///<summary>
        ///Дата подсчёта рейтинга
        ///</summary>
        [JsonProperty("updated_at")]
        public int? UpdatedAt {get; set;}
    }


    ///<summary>
    /// Соседние позиции в клановом рейтинге события
    /// https://ru.wargaming.net/developers/api_reference/wot/globalmap/eventratingneighbors/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/globalmap/eventratingneighbors/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/globalmap/eventratingneighbors/")]
    public class RequestWotGlobalmapEventratingneighbors:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор события
        ///string
        ///</summary>
        [JsonProperty("event_id")]
        [FieldIsMandatory]
        public string EventId {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор фронта
        ///string
        ///</summary>
        [JsonProperty("front_id")]
        [FieldIsMandatory]
        public string FrontId {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор клана
        ///numeric
        ///</summary>
        [JsonProperty("clan_id")]
        [FieldIsMandatory]
        public string ClanId {get; set;}

        ///<summary>
        ///Количество соседних позиций По умолчанию: 10. Минимальное значение: 1. Максимальное значение: 99.
        ///numeric
        ///</summary>
        [JsonProperty("limit")]
        public string Limit {get; set;}
    }
    
    ///<summary>
    ///Соседние позиции в клановом рейтинге события
    ///</summary>
    public class ResponseWotGlobalmapEventratingneighbors:IResponse
    {

        ///<summary>
        ///Уровень награды
        ///</summary>
        [JsonProperty("award_level")]
        public string AwardLevel {get; set;}

        ///<summary>
        ///Очки славы за бои
        ///</summary>
        [JsonProperty("battle_fame_points")]
        public Int64? BattleFamePoints {get; set;}

        ///<summary>
        ///Идентификатор клана
        ///</summary>
        [JsonProperty("clan_id")]
        public Int64? ClanId {get; set;}

        ///<summary>
        ///Цвет клана
        ///</summary>
        [JsonProperty("color")]
        public string Color {get; set;}

        ///<summary>
        ///Количество Очков славы, необходимое для улучшения личной награды
        ///</summary>
        [JsonProperty("fame_points_to_improve_award")]
        public Int64? FamePointsToImproveAward {get; set;}

        ///<summary>
        ///Название клана
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Текущий рейтинг
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменения в рейтинге во время предыдущего хода
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Тег клана
        ///</summary>
        [JsonProperty("tag")]
        public string Tag {get; set;}

        ///<summary>
        ///Очки славы задачи
        ///</summary>
        [JsonProperty("task_fame_points")]
        public Int64? TaskFamePoints {get; set;}

        ///<summary>
        ///Суммарное количество Очков славы
        ///</summary>
        [JsonProperty("total_fame_points")]
        public Int64? TotalFamePoints {get; set;}

        ///<summary>
        ///Дата подсчёта рейтинга
        ///</summary>
        [JsonProperty("updated_at")]
        public int? UpdatedAt {get; set;}
    }


    ///<summary>
    /// Внимание! Метод работает в тестовом режиме.
    /// Статус карты
    /// https://ru.wargaming.net/developers/api_reference/wot/globalmap/info/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/globalmap/info/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/globalmap/info/")]
    public class RequestWotGlobalmapInfo:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}
    }
    
    ///<summary>
    ///Статус карты
    ///</summary>
    public class ResponseWotGlobalmapInfo:IResponse
    {

        ///<summary>
        ///Номер последнего рассчитанного хода
        ///</summary>
        [JsonProperty("last_turn")]
        public Int64? LastTurn {get; set;}

        ///<summary>
        ///Время расчёта последнего хода в UTC
        ///</summary>
        [JsonProperty("last_turn_calculated_at")]
        public int? LastTurnCalculatedAt {get; set;}

        ///<summary>
        ///Время создания последнего рассчитанного хода в UTC
        ///</summary>
        [JsonProperty("last_turn_created_at")]
        public int? LastTurnCreatedAt {get; set;}

        ///<summary>
        ///Состояние карты: active- активна, frozen- заморожена, turn_calculation_in_progress- происходит расчёт хода
        ///</summary>
        [JsonProperty("state")]
        public string State {get; set;}
    }


    ///<summary>
    /// Внимание! Метод будет отключён.
    /// Список техники
    /// https://ru.wargaming.net/developers/api_reference/wot/encyclopedia/tanks/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/encyclopedia/tanks/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/encyclopedia/tanks/")]
    [Obsolete]
    public class RequestWotEncyclopediaTanks:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}
    }
    
    ///<summary>
    ///Список техники
    ///</summary>
    public class ResponseWotEncyclopediaTanks:IResponse
    {

        ///<summary>
        ///URL к изображению-контуру техники
        ///</summary>
        [JsonProperty("contour_image")]
        public string ContourImage {get; set;}

        ///<summary>
        ///URL к изображению техники в размере 160 x 100 пкс
        ///</summary>
        [JsonProperty("image")]
        public string Image {get; set;}

        ///<summary>
        ///URL к изображению техники в размере 124 x 31 пкс
        ///</summary>
        [JsonProperty("image_small")]
        public string ImageSmall {get; set;}

        ///<summary>
        ///Показывает, является ли техника премиум техникой
        ///</summary>
        [JsonProperty("is_premium")]
        public bool IsPremium {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("level")]
        public Int64? Level {get; set;}

        ///<summary>
        ///Название техники
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Локализованное поле name
        ///</summary>
        [JsonProperty("name_i18n")]
        public string NameI18n {get; set;}

        ///<summary>
        ///Нация
        ///</summary>
        [JsonProperty("nation")]
        public string Nation {get; set;}

        ///<summary>
        ///Локализованное поле nation
        ///</summary>
        [JsonProperty("nation_i18n")]
        public string NationI18n {get; set;}

        ///<summary>
        ///Локализованное сокращённое название техники
        ///</summary>
        [JsonProperty("short_name_i18n")]
        public string ShortNameI18n {get; set;}

        ///<summary>
        ///Идентификатор техники
        ///</summary>
        [JsonProperty("tank_id")]
        public Int64? TankId {get; set;}

        ///<summary>
        ///Тип техники
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}

        ///<summary>
        ///Локализованный тип техники
        ///</summary>
        [JsonProperty("type_i18n")]
        public string TypeI18n {get; set;}
    }


    ///<summary>
    /// Внимание! Метод будет отключён.
    /// Информация о технике
    /// https://ru.wargaming.net/developers/api_reference/wot/encyclopedia/tankinfo/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/encyclopedia/tankinfo/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/encyclopedia/tankinfo/")]
    [Obsolete]
    public class RequestWotEncyclopediaTankinfo:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор техники
        ///numeric, list
        ///</summary>
        [JsonProperty("tank_id")]
        [FieldIsMandatory]
        public string TankId {get; set;}
    }
    
    ///<summary>
    ///Информация о технике
    ///</summary>
    public class ResponseWotEncyclopediaTankinfo:IResponse
    {

        ///<summary>
        ///Скорость поворота базового шасси
        ///</summary>
        [JsonProperty("chassis_rotation_speed")]
        public Int64? ChassisRotationSpeed {get; set;}

        ///<summary>
        ///Обзор базовой башни
        ///</summary>
        [JsonProperty("circular_vision_radius")]
        public Int64? CircularVisionRadius {get; set;}

        ///<summary>
        ///URL к изображению-контуру техники
        ///</summary>
        [JsonProperty("contour_image")]
        public string ContourImage {get; set;}

        ///<summary>
        ///Мощность базового двигателя
        ///</summary>
        [JsonProperty("engine_power")]
        public Int64? EnginePower {get; set;}

        ///<summary>
        ///Максимальный урон базового орудия
        ///</summary>
        [JsonProperty("gun_damage_max")]
        public Int64? GunDamageMax {get; set;}

        ///<summary>
        ///Минимальный урон базового орудия
        ///</summary>
        [JsonProperty("gun_damage_min")]
        public Int64? GunDamageMin {get; set;}

        ///<summary>
        ///Размер боекомплекта базового орудия
        ///</summary>
        [JsonProperty("gun_max_ammo")]
        public Int64? GunMaxAmmo {get; set;}

        ///<summary>
        ///Название базового орудия
        ///</summary>
        [JsonProperty("gun_name")]
        public string GunName {get; set;}

        ///<summary>
        ///Максимальная бронепробиваемость базового орудия
        ///</summary>
        [JsonProperty("gun_piercing_power_max")]
        public Int64? GunPiercingPowerMax {get; set;}

        ///<summary>
        ///Минимальная бронепробиваемость базового орудия
        ///</summary>
        [JsonProperty("gun_piercing_power_min")]
        public Int64? GunPiercingPowerMin {get; set;}

        ///<summary>
        ///Скорострельность базового орудия
        ///</summary>
        [JsonProperty("gun_rate")]
        public double GunRate {get; set;}

        ///<summary>
        ///URL к изображению техники в размере 160 x 100 пкс
        ///</summary>
        [JsonProperty("image")]
        public string Image {get; set;}

        ///<summary>
        ///URL к изображению техники в размере 124 x 31 пкс
        ///</summary>
        [JsonProperty("image_small")]
        public string ImageSmall {get; set;}

        ///<summary>
        ///Показывает, была ли техника подарена
        ///</summary>
        [JsonProperty("is_gift")]
        public bool IsGift {get; set;}

        ///<summary>
        ///Показывает, является ли техника премиум техникой
        ///</summary>
        [JsonProperty("is_premium")]
        public bool IsPremium {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("level")]
        public Int64? Level {get; set;}

        ///<summary>
        ///Предельная масса
        ///</summary>
        [JsonProperty("limit_weight")]
        public double LimitWeight {get; set;}

        ///<summary>
        ///Прочность
        ///</summary>
        [JsonProperty("max_health")]
        public Int64? MaxHealth {get; set;}

        ///<summary>
        ///Название техники
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Локализованное поле name
        ///</summary>
        [JsonProperty("name_i18n")]
        public string NameI18n {get; set;}

        ///<summary>
        ///Нация
        ///</summary>
        [JsonProperty("nation")]
        public string Nation {get; set;}

        ///<summary>
        ///Локализованное поле nation
        ///</summary>
        [JsonProperty("nation_i18n")]
        public string NationI18n {get; set;}

        ///<summary>
        ///Стоимость покупки в кредитах
        ///</summary>
        [JsonProperty("price_credit")]
        public Int64? PriceCredit {get; set;}

        ///<summary>
        ///Стоимость покупки в золоте
        ///</summary>
        [JsonProperty("price_gold")]
        public Int64? PriceGold {get; set;}

        ///<summary>
        ///Дальность связи базовой радиостанции
        ///</summary>
        [JsonProperty("radio_distance")]
        public Int64? RadioDistance {get; set;}

        ///<summary>
        ///Локализованное сокращённое название техники
        ///</summary>
        [JsonProperty("short_name_i18n")]
        public string ShortNameI18n {get; set;}

        ///<summary>
        ///Максимальная скорость
        ///</summary>
        [JsonProperty("speed_limit")]
        public double SpeedLimit {get; set;}

        ///<summary>
        ///Идентификатор техники
        ///</summary>
        [JsonProperty("tank_id")]
        public Int64? TankId {get; set;}

        ///<summary>
        ///Бронирование базовой башни: борт
        ///</summary>
        [JsonProperty("turret_armor_board")]
        public Int64? TurretArmorBoard {get; set;}

        ///<summary>
        ///Бронирование базовой башни: корма
        ///</summary>
        [JsonProperty("turret_armor_fedd")]
        public Int64? TurretArmorFedd {get; set;}

        ///<summary>
        ///Бронирование базовой башни: лоб
        ///</summary>
        [JsonProperty("turret_armor_forehead")]
        public Int64? TurretArmorForehead {get; set;}

        ///<summary>
        ///Скорость вращения базовой башни
        ///</summary>
        [JsonProperty("turret_rotation_speed")]
        public Int64? TurretRotationSpeed {get; set;}

        ///<summary>
        ///Тип техники
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}

        ///<summary>
        ///Локализованный тип техники
        ///</summary>
        [JsonProperty("type_i18n")]
        public string TypeI18n {get; set;}

        ///<summary>
        ///Бронирование корпуса: борт
        ///</summary>
        [JsonProperty("vehicle_armor_board")]
        public Int64? VehicleArmorBoard {get; set;}

        ///<summary>
        ///Бронирование корпуса: корма
        ///</summary>
        [JsonProperty("vehicle_armor_fedd")]
        public Int64? VehicleArmorFedd {get; set;}

        ///<summary>
        ///Бронирование корпуса: лоб
        ///</summary>
        [JsonProperty("vehicle_armor_forehead")]
        public Int64? VehicleArmorForehead {get; set;}

        ///<summary>
        ///Вес
        ///</summary>
        [JsonProperty("weight")]
        public double Weight {get; set;}

        ///<summary>
        ///Совместимые ходовые
        ///</summary>
        [JsonProperty("chassis")]
        public WotEncyclopediaTankinfoChassis Chassis {get; set;}

        ///<summary>
        ///Экипаж
        ///</summary>
        [JsonProperty("crew")]
        public WotEncyclopediaTankinfoCrew Crew {get; set;}

        ///<summary>
        ///Совместимые двигатели
        ///</summary>
        [JsonProperty("engines")]
        public WotEncyclopediaTankinfoEngines Engines {get; set;}

        ///<summary>
        ///Совместимые орудия
        ///</summary>
        [JsonProperty("guns")]
        public WotEncyclopediaTankinfoGuns Guns {get; set;}

        ///<summary>
        ///Совместимые радиостанции
        ///</summary>
        [JsonProperty("radios")]
        public WotEncyclopediaTankinfoRadios Radios {get; set;}

        ///<summary>
        ///Совместимые башни
        ///</summary>
        [JsonProperty("turrets")]
        public WotEncyclopediaTankinfoTurrets Turrets {get; set;}
    }
    public class WotEncyclopediaTankinfoChassis
    {

        ///<summary>
        ///Идентификатор модуля
        ///</summary>
        [JsonProperty("module_id")]
        public Int64? ModuleId {get; set;}

        ///<summary>
        ///Показывает, является ли модуль базовым
        ///</summary>
        [JsonProperty("is_default")]
        public bool IsDefault {get; set;}
    }

    public class WotEncyclopediaTankinfoCrew
    {

        ///<summary>
        ///Специальность члена экипажа
        ///</summary>
        [JsonProperty("role")]
        public string Role {get; set;}

        ///<summary>
        ///Локализованное поле role
        ///</summary>
        [JsonProperty("role_i18n")]
        public string RoleI18n {get; set;}

        ///<summary>
        ///Дополнительные специальности члена экипажа
        ///</summary>
        [JsonProperty("additional_roles_i18n")]
        public WotEncyclopediaTankinfoCrewAdditional_roles_i18n AdditionalRolesI18n {get; set;}
    }
    public class WotEncyclopediaTankinfoCrewAdditional_roles_i18n
    {

        ///<summary>
        ///Специальность члена экипажа
        ///</summary>
        [JsonProperty("role")]
        public string Role {get; set;}

        ///<summary>
        ///Локализованное поле role
        ///</summary>
        [JsonProperty("role_i18n")]
        public string RoleI18n {get; set;}
    }


    public class WotEncyclopediaTankinfoEngines
    {

        ///<summary>
        ///Идентификатор модуля
        ///</summary>
        [JsonProperty("module_id")]
        public Int64? ModuleId {get; set;}

        ///<summary>
        ///Показывает, является ли модуль базовым
        ///</summary>
        [JsonProperty("is_default")]
        public bool IsDefault {get; set;}
    }

    public class WotEncyclopediaTankinfoGuns
    {

        ///<summary>
        ///Идентификатор модуля
        ///</summary>
        [JsonProperty("module_id")]
        public Int64? ModuleId {get; set;}

        ///<summary>
        ///Показывает, является ли модуль базовым
        ///</summary>
        [JsonProperty("is_default")]
        public bool IsDefault {get; set;}
    }

    public class WotEncyclopediaTankinfoRadios
    {

        ///<summary>
        ///Идентификатор модуля
        ///</summary>
        [JsonProperty("module_id")]
        public Int64? ModuleId {get; set;}

        ///<summary>
        ///Показывает, является ли модуль базовым
        ///</summary>
        [JsonProperty("is_default")]
        public bool IsDefault {get; set;}
    }

    public class WotEncyclopediaTankinfoTurrets
    {

        ///<summary>
        ///Идентификатор модуля
        ///</summary>
        [JsonProperty("module_id")]
        public Int64? ModuleId {get; set;}

        ///<summary>
        ///Показывает, является ли модуль базовым
        ///</summary>
        [JsonProperty("is_default")]
        public bool IsDefault {get; set;}
    }



    ///<summary>
    /// Техника
    /// https://ru.wargaming.net/developers/api_reference/wot/encyclopedia/vehicles/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/encyclopedia/vehicles/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/encyclopedia/vehicles/")]
    public class RequestWotEncyclopediaVehicles:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Идентификатор техники
        ///numeric, list
        ///</summary>
        [JsonProperty("tank_id")]
        public string TankId {get; set;}

        ///<summary>
        ///Нация
        ///string, list
        ///</summary>
        [JsonProperty("nation")]
        public string Nation {get; set;}

        ///<summary>
        ///Тип техники. Допустимые значения: 
///
///"heavyTank" — Тяжёлый танк 
///"AT-SPG" — ПТ-САУ 
///"mediumTank" — Средний танк 
///"lightTank" — Легкий танк 
///"SPG" — САУ
        ///string
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}

        ///<summary>
        ///Уровень
        ///numeric, list
        ///</summary>
        [JsonProperty("tier")]
        public string Tier {get; set;}
    }
    
    ///<summary>
    ///Техника
    ///</summary>
    public class ResponseWotEncyclopediaVehicles:IResponse
    {

        ///<summary>
        ///Описание техники
        ///</summary>
        [JsonProperty("description")]
        public string Description {get; set;}

        ///<summary>
        ///Список идентификаторов совместимых двигателей
        ///</summary>
        [JsonProperty("engines")]
        public int[] Engines {get; set;}

        ///<summary>
        ///Список идентификаторов совместимых орудий
        ///</summary>
        [JsonProperty("guns")]
        public int[] Guns {get; set;}

        ///<summary>
        ///Показывает, является ли техника подарочной
        ///</summary>
        [JsonProperty("is_gift")]
        public bool IsGift {get; set;}

        ///<summary>
        ///Показывает, является ли техника премиум техникой
        ///</summary>
        [JsonProperty("is_premium")]
        public bool IsPremium {get; set;}

        ///<summary>
        ///Указывает технику IGR. Действительно только для корейского региона
        ///</summary>
        [JsonProperty("is_premium_igr")]
        public bool IsPremiumIgr {get; set;}

        ///<summary>
        ///Название техники
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Нация
        ///</summary>
        [JsonProperty("nation")]
        public string Nation {get; set;}

        ///<summary>
        ///Список доступной для исследования техники в виде пар:
///
///идентификатор исследуемой техники
///стоимость исследования в опыте
        ///</summary>
        [JsonProperty("next_tanks")]
        public Dictionary<string,string> NextTanks {get; set;}

        ///<summary>
        ///Стоимость в кредитах
        ///</summary>
        [JsonProperty("price_credit")]
        public Int64? PriceCredit {get; set;}

        ///<summary>
        ///Стоимость в золоте
        ///</summary>
        [JsonProperty("price_gold")]
        public Int64? PriceGold {get; set;}

        ///<summary>
        ///Список значений стоимости исследования в виде пар:
///
///идентификатор родительской техники
///стоимость исследованния в опыте
        ///</summary>
        [JsonProperty("prices_xp")]
        public Dictionary<string,string> PricesXp {get; set;}

        ///<summary>
        ///Список идентификаторов совместимого оборудования и снаряжения
        ///</summary>
        [JsonProperty("provisions")]
        public int[] Provisions {get; set;}

        ///<summary>
        ///Список идентификаторов устанавливаемых радиостанций
        ///</summary>
        [JsonProperty("radios")]
        public int[] Radios {get; set;}

        ///<summary>
        ///Сокращённое название техники
        ///</summary>
        [JsonProperty("short_name")]
        public string ShortName {get; set;}

        ///<summary>
        ///Список идентификаторов совместимых ходовых
        ///</summary>
        [JsonProperty("suspensions")]
        public int[] Suspensions {get; set;}

        ///<summary>
        ///Тег техники
        ///</summary>
        [JsonProperty("tag")]
        public string Tag {get; set;}

        ///<summary>
        ///Идентификатор техники
        ///</summary>
        [JsonProperty("tank_id")]
        public Int64? TankId {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("tier")]
        public Int64? Tier {get; set;}

        ///<summary>
        ///Список идентификаторов совместимых башен
        ///</summary>
        [JsonProperty("turrets")]
        public int[] Turrets {get; set;}

        ///<summary>
        ///Тип техники
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}

        ///<summary>
        ///Экипаж
        ///</summary>
        [JsonProperty("crew")]
        public WotEncyclopediaVehiclesCrew Crew {get; set;}

        ///<summary>
        ///Характеристики базовой комплектации
        ///</summary>
        [JsonProperty("default_profile")]
        public WotEncyclopediaVehiclesDefault_profile DefaultProfile {get; set;}

        ///<summary>
        ///Изображения техники
        ///</summary>
        [JsonProperty("images")]
        public WotEncyclopediaVehiclesImages Images {get; set;}

        ///<summary>
        ///Информация об исследовании модулей
        ///</summary>
        [JsonProperty("modules_tree")]
        public WotEncyclopediaVehiclesModules_tree ModulesTree {get; set;}
    }
    public class WotEncyclopediaVehiclesCrew
    {

        ///<summary>
        ///Идентификатор члена экипажа
        ///</summary>
        [JsonProperty("member_id")]
        public string MemberId {get; set;}

        ///<summary>
        ///Список должностей члена экипажа
        ///</summary>
        [JsonProperty("roles")]
        public Dictionary<string,string> Roles {get; set;}
    }

    public class WotEncyclopediaVehiclesDefault_profile
    {

        ///<summary>
        ///Прочность
        ///</summary>
        [JsonProperty("hp")]
        public Int64? Hp {get; set;}

        ///<summary>
        ///Прочность корпуса
        ///</summary>
        [JsonProperty("hull_hp")]
        public Int64? HullHp {get; set;}

        ///<summary>
        ///Масса корпуса (кг)
        ///</summary>
        [JsonProperty("hull_weight")]
        public Int64? HullWeight {get; set;}

        ///<summary>
        ///Боекомплект
        ///</summary>
        [JsonProperty("max_ammo")]
        public Int64? MaxAmmo {get; set;}

        ///<summary>
        ///Предельная масса (кг)
        ///</summary>
        [JsonProperty("max_weight")]
        public Int64? MaxWeight {get; set;}

        ///<summary>
        ///Макс. скорость заднего хода (км/ч)
        ///</summary>
        [JsonProperty("speed_backward")]
        public Int64? SpeedBackward {get; set;}

        ///<summary>
        ///Максимальная скорость
        ///</summary>
        [JsonProperty("speed_forward")]
        public Int64? SpeedForward {get; set;}

        ///<summary>
        ///Масса (кг)
        ///</summary>
        [JsonProperty("weight")]
        public Int64? Weight {get; set;}

        ///<summary>
        ///Харатеристики снарядов орудия
        ///</summary>
        [JsonProperty("ammo")]
        public WotEncyclopediaVehiclesDefault_profileAmmo Ammo {get; set;}

        ///<summary>
        ///Бронирование
        ///</summary>
        [JsonProperty("armor")]
        public WotEncyclopediaVehiclesDefault_profileArmor Armor {get; set;}

        ///<summary>
        ///Характеристики двигателя
        ///</summary>
        [JsonProperty("engine")]
        public WotEncyclopediaVehiclesDefault_profileEngine Engine {get; set;}

        ///<summary>
        ///Характеристики орудия
        ///</summary>
        [JsonProperty("gun")]
        public WotEncyclopediaVehiclesDefault_profileGun Gun {get; set;}

        ///<summary>
        ///Установленные модули
        ///</summary>
        [JsonProperty("modules")]
        public WotEncyclopediaVehiclesDefault_profileModules Modules {get; set;}

        ///<summary>
        ///Характеристики радиостанции
        ///</summary>
        [JsonProperty("radio")]
        public WotEncyclopediaVehiclesDefault_profileRadio Radio {get; set;}

        ///<summary>
        ///Характеристики ходовой
        ///</summary>
        [JsonProperty("suspension")]
        public WotEncyclopediaVehiclesDefault_profileSuspension Suspension {get; set;}

        ///<summary>
        ///Характеристики башни
        ///</summary>
        [JsonProperty("turret")]
        public WotEncyclopediaVehiclesDefault_profileTurret Turret {get; set;}
    }
    public class WotEncyclopediaVehiclesDefault_profileAmmo
    {

        ///<summary>
        ///Урон (hp), в виде списка значений: min, avg, max
        ///</summary>
        [JsonProperty("damage")]
        public int[] Damage {get; set;}

        ///<summary>
        ///Пробитие (мм), в виде списка значений: min, avg, max
        ///</summary>
        [JsonProperty("penetration")]
        public int[] Penetration {get; set;}

        ///<summary>
        ///Тип снаряда
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}
    }

    public class WotEncyclopediaVehiclesDefault_profileArmor
    {

        ///<summary>
        ///Бронирование корпуса
        ///</summary>
        [JsonProperty("hull")]
        public WotEncyclopediaVehiclesDefault_profileArmorHull Hull {get; set;}

        ///<summary>
        ///Бронирование башни
        ///</summary>
        [JsonProperty("turret")]
        public WotEncyclopediaVehiclesDefault_profileArmorTurret Turret {get; set;}
    }
    public class WotEncyclopediaVehiclesDefault_profileArmorHull
    {

        ///<summary>
        ///Лоб (мм)
        ///</summary>
        [JsonProperty("front")]
        public Int64? Front {get; set;}

        ///<summary>
        ///Корма (мм)
        ///</summary>
        [JsonProperty("rear")]
        public Int64? Rear {get; set;}

        ///<summary>
        ///Борт (мм)
        ///</summary>
        [JsonProperty("sides")]
        public Int64? Sides {get; set;}
    }

    public class WotEncyclopediaVehiclesDefault_profileArmorTurret
    {

        ///<summary>
        ///Лоб (мм)
        ///</summary>
        [JsonProperty("front")]
        public Int64? Front {get; set;}

        ///<summary>
        ///Корма (мм)
        ///</summary>
        [JsonProperty("rear")]
        public Int64? Rear {get; set;}

        ///<summary>
        ///Борт (мм)
        ///</summary>
        [JsonProperty("sides")]
        public Int64? Sides {get; set;}
    }


    public class WotEncyclopediaVehiclesDefault_profileEngine
    {

        ///<summary>
        ///Вероятность возгорания
        ///</summary>
        [JsonProperty("fire_chance")]
        public double FireChance {get; set;}

        ///<summary>
        ///Название модуля
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Мощность двигателя (л.с.)
        ///</summary>
        [JsonProperty("power")]
        public Int64? Power {get; set;}

        ///<summary>
        ///Тег модуля
        ///</summary>
        [JsonProperty("tag")]
        public string Tag {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("tier")]
        public Int64? Tier {get; set;}

        ///<summary>
        ///Масса (кг)
        ///</summary>
        [JsonProperty("weight")]
        public Int64? Weight {get; set;}
    }

    public class WotEncyclopediaVehiclesDefault_profileGun
    {

        ///<summary>
        ///Время сведения (с)
        ///</summary>
        [JsonProperty("aim_time")]
        public double AimTime {get; set;}

        ///<summary>
        ///Калибр (мм)
        ///</summary>
        [JsonProperty("caliber")]
        public Int64? Caliber {get; set;}

        ///<summary>
        ///Разброс на 100 м (м)
        ///</summary>
        [JsonProperty("dispersion")]
        public double Dispersion {get; set;}

        ///<summary>
        ///Скорострельность (выстр/мин)
        ///</summary>
        [JsonProperty("fire_rate")]
        public double FireRate {get; set;}

        ///<summary>
        ///Угол ВН вниз (град)
        ///</summary>
        [JsonProperty("move_down_arc")]
        public Int64? MoveDownArc {get; set;}

        ///<summary>
        ///Угол ВН вверх (град)
        ///</summary>
        [JsonProperty("move_up_arc")]
        public Int64? MoveUpArc {get; set;}

        ///<summary>
        ///Название модуля
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Время перезарядки (с)
        ///</summary>
        [JsonProperty("reload_time")]
        public double ReloadTime {get; set;}

        ///<summary>
        ///Тег модуля
        ///</summary>
        [JsonProperty("tag")]
        public string Tag {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("tier")]
        public Int64? Tier {get; set;}

        ///<summary>
        ///Скорость поворота (град/с)
        ///</summary>
        [JsonProperty("traverse_speed")]
        public Int64? TraverseSpeed {get; set;}

        ///<summary>
        ///Масса (кг)
        ///</summary>
        [JsonProperty("weight")]
        public Int64? Weight {get; set;}
    }

    public class WotEncyclopediaVehiclesDefault_profileModules
    {

        ///<summary>
        ///Идентификатор двигателя
        ///</summary>
        [JsonProperty("engine_id")]
        public Int64? EngineId {get; set;}

        ///<summary>
        ///Идентификатор орудия
        ///</summary>
        [JsonProperty("gun_id")]
        public Int64? GunId {get; set;}

        ///<summary>
        ///Идентификатор радиостанции
        ///</summary>
        [JsonProperty("radio_id")]
        public Int64? RadioId {get; set;}

        ///<summary>
        ///Идентификатор ходовой
        ///</summary>
        [JsonProperty("suspension_id")]
        public Int64? SuspensionId {get; set;}

        ///<summary>
        ///Идентификатор башни
        ///</summary>
        [JsonProperty("turret_id")]
        public Int64? TurretId {get; set;}
    }

    public class WotEncyclopediaVehiclesDefault_profileRadio
    {

        ///<summary>
        ///Название модуля
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Дальность связи
        ///</summary>
        [JsonProperty("signal_range")]
        public Int64? SignalRange {get; set;}

        ///<summary>
        ///Тег модуля
        ///</summary>
        [JsonProperty("tag")]
        public string Tag {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("tier")]
        public Int64? Tier {get; set;}

        ///<summary>
        ///Масса (кг)
        ///</summary>
        [JsonProperty("weight")]
        public Int64? Weight {get; set;}
    }

    public class WotEncyclopediaVehiclesDefault_profileSuspension
    {

        ///<summary>
        ///Максимальная нагрузка (кг)
        ///</summary>
        [JsonProperty("load_limit")]
        public Int64? LoadLimit {get; set;}

        ///<summary>
        ///Название модуля
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Тег модуля
        ///</summary>
        [JsonProperty("tag")]
        public string Tag {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("tier")]
        public Int64? Tier {get; set;}

        ///<summary>
        ///Скорость поворота (град/с)
        ///</summary>
        [JsonProperty("traverse_speed")]
        public Int64? TraverseSpeed {get; set;}

        ///<summary>
        ///Масса (кг)
        ///</summary>
        [JsonProperty("weight")]
        public Int64? Weight {get; set;}
    }

    public class WotEncyclopediaVehiclesDefault_profileTurret
    {

        ///<summary>
        ///Прочность
        ///</summary>
        [JsonProperty("hp")]
        public Int64? Hp {get; set;}

        ///<summary>
        ///Название модуля
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Тег модуля
        ///</summary>
        [JsonProperty("tag")]
        public string Tag {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("tier")]
        public Int64? Tier {get; set;}

        ///<summary>
        ///Угол вращения влево (град)
        ///</summary>
        [JsonProperty("traverse_left_arc")]
        public Int64? TraverseLeftArc {get; set;}

        ///<summary>
        ///Угол вращения вправо (град)
        ///</summary>
        [JsonProperty("traverse_right_arc")]
        public Int64? TraverseRightArc {get; set;}

        ///<summary>
        ///Скорость поворота (град/с)
        ///</summary>
        [JsonProperty("traverse_speed")]
        public Int64? TraverseSpeed {get; set;}

        ///<summary>
        ///Обзор (м)
        ///</summary>
        [JsonProperty("view_range")]
        public Int64? ViewRange {get; set;}

        ///<summary>
        ///Масса (кг)
        ///</summary>
        [JsonProperty("weight")]
        public Int64? Weight {get; set;}
    }


    public class WotEncyclopediaVehiclesImages
    {

        ///<summary>
        ///URL к изображению техники в размере 160 x 100 пкс
        ///</summary>
        [JsonProperty("big_icon")]
        public string BigIcon {get; set;}

        ///<summary>
        ///URL к изображению-контуру техники
        ///</summary>
        [JsonProperty("contour_icon")]
        public string ContourIcon {get; set;}

        ///<summary>
        ///URL к изображению техники в размере 124 x 31 пкс
        ///</summary>
        [JsonProperty("small_icon")]
        public string SmallIcon {get; set;}
    }

    public class WotEncyclopediaVehiclesModules_tree
    {

        ///<summary>
        ///Показывает, является ли модуль базовым
        ///</summary>
        [JsonProperty("is_default")]
        public bool IsDefault {get; set;}

        ///<summary>
        ///Идентификатор модуля
        ///</summary>
        [JsonProperty("module_id")]
        public Int64? ModuleId {get; set;}

        ///<summary>
        ///Название модуля
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Список идентификаторов модулей, доступных после исследования модуля
        ///</summary>
        [JsonProperty("next_modules")]
        public int[] NextModules {get; set;}

        ///<summary>
        ///Список идентификаторов техники доступной после исследования модуля
        ///</summary>
        [JsonProperty("next_tanks")]
        public int[] NextTanks {get; set;}

        ///<summary>
        ///Стоимость в кредитах
        ///</summary>
        [JsonProperty("price_credit")]
        public Int64? PriceCredit {get; set;}

        ///<summary>
        ///Стоимость исследования
        ///</summary>
        [JsonProperty("price_xp")]
        public Int64? PriceXp {get; set;}

        ///<summary>
        ///Тип модуля
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}
    }



    ///<summary>
    /// Характеристики техники
    /// https://ru.wargaming.net/developers/api_reference/wot/encyclopedia/vehicleprofile/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/encyclopedia/vehicleprofile/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/encyclopedia/vehicleprofile/")]
    public class RequestWotEncyclopediaVehicleprofile:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор техники
        ///numeric
        ///</summary>
        [JsonProperty("tank_id")]
        [FieldIsMandatory]
        public string TankId {get; set;}

        ///<summary>
        ///Идентификатор двигателя. Если модуль не указан, используется модуль базовой комплектации.
        ///numeric
        ///</summary>
        [JsonProperty("engine_id")]
        public string EngineId {get; set;}

        ///<summary>
        ///Идентификатор орудия. Если модуль не указан, используется модуль базовой комплектации.
        ///numeric
        ///</summary>
        [JsonProperty("gun_id")]
        public string GunId {get; set;}

        ///<summary>
        ///Идентификатор ходовой. Если модуль не указан, используется модуль базовой комплектации.
        ///numeric
        ///</summary>
        [JsonProperty("suspension_id")]
        public string SuspensionId {get; set;}

        ///<summary>
        ///Идентификатор башни. Если модуль не указан, используется модуль базовой комплектации.
        ///numeric
        ///</summary>
        [JsonProperty("turret_id")]
        public string TurretId {get; set;}

        ///<summary>
        ///Идентификатор радиостанции. Если модуль не указан, используется модуль базовой комплектации.
        ///numeric
        ///</summary>
        [JsonProperty("radio_id")]
        public string RadioId {get; set;}

        ///<summary>
        ///Идентификатор комплектации. Если указан, параметры идентификаторов отдельных модулей не учитываются.
        ///string
        ///</summary>
        [JsonProperty("profile_id")]
        public string ProfileId {get; set;}
    }
    
    ///<summary>
    ///Характеристики техники
    ///</summary>
    public class ResponseWotEncyclopediaVehicleprofile:IResponse
    {

        ///<summary>
        ///Прочность
        ///</summary>
        [JsonProperty("hp")]
        public Int64? Hp {get; set;}

        ///<summary>
        ///Прочность корпуса
        ///</summary>
        [JsonProperty("hull_hp")]
        public Int64? HullHp {get; set;}

        ///<summary>
        ///Масса корпуса (кг)
        ///</summary>
        [JsonProperty("hull_weight")]
        public Int64? HullWeight {get; set;}

        ///<summary>
        ///Базовая комплектация
        ///</summary>
        [JsonProperty("is_default")]
        public bool IsDefault {get; set;}

        ///<summary>
        ///Боекомплект
        ///</summary>
        [JsonProperty("max_ammo")]
        public Int64? MaxAmmo {get; set;}

        ///<summary>
        ///Предельная масса (кг)
        ///</summary>
        [JsonProperty("max_weight")]
        public Int64? MaxWeight {get; set;}

        ///<summary>
        ///Идентификатор комплектации техники
        ///</summary>
        [JsonProperty("profile_id")]
        public string ProfileId {get; set;}

        ///<summary>
        ///Макс. скорость заднего хода (км/ч)
        ///</summary>
        [JsonProperty("speed_backward")]
        public Int64? SpeedBackward {get; set;}

        ///<summary>
        ///Максимальная скорость
        ///</summary>
        [JsonProperty("speed_forward")]
        public Int64? SpeedForward {get; set;}

        ///<summary>
        ///Идентификатор техники
        ///</summary>
        [JsonProperty("tank_id")]
        public Int64? TankId {get; set;}

        ///<summary>
        ///Масса (кг)
        ///</summary>
        [JsonProperty("weight")]
        public Int64? Weight {get; set;}

        ///<summary>
        ///Харатеристики снарядов орудия
        ///</summary>
        [JsonProperty("ammo")]
        public WotEncyclopediaVehicleprofileAmmo Ammo {get; set;}

        ///<summary>
        ///Бронирование
        ///</summary>
        [JsonProperty("armor")]
        public WotEncyclopediaVehicleprofileArmor Armor {get; set;}

        ///<summary>
        ///Характеристики двигателя
        ///</summary>
        [JsonProperty("engine")]
        public WotEncyclopediaVehicleprofileEngine Engine {get; set;}

        ///<summary>
        ///Характеристики орудия
        ///</summary>
        [JsonProperty("gun")]
        public WotEncyclopediaVehicleprofileGun Gun {get; set;}

        ///<summary>
        ///Установленные модули
        ///</summary>
        [JsonProperty("modules")]
        public WotEncyclopediaVehicleprofileModules Modules {get; set;}

        ///<summary>
        ///Характеристики радиостанции
        ///</summary>
        [JsonProperty("radio")]
        public WotEncyclopediaVehicleprofileRadio Radio {get; set;}

        ///<summary>
        ///Характеристики ходовой
        ///</summary>
        [JsonProperty("suspension")]
        public WotEncyclopediaVehicleprofileSuspension Suspension {get; set;}

        ///<summary>
        ///Характеристики башни
        ///</summary>
        [JsonProperty("turret")]
        public WotEncyclopediaVehicleprofileTurret Turret {get; set;}
    }
    public class WotEncyclopediaVehicleprofileAmmo
    {

        ///<summary>
        ///Урон (hp), в виде списка значений: min, avg, max
        ///</summary>
        [JsonProperty("damage")]
        public int[] Damage {get; set;}

        ///<summary>
        ///Пробитие (мм), в виде списка значений: min, avg, max
        ///</summary>
        [JsonProperty("penetration")]
        public int[] Penetration {get; set;}

        ///<summary>
        ///Тип снаряда
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}
    }

    public class WotEncyclopediaVehicleprofileArmor
    {

        ///<summary>
        ///Бронирование корпуса
        ///</summary>
        [JsonProperty("hull")]
        public WotEncyclopediaVehicleprofileArmorHull Hull {get; set;}

        ///<summary>
        ///Бронирование башни
        ///</summary>
        [JsonProperty("turret")]
        public WotEncyclopediaVehicleprofileArmorTurret Turret {get; set;}
    }
    public class WotEncyclopediaVehicleprofileArmorHull
    {

        ///<summary>
        ///Лоб (мм)
        ///</summary>
        [JsonProperty("front")]
        public Int64? Front {get; set;}

        ///<summary>
        ///Корма (мм)
        ///</summary>
        [JsonProperty("rear")]
        public Int64? Rear {get; set;}

        ///<summary>
        ///Борт (мм)
        ///</summary>
        [JsonProperty("sides")]
        public Int64? Sides {get; set;}
    }

    public class WotEncyclopediaVehicleprofileArmorTurret
    {

        ///<summary>
        ///Лоб (мм)
        ///</summary>
        [JsonProperty("front")]
        public Int64? Front {get; set;}

        ///<summary>
        ///Корма (мм)
        ///</summary>
        [JsonProperty("rear")]
        public Int64? Rear {get; set;}

        ///<summary>
        ///Борт (мм)
        ///</summary>
        [JsonProperty("sides")]
        public Int64? Sides {get; set;}
    }


    public class WotEncyclopediaVehicleprofileEngine
    {

        ///<summary>
        ///Вероятность возгорания
        ///</summary>
        [JsonProperty("fire_chance")]
        public double FireChance {get; set;}

        ///<summary>
        ///Название модуля
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Мощность двигателя (л.с.)
        ///</summary>
        [JsonProperty("power")]
        public Int64? Power {get; set;}

        ///<summary>
        ///Тег модуля
        ///</summary>
        [JsonProperty("tag")]
        public string Tag {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("tier")]
        public Int64? Tier {get; set;}

        ///<summary>
        ///Масса (кг)
        ///</summary>
        [JsonProperty("weight")]
        public Int64? Weight {get; set;}
    }

    public class WotEncyclopediaVehicleprofileGun
    {

        ///<summary>
        ///Время сведения (с)
        ///</summary>
        [JsonProperty("aim_time")]
        public double AimTime {get; set;}

        ///<summary>
        ///Калибр (мм)
        ///</summary>
        [JsonProperty("caliber")]
        public Int64? Caliber {get; set;}

        ///<summary>
        ///Разброс на 100 м (м)
        ///</summary>
        [JsonProperty("dispersion")]
        public double Dispersion {get; set;}

        ///<summary>
        ///Скорострельность (выстр/мин)
        ///</summary>
        [JsonProperty("fire_rate")]
        public double FireRate {get; set;}

        ///<summary>
        ///Угол ВН вниз (град)
        ///</summary>
        [JsonProperty("move_down_arc")]
        public Int64? MoveDownArc {get; set;}

        ///<summary>
        ///Угол ВН вверх (град)
        ///</summary>
        [JsonProperty("move_up_arc")]
        public Int64? MoveUpArc {get; set;}

        ///<summary>
        ///Название модуля
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Время перезарядки (с)
        ///</summary>
        [JsonProperty("reload_time")]
        public double ReloadTime {get; set;}

        ///<summary>
        ///Тег модуля
        ///</summary>
        [JsonProperty("tag")]
        public string Tag {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("tier")]
        public Int64? Tier {get; set;}

        ///<summary>
        ///Скорость поворота (град/с)
        ///</summary>
        [JsonProperty("traverse_speed")]
        public Int64? TraverseSpeed {get; set;}

        ///<summary>
        ///Масса (кг)
        ///</summary>
        [JsonProperty("weight")]
        public Int64? Weight {get; set;}
    }

    public class WotEncyclopediaVehicleprofileModules
    {

        ///<summary>
        ///Идентификатор двигателя
        ///</summary>
        [JsonProperty("engine_id")]
        public Int64? EngineId {get; set;}

        ///<summary>
        ///Идентификатор орудия
        ///</summary>
        [JsonProperty("gun_id")]
        public Int64? GunId {get; set;}

        ///<summary>
        ///Идентификатор радиостанции
        ///</summary>
        [JsonProperty("radio_id")]
        public Int64? RadioId {get; set;}

        ///<summary>
        ///Идентификатор ходовой
        ///</summary>
        [JsonProperty("suspension_id")]
        public Int64? SuspensionId {get; set;}

        ///<summary>
        ///Идентификатор башни
        ///</summary>
        [JsonProperty("turret_id")]
        public Int64? TurretId {get; set;}
    }

    public class WotEncyclopediaVehicleprofileRadio
    {

        ///<summary>
        ///Название модуля
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Дальность связи
        ///</summary>
        [JsonProperty("signal_range")]
        public Int64? SignalRange {get; set;}

        ///<summary>
        ///Тег модуля
        ///</summary>
        [JsonProperty("tag")]
        public string Tag {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("tier")]
        public Int64? Tier {get; set;}

        ///<summary>
        ///Масса (кг)
        ///</summary>
        [JsonProperty("weight")]
        public Int64? Weight {get; set;}
    }

    public class WotEncyclopediaVehicleprofileSuspension
    {

        ///<summary>
        ///Максимальная нагрузка (кг)
        ///</summary>
        [JsonProperty("load_limit")]
        public Int64? LoadLimit {get; set;}

        ///<summary>
        ///Название модуля
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Тег модуля
        ///</summary>
        [JsonProperty("tag")]
        public string Tag {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("tier")]
        public Int64? Tier {get; set;}

        ///<summary>
        ///Скорость поворота (град/с)
        ///</summary>
        [JsonProperty("traverse_speed")]
        public Int64? TraverseSpeed {get; set;}

        ///<summary>
        ///Масса (кг)
        ///</summary>
        [JsonProperty("weight")]
        public Int64? Weight {get; set;}
    }

    public class WotEncyclopediaVehicleprofileTurret
    {

        ///<summary>
        ///Прочность
        ///</summary>
        [JsonProperty("hp")]
        public Int64? Hp {get; set;}

        ///<summary>
        ///Название модуля
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Тег модуля
        ///</summary>
        [JsonProperty("tag")]
        public string Tag {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("tier")]
        public Int64? Tier {get; set;}

        ///<summary>
        ///Угол вращения влево (град)
        ///</summary>
        [JsonProperty("traverse_left_arc")]
        public Int64? TraverseLeftArc {get; set;}

        ///<summary>
        ///Угол вращения вправо (град)
        ///</summary>
        [JsonProperty("traverse_right_arc")]
        public Int64? TraverseRightArc {get; set;}

        ///<summary>
        ///Скорость поворота (град/с)
        ///</summary>
        [JsonProperty("traverse_speed")]
        public Int64? TraverseSpeed {get; set;}

        ///<summary>
        ///Обзор (м)
        ///</summary>
        [JsonProperty("view_range")]
        public Int64? ViewRange {get; set;}

        ///<summary>
        ///Масса (кг)
        ///</summary>
        [JsonProperty("weight")]
        public Int64? Weight {get; set;}
    }



    ///<summary>
    /// Комплектации техники
    /// https://ru.wargaming.net/developers/api_reference/wot/encyclopedia/vehicleprofiles/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/encyclopedia/vehicleprofiles/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/encyclopedia/vehicleprofiles/")]
    public class RequestWotEncyclopediaVehicleprofiles:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор техники
        ///numeric
        ///</summary>
        [JsonProperty("tank_id")]
        [FieldIsMandatory]
        public string TankId {get; set;}

        ///<summary>
        ///Сортировка. Допустимые значения: 
///
///"price_credit" — по стоимости в кредитах 
///"-price_credit" — по стоимости в кредитах, в обратном порядке
        ///string
        ///</summary>
        [JsonProperty("order_by")]
        public string OrderBy {get; set;}
    }
    
    ///<summary>
    ///Комплектации техники
    ///</summary>
    public class ResponseWotEncyclopediaVehicleprofiles:IResponse
    {

        ///<summary>
        ///Базовая комплектация
        ///</summary>
        [JsonProperty("is_default")]
        public bool IsDefault {get; set;}

        ///<summary>
        ///Стоимость в кредитах
        ///</summary>
        [JsonProperty("price_credit")]
        public Int64? PriceCredit {get; set;}

        ///<summary>
        ///Идентификатор комплектации техники
        ///</summary>
        [JsonProperty("profile_id")]
        public string ProfileId {get; set;}

        ///<summary>
        ///Идентификатор техники
        ///</summary>
        [JsonProperty("tank_id")]
        public Int64? TankId {get; set;}
    }


    ///<summary>
    /// Внимание! Метод будет отключён.
    /// Двигатели
    /// https://ru.wargaming.net/developers/api_reference/wot/encyclopedia/tankengines/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/encyclopedia/tankengines/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/encyclopedia/tankengines/")]
    [Obsolete]
    public class RequestWotEncyclopediaTankengines:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Идентификатор модуля
        ///numeric, list
        ///</summary>
        [JsonProperty("module_id")]
        public string ModuleId {get; set;}

        ///<summary>
        ///Нация
        ///string, list
        ///</summary>
        [JsonProperty("nation")]
        public string Nation {get; set;}
    }
    
    ///<summary>
    ///Двигатели
    ///</summary>
    public class ResponseWotEncyclopediaTankengines:IResponse
    {

        ///<summary>
        ///Вероятность пожара при попадании
        ///</summary>
        [JsonProperty("fire_starting_chance")]
        public Int64? FireStartingChance {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("level")]
        public Int64? Level {get; set;}

        ///<summary>
        ///Идентификатор модуля
        ///</summary>
        [JsonProperty("module_id")]
        public Int64? ModuleId {get; set;}

        ///<summary>
        ///Название техники
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Локализованное поле name
        ///</summary>
        [JsonProperty("name_i18n")]
        public string NameI18n {get; set;}

        ///<summary>
        ///Нация
        ///</summary>
        [JsonProperty("nation")]
        public string Nation {get; set;}

        ///<summary>
        ///Локализованное поле nation
        ///</summary>
        [JsonProperty("nation_i18n")]
        public string NationI18n {get; set;}

        ///<summary>
        ///Мощность
        ///</summary>
        [JsonProperty("power")]
        public Int64? Power {get; set;}

        ///<summary>
        ///Стоимость покупки в кредитах
        ///</summary>
        [JsonProperty("price_credit")]
        public Int64? PriceCredit {get; set;}

        ///<summary>
        ///Стоимость покупки в золоте
        ///</summary>
        [JsonProperty("price_gold")]
        public Int64? PriceGold {get; set;}

        ///<summary>
        ///Идентификаторы совместимой техники
        ///</summary>
        [JsonProperty("tanks")]
        public int[] Tanks {get; set;}
    }


    ///<summary>
    /// Внимание! Метод будет отключён.
    /// Башни
    /// https://ru.wargaming.net/developers/api_reference/wot/encyclopedia/tankturrets/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/encyclopedia/tankturrets/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/encyclopedia/tankturrets/")]
    [Obsolete]
    public class RequestWotEncyclopediaTankturrets:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Идентификатор модуля
        ///numeric, list
        ///</summary>
        [JsonProperty("module_id")]
        public string ModuleId {get; set;}

        ///<summary>
        ///Нация
        ///string, list
        ///</summary>
        [JsonProperty("nation")]
        public string Nation {get; set;}
    }
    
    ///<summary>
    ///Башни
    ///</summary>
    public class ResponseWotEncyclopediaTankturrets:IResponse
    {

        ///<summary>
        ///Бронирование: борт
        ///</summary>
        [JsonProperty("armor_board")]
        public Int64? ArmorBoard {get; set;}

        ///<summary>
        ///Бронирование: корма
        ///</summary>
        [JsonProperty("armor_fedd")]
        public Int64? ArmorFedd {get; set;}

        ///<summary>
        ///Бронирование: лоб
        ///</summary>
        [JsonProperty("armor_forehead")]
        public Int64? ArmorForehead {get; set;}

        ///<summary>
        ///Обзор
        ///</summary>
        [JsonProperty("circular_vision_radius")]
        public Int64? CircularVisionRadius {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("level")]
        public Int64? Level {get; set;}

        ///<summary>
        ///Идентификатор модуля
        ///</summary>
        [JsonProperty("module_id")]
        public Int64? ModuleId {get; set;}

        ///<summary>
        ///Название техники
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Локализованное поле name
        ///</summary>
        [JsonProperty("name_i18n")]
        public string NameI18n {get; set;}

        ///<summary>
        ///Нация
        ///</summary>
        [JsonProperty("nation")]
        public string Nation {get; set;}

        ///<summary>
        ///Локализованное поле nation
        ///</summary>
        [JsonProperty("nation_i18n")]
        public string NationI18n {get; set;}

        ///<summary>
        ///Стоимость покупки в кредитах
        ///</summary>
        [JsonProperty("price_credit")]
        public Int64? PriceCredit {get; set;}

        ///<summary>
        ///Стоимость покупки в золоте
        ///</summary>
        [JsonProperty("price_gold")]
        public Int64? PriceGold {get; set;}

        ///<summary>
        ///Скорость вращения
        ///</summary>
        [JsonProperty("rotation_speed")]
        public Int64? RotationSpeed {get; set;}

        ///<summary>
        ///Идентификаторы совместимой техники
        ///</summary>
        [JsonProperty("tanks")]
        public int[] Tanks {get; set;}
    }


    ///<summary>
    /// Внимание! Метод будет отключён.
    /// Радиостанции
    /// https://ru.wargaming.net/developers/api_reference/wot/encyclopedia/tankradios/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/encyclopedia/tankradios/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/encyclopedia/tankradios/")]
    [Obsolete]
    public class RequestWotEncyclopediaTankradios:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Идентификатор модуля
        ///numeric, list
        ///</summary>
        [JsonProperty("module_id")]
        public string ModuleId {get; set;}

        ///<summary>
        ///Нация
        ///string, list
        ///</summary>
        [JsonProperty("nation")]
        public string Nation {get; set;}
    }
    
    ///<summary>
    ///Радиостанции
    ///</summary>
    public class ResponseWotEncyclopediaTankradios:IResponse
    {

        ///<summary>
        ///Дальность связи
        ///</summary>
        [JsonProperty("distance")]
        public Int64? Distance {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("level")]
        public Int64? Level {get; set;}

        ///<summary>
        ///Идентификатор модуля
        ///</summary>
        [JsonProperty("module_id")]
        public Int64? ModuleId {get; set;}

        ///<summary>
        ///Название техники
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Локализованное поле name
        ///</summary>
        [JsonProperty("name_i18n")]
        public string NameI18n {get; set;}

        ///<summary>
        ///Нация
        ///</summary>
        [JsonProperty("nation")]
        public string Nation {get; set;}

        ///<summary>
        ///Локализованное поле nation
        ///</summary>
        [JsonProperty("nation_i18n")]
        public string NationI18n {get; set;}

        ///<summary>
        ///Стоимость покупки в кредитах
        ///</summary>
        [JsonProperty("price_credit")]
        public Int64? PriceCredit {get; set;}

        ///<summary>
        ///Стоимость покупки в золоте
        ///</summary>
        [JsonProperty("price_gold")]
        public Int64? PriceGold {get; set;}

        ///<summary>
        ///Идентификаторы совместимой техники
        ///</summary>
        [JsonProperty("tanks")]
        public int[] Tanks {get; set;}
    }


    ///<summary>
    /// Внимание! Метод будет отключён.
    /// Ходовые
    /// https://ru.wargaming.net/developers/api_reference/wot/encyclopedia/tankchassis/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/encyclopedia/tankchassis/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/encyclopedia/tankchassis/")]
    [Obsolete]
    public class RequestWotEncyclopediaTankchassis:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Идентификатор модуля
        ///numeric, list
        ///</summary>
        [JsonProperty("module_id")]
        public string ModuleId {get; set;}

        ///<summary>
        ///Нация
        ///string, list
        ///</summary>
        [JsonProperty("nation")]
        public string Nation {get; set;}
    }
    
    ///<summary>
    ///Ходовые
    ///</summary>
    public class ResponseWotEncyclopediaTankchassis:IResponse
    {

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("level")]
        public Int64? Level {get; set;}

        ///<summary>
        ///Максимальная грузоподъёмность
        ///</summary>
        [JsonProperty("max_load")]
        public double MaxLoad {get; set;}

        ///<summary>
        ///Идентификатор модуля
        ///</summary>
        [JsonProperty("module_id")]
        public Int64? ModuleId {get; set;}

        ///<summary>
        ///Название техники
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Локализованное поле name
        ///</summary>
        [JsonProperty("name_i18n")]
        public string NameI18n {get; set;}

        ///<summary>
        ///Нация
        ///</summary>
        [JsonProperty("nation")]
        public string Nation {get; set;}

        ///<summary>
        ///Локализованное поле nation
        ///</summary>
        [JsonProperty("nation_i18n")]
        public string NationI18n {get; set;}

        ///<summary>
        ///Стоимость покупки в кредитах
        ///</summary>
        [JsonProperty("price_credit")]
        public Int64? PriceCredit {get; set;}

        ///<summary>
        ///Стоимость покупки в золоте
        ///</summary>
        [JsonProperty("price_gold")]
        public Int64? PriceGold {get; set;}

        ///<summary>
        ///Скорость поворота
        ///</summary>
        [JsonProperty("rotation_speed")]
        public Int64? RotationSpeed {get; set;}

        ///<summary>
        ///Идентификаторы совместимой техники
        ///</summary>
        [JsonProperty("tanks")]
        public int[] Tanks {get; set;}
    }


    ///<summary>
    /// Внимание! Метод будет отключён.
    /// Орудия
    /// https://ru.wargaming.net/developers/api_reference/wot/encyclopedia/tankguns/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/encyclopedia/tankguns/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/encyclopedia/tankguns/")]
    [Obsolete]
    public class RequestWotEncyclopediaTankguns:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Идентификатор модуля
        ///numeric, list
        ///</summary>
        [JsonProperty("module_id")]
        public string ModuleId {get; set;}

        ///<summary>
        ///Нация
        ///string, list
        ///</summary>
        [JsonProperty("nation")]
        public string Nation {get; set;}

        ///<summary>
        ///Идентификатор совместимой башни
        ///numeric
        ///</summary>
        [JsonProperty("turret_id")]
        public string TurretId {get; set;}

        ///<summary>
        ///Идентификатор совместимой техники
        ///numeric
        ///</summary>
        [JsonProperty("tank_id")]
        public string TankId {get; set;}
    }
    
    ///<summary>
    ///Орудия
    ///</summary>
    public class ResponseWotEncyclopediaTankguns:IResponse
    {

        ///<summary>
        ///Урон
        ///</summary>
        [JsonProperty("damage")]
        public int[] Damage {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("level")]
        public Int64? Level {get; set;}

        ///<summary>
        ///Идентификатор модуля
        ///</summary>
        [JsonProperty("module_id")]
        public Int64? ModuleId {get; set;}

        ///<summary>
        ///Название техники
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Локализованное поле name
        ///</summary>
        [JsonProperty("name_i18n")]
        public string NameI18n {get; set;}

        ///<summary>
        ///Нация
        ///</summary>
        [JsonProperty("nation")]
        public string Nation {get; set;}

        ///<summary>
        ///Локализованное поле nation
        ///</summary>
        [JsonProperty("nation_i18n")]
        public string NationI18n {get; set;}

        ///<summary>
        ///Пробитие
        ///</summary>
        [JsonProperty("piercing_power")]
        public int[] PiercingPower {get; set;}

        ///<summary>
        ///Стоимость покупки в кредитах
        ///</summary>
        [JsonProperty("price_credit")]
        public Int64? PriceCredit {get; set;}

        ///<summary>
        ///Стоимость покупки в золоте
        ///</summary>
        [JsonProperty("price_gold")]
        public Int64? PriceGold {get; set;}

        ///<summary>
        ///Скорострельность
        ///</summary>
        [JsonProperty("rate")]
        public double Rate {get; set;}

        ///<summary>
        ///Идентификаторы совместимой техники
        ///</summary>
        [JsonProperty("tanks")]
        public int[] Tanks {get; set;}

        ///<summary>
        ///Идентификаторы совместимых башен
        ///</summary>
        [JsonProperty("turrets")]
        public int[] Turrets {get; set;}
    }


    ///<summary>
    /// Достижения
    /// https://ru.wargaming.net/developers/api_reference/wot/encyclopedia/achievements/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/encyclopedia/achievements/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/encyclopedia/achievements/")]
    public class RequestWotEncyclopediaAchievements:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}
    }
    
    ///<summary>
    ///Достижения
    ///</summary>
    public class ResponseWotEncyclopediaAchievements:IResponse
    {

        ///<summary>
        ///Условие
        ///</summary>
        [JsonProperty("condition")]
        public string Condition {get; set;}

        ///<summary>
        ///Описание достижения
        ///</summary>
        [JsonProperty("description")]
        public string Description {get; set;}

        ///<summary>
        ///Историческая справка
        ///</summary>
        [JsonProperty("hero_info")]
        public string HeroInfo {get; set;}

        ///<summary>
        ///Ссылка на изображение
        ///</summary>
        [JsonProperty("image")]
        public string Image {get; set;}

        ///<summary>
        ///Изображение 180x180px
        ///</summary>
        [JsonProperty("image_big")]
        public string ImageBig {get; set;}

        ///<summary>
        ///Название достижения
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Локализованное поле name
        ///</summary>
        [JsonProperty("name_i18n")]
        public string NameI18n {get; set;}

        ///<summary>
        ///Порядок сортировки
        ///</summary>
        [JsonProperty("order")]
        public Int64? Order {get; set;}

        ///<summary>
        ///Показывает, если достижение устарело и больше не может быть получено
        ///</summary>
        [JsonProperty("outdated")]
        public bool Outdated {get; set;}

        ///<summary>
        ///Раздел
        ///</summary>
        [JsonProperty("section")]
        public string Section {get; set;}

        ///<summary>
        ///Порядок отображения раздела
        ///</summary>
        [JsonProperty("section_order")]
        public Int64? SectionOrder {get; set;}

        ///<summary>
        ///Тип
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}

        ///<summary>
        ///Достижения
        ///</summary>
        [JsonProperty("options")]
        public WotEncyclopediaAchievementsOptions Options {get; set;}
    }
    public class WotEncyclopediaAchievementsOptions
    {

        ///<summary>
        ///Описание достижения
        ///</summary>
        [JsonProperty("description")]
        public string Description {get; set;}

        ///<summary>
        ///Ссылка на изображение
        ///</summary>
        [JsonProperty("image")]
        public string Image {get; set;}

        ///<summary>
        ///Изображение 180x180px
        ///</summary>
        [JsonProperty("image_big")]
        public string ImageBig {get; set;}

        ///<summary>
        ///Локализованное поле name
        ///</summary>
        [JsonProperty("name_i18n")]
        public string NameI18n {get; set;}

        ///<summary>
        ///Информация об эмблемах наций
        ///</summary>
        [JsonProperty("nation_images")]
        public WotEncyclopediaAchievementsOptionsNation_images NationImages {get; set;}
    }
    public class WotEncyclopediaAchievementsOptionsNation_images
    {

        ///<summary>
        ///Перечень ссылок на эмблемы 180x180 px
        ///</summary>
        [JsonProperty("x180")]
        public Dictionary<string,string> X180 {get; set;}

        ///<summary>
        ///Перечень ссылок на эмблемы 67x71 px
        ///</summary>
        [JsonProperty("x71")]
        public Dictionary<string,string> X71 {get; set;}

        ///<summary>
        ///Перечень ссылок на эмблемы 95x85 px
        ///</summary>
        [JsonProperty("x85")]
        public Dictionary<string,string> X85 {get; set;}
    }




    ///<summary>
    /// Информация о Танкопедии
    /// https://ru.wargaming.net/developers/api_reference/wot/encyclopedia/info/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/encyclopedia/info/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/encyclopedia/info/")]
    public class RequestWotEncyclopediaInfo:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}
    }
    
    ///<summary>
    ///Информация о Танкопедии
    ///</summary>
    public class ResponseWotEncyclopediaInfo:IResponse
    {

        ///<summary>
        ///Версия игрового клиента
        ///</summary>
        [JsonProperty("game_version")]
        public string GameVersion {get; set;}

        ///<summary>
        ///Cписок поддерживаемых языков
        ///</summary>
        [JsonProperty("languages")]
        public Dictionary<string,string> Languages {get; set;}

        ///<summary>
        ///Время обновления информации о технике в энциклопедии
        ///</summary>
        [JsonProperty("tanks_updated_at")]
        public int? TanksUpdatedAt {get; set;}

        ///<summary>
        ///Возможные специальности экипажа
        ///</summary>
        [JsonProperty("vehicle_crew_roles")]
        public Dictionary<string,string> VehicleCrewRoles {get; set;}

        ///<summary>
        ///Доступные нации
        ///</summary>
        [JsonProperty("vehicle_nations")]
        public Dictionary<string,string> VehicleNations {get; set;}

        ///<summary>
        ///Возможные типы техники
        ///</summary>
        [JsonProperty("vehicle_types")]
        public Dictionary<string,string> VehicleTypes {get; set;}

        ///<summary>
        ///Разделы наград
        ///</summary>
        [JsonProperty("achievement_sections")]
        public WotEncyclopediaInfoAchievement_sections AchievementSections {get; set;}
    }
    public class WotEncyclopediaInfoAchievement_sections
    {

        ///<summary>
        ///Название раздела наград
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Порядок раздела наград
        ///</summary>
        [JsonProperty("order")]
        public Int64? Order {get; set;}
    }



    ///<summary>
    /// Игровые карты
    /// https://ru.wargaming.net/developers/api_reference/wot/encyclopedia/arenas/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/encyclopedia/arenas/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/encyclopedia/arenas/")]
    public class RequestWotEncyclopediaArenas:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}
    }
    
    ///<summary>
    ///Игровые карты
    ///</summary>
    public class ResponseWotEncyclopediaArenas:IResponse
    {

        ///<summary>
        ///Идентификатор карты
        ///</summary>
        [JsonProperty("arena_id")]
        public string ArenaId {get; set;}

        ///<summary>
        ///Тип карты
        ///</summary>
        [JsonProperty("camouflage_type")]
        public string CamouflageType {get; set;}

        ///<summary>
        ///Краткое описание карты
        ///</summary>
        [JsonProperty("description")]
        public string Description {get; set;}

        ///<summary>
        ///Локализованное название карты
        ///</summary>
        [JsonProperty("name_i18n")]
        public string NameI18n {get; set;}
    }


    ///<summary>
    /// Снаряжение и оборудование
    /// https://ru.wargaming.net/developers/api_reference/wot/encyclopedia/provisions/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/encyclopedia/provisions/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/encyclopedia/provisions/")]
    public class RequestWotEncyclopediaProvisions:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Тип. Допустимые значения: 
///
///"equipment" — Снаряжение 
///"optionalDevice" — Оборудование
        ///string
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}

        ///<summary>
        ///Идентификатор оборудования или снаряжения
        ///numeric, list
        ///</summary>
        [JsonProperty("provision_id")]
        public string ProvisionId {get; set;}
    }
    
    ///<summary>
    ///Снаряжение и оборудование
    ///</summary>
    public class ResponseWotEncyclopediaProvisions:IResponse
    {

        ///<summary>
        ///Описание достижения
        ///</summary>
        [JsonProperty("description")]
        public string Description {get; set;}

        ///<summary>
        ///Ссылка на изображение
        ///</summary>
        [JsonProperty("image")]
        public string Image {get; set;}

        ///<summary>
        ///Название техники
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Стоимость в кредитах
        ///</summary>
        [JsonProperty("price_credit")]
        public Int64? PriceCredit {get; set;}

        ///<summary>
        ///Стоимость в золоте
        ///</summary>
        [JsonProperty("price_gold")]
        public Int64? PriceGold {get; set;}

        ///<summary>
        ///Идентификатор оборудования или снаряжения
        ///</summary>
        [JsonProperty("provision_id")]
        public Int64? ProvisionId {get; set;}

        ///<summary>
        ///Техническое название
        ///</summary>
        [JsonProperty("tag")]
        public string Tag {get; set;}

        ///<summary>
        ///Тип: снаряжение или оборудование
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}

        ///<summary>
        ///Масса в килограммах. Только для оборудования.
        ///</summary>
        [JsonProperty("weight")]
        public Int64? Weight {get; set;}
    }


    ///<summary>
    /// Личные боевые задачи
    /// https://ru.wargaming.net/developers/api_reference/wot/encyclopedia/personalmissions/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/encyclopedia/personalmissions/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/encyclopedia/personalmissions/")]
    public class RequestWotEncyclopediaPersonalmissions:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Идентификатор кампании
        ///numeric, list
        ///</summary>
        [JsonProperty("campaign_id")]
        public string CampaignId {get; set;}

        ///<summary>
        ///Идентификатор операции
        ///numeric, list
        ///</summary>
        [JsonProperty("operation_id")]
        public string OperationId {get; set;}

        ///<summary>
        ///Идентификатор ветки задач
        ///numeric, list
        ///</summary>
        [JsonProperty("set_id")]
        public string SetId {get; set;}

        ///<summary>
        ///Тег задачи
        ///string, list
        ///</summary>
        [JsonProperty("tag")]
        public string Tag {get; set;}
    }
    
    ///<summary>
    ///Личные боевые задачи
    ///</summary>
    public class ResponseWotEncyclopediaPersonalmissions:IResponse
    {

        ///<summary>
        ///Идентификатор кампании
        ///</summary>
        [JsonProperty("campaign_id")]
        public Int64? CampaignId {get; set;}

        ///<summary>
        ///Описание кампании
        ///</summary>
        [JsonProperty("description")]
        public string Description {get; set;}

        ///<summary>
        ///Название кампании
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Операции кампании
        ///</summary>
        [JsonProperty("operations")]
        public WotEncyclopediaPersonalmissionsOperations Operations {get; set;}
    }
    public class WotEncyclopediaPersonalmissionsOperations
    {

        ///<summary>
        ///Описание операции
        ///</summary>
        [JsonProperty("description")]
        public string Description {get; set;}

        ///<summary>
        ///Ссылка на изображение операции
        ///</summary>
        [JsonProperty("image")]
        public string Image {get; set;}

        ///<summary>
        ///Количество задач в ветке
        ///</summary>
        [JsonProperty("missions_in_set")]
        public Int64? MissionsInSet {get; set;}

        ///<summary>
        ///Название операции
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Идентификатор следующей операции
        ///</summary>
        [JsonProperty("next_id")]
        public Int64? NextId {get; set;}

        ///<summary>
        ///Идентификатор операции
        ///</summary>
        [JsonProperty("operation_id")]
        public Int64? OperationId {get; set;}

        ///<summary>
        ///Количество веток задач операции
        ///</summary>
        [JsonProperty("sets_count")]
        public Int64? SetsCount {get; set;}

        ///<summary>
        ///Количество веток до следующей операции
        ///</summary>
        [JsonProperty("sets_to_next")]
        public Int64? SetsToNext {get; set;}

        ///<summary>
        ///Задачи операции
        ///</summary>
        [JsonProperty("missions")]
        public WotEncyclopediaPersonalmissionsOperationsMissions Missions {get; set;}

        ///<summary>
        ///Награда за операцию
        ///</summary>
        [JsonProperty("reward")]
        public WotEncyclopediaPersonalmissionsOperationsReward Reward {get; set;}
    }
    public class WotEncyclopediaPersonalmissionsOperationsMissions
    {

        ///<summary>
        ///Описание задачи
        ///</summary>
        [JsonProperty("description")]
        public string Description {get; set;}

        ///<summary>
        ///Советы
        ///</summary>
        [JsonProperty("hint")]
        public string Hint {get; set;}

        ///<summary>
        ///Максимальный уровень техники
        ///</summary>
        [JsonProperty("max_level")]
        public Int64? MaxLevel {get; set;}

        ///<summary>
        ///Минимальный уровень техники
        ///</summary>
        [JsonProperty("min_level")]
        public Int64? MinLevel {get; set;}

        ///<summary>
        ///Идентификатор задачи
        ///</summary>
        [JsonProperty("mission_id")]
        public Int64? MissionId {get; set;}

        ///<summary>
        ///Название задачи
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Идентификатор ветки задач
        ///</summary>
        [JsonProperty("set_id")]
        public Int64? SetId {get; set;}

        ///<summary>
        ///Теги задачи
        ///</summary>
        [JsonProperty("tags")]
        public string[] Tags {get; set;}

        ///<summary>
        ///Награды, сгруппированые по условию задачи
        ///</summary>
        [JsonProperty("rewards")]
        public WotEncyclopediaPersonalmissionsOperationsMissionsRewards Rewards {get; set;}
    }
    public class WotEncyclopediaPersonalmissionsOperationsMissionsRewards
    {

        ///<summary>
        ///Места в казарме
        ///</summary>
        [JsonProperty("berths")]
        public Int64? Berths {get; set;}

        ///<summary>
        ///Условия задачи
        ///</summary>
        [JsonProperty("conditions")]
        public string Conditions {get; set;}

        ///<summary>
        ///Кредиты
        ///</summary>
        [JsonProperty("credits")]
        public Int64? Credits {get; set;}

        ///<summary>
        ///Свободный опыт
        ///</summary>
        [JsonProperty("free_xp")]
        public Int64? FreeXp {get; set;}

        ///<summary>
        ///Список оборудования или расходников в формате идентификатор - количество единиц
        ///</summary>
        [JsonProperty("items")]
        public Dictionary<string,string> Items {get; set;}

        ///<summary>
        ///Дни премиум аккаунта
        ///</summary>
        [JsonProperty("premium")]
        public Int64? Premium {get; set;}

        ///<summary>
        ///Слоты
        ///</summary>
        [JsonProperty("slots")]
        public Int64? Slots {get; set;}

        ///<summary>
        ///Токены
        ///</summary>
        [JsonProperty("tokens")]
        public Int64? Tokens {get; set;}
    }


    public class WotEncyclopediaPersonalmissionsOperationsReward
    {

        ///<summary>
        ///Слоты
        ///</summary>
        [JsonProperty("slots")]
        public Int64? Slots {get; set;}

        ///<summary>
        ///Идентификаторы техники
        ///</summary>
        [JsonProperty("tanks")]
        public int[] Tanks {get; set;}
    }




    ///<summary>
    /// Личные резервы
    /// https://ru.wargaming.net/developers/api_reference/wot/encyclopedia/boosters/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/encyclopedia/boosters/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/encyclopedia/boosters/")]
    public class RequestWotEncyclopediaBoosters:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}
    }
    
    ///<summary>
    ///Личные резервы
    ///</summary>
    public class ResponseWotEncyclopediaBoosters:IResponse
    {

        ///<summary>
        ///Идентификатор личного резерва
        ///</summary>
        [JsonProperty("booster_id")]
        public Int64? BoosterId {get; set;}

        ///<summary>
        ///Описание личного резерва
        ///</summary>
        [JsonProperty("description")]
        public string Description {get; set;}

        ///<summary>
        ///Время окончания действия личного резерва в формате UTC
        ///</summary>
        [JsonProperty("expires_at")]
        public int? ExpiresAt {get; set;}

        ///<summary>
        ///Флаг автоматической активации личного резерва
        ///</summary>
        [JsonProperty("is_auto")]
        public bool IsAuto {get; set;}

        ///<summary>
        ///Время действия личного резерва
        ///</summary>
        [JsonProperty("lifetime")]
        public Int64? Lifetime {get; set;}

        ///<summary>
        ///Название личного резерва
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Ресурс, на который влияет личный резерв. Допустимые значения: credits, experience, crew_experience, free_experience.
        ///</summary>
        [JsonProperty("resource")]
        public string Resource {get; set;}

        ///<summary>
        ///Изображения личного резерва
        ///</summary>
        [JsonProperty("images")]
        public WotEncyclopediaBoostersImages Images {get; set;}
    }
    public class WotEncyclopediaBoostersImages
    {

        ///<summary>
        ///URL к большому изображению
        ///</summary>
        [JsonProperty("large")]
        public string Large {get; set;}

        ///<summary>
        ///URL к малому изображению
        ///</summary>
        [JsonProperty("small")]
        public string Small {get; set;}
    }



    ///<summary>
    /// Модули
    /// https://ru.wargaming.net/developers/api_reference/wot/encyclopedia/modules/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/encyclopedia/modules/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/encyclopedia/modules/")]
    public class RequestWotEncyclopediaModules:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Дополнительные поля, которые будут включены в ответ. Допустимые значения: 
///
///default_profile
        ///string, list
        ///</summary>
        [JsonProperty("extra")]
        public string Extra {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Тип модуля. Допустимые значения: 
///
///"vehicleRadio" — Радиостанции 
///"vehicleEngine" — Двигатели 
///"vehicleGun" — Орудия 
///"vehicleChassis" — Ходовые 
///"vehicleTurret" — Башни
        ///string
        ///</summary>
        [JsonProperty("type")]
        [FieldIsMandatory]
        public string Type {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Нация
        ///string
        ///</summary>
        [JsonProperty("nation")]
        [FieldIsMandatory]
        public string Nation {get; set;}

        ///<summary>
        ///Идентификатор модуля. Максимальное ограничение: 100.
        ///numeric, list
        ///</summary>
        [JsonProperty("module_id")]
        public string ModuleId {get; set;}
    }
    
    ///<summary>
    ///Модули
    ///</summary>
    public class ResponseWotEncyclopediaModules:IResponse
    {

        ///<summary>
        ///Ссылка на изображение
        ///</summary>
        [JsonProperty("image")]
        public string Image {get; set;}

        ///<summary>
        ///Идентификатор модуля
        ///</summary>
        [JsonProperty("module_id")]
        public Int64? ModuleId {get; set;}

        ///<summary>
        ///Название модуля
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Нация
        ///</summary>
        [JsonProperty("nation")]
        public string Nation {get; set;}

        ///<summary>
        ///Стоимость в кредитах
        ///</summary>
        [JsonProperty("price_credit")]
        public Int64? PriceCredit {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("tier")]
        public Int64? Tier {get; set;}

        ///<summary>
        ///Тип модуля
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}

        ///<summary>
        ///Масса (кг)
        ///</summary>
        [JsonProperty("weight")]
        public Int64? Weight {get; set;}

        ///<summary>
        ///Базовые технические характеристики модуля.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("default_profile")]
        public WotEncyclopediaModulesDefault_profile DefaultProfile {get; set;}
    }
    public class WotEncyclopediaModulesDefault_profile
    {

        ///<summary>
        ///Характеристики двигателя
        ///</summary>
        [JsonProperty("engine")]
        public WotEncyclopediaModulesDefault_profileEngine Engine {get; set;}

        ///<summary>
        ///Характеристики орудия
        ///</summary>
        [JsonProperty("gun")]
        public WotEncyclopediaModulesDefault_profileGun Gun {get; set;}

        ///<summary>
        ///Характеристики радиостанции
        ///</summary>
        [JsonProperty("radio")]
        public WotEncyclopediaModulesDefault_profileRadio Radio {get; set;}

        ///<summary>
        ///Характеристики ходовой
        ///</summary>
        [JsonProperty("suspension")]
        public WotEncyclopediaModulesDefault_profileSuspension Suspension {get; set;}

        ///<summary>
        ///Характеристики башни
        ///</summary>
        [JsonProperty("turret")]
        public WotEncyclopediaModulesDefault_profileTurret Turret {get; set;}
    }
    public class WotEncyclopediaModulesDefault_profileEngine
    {

        ///<summary>
        ///Вероятность возгорания
        ///</summary>
        [JsonProperty("fire_chance")]
        public double FireChance {get; set;}

        ///<summary>
        ///Мощность двигателя (л.с.)
        ///</summary>
        [JsonProperty("power")]
        public Int64? Power {get; set;}
    }

    public class WotEncyclopediaModulesDefault_profileGun
    {

        ///<summary>
        ///Время сведения (с)
        ///</summary>
        [JsonProperty("aim_time")]
        public double AimTime {get; set;}

        ///<summary>
        ///Разброс на 100 м (м)
        ///</summary>
        [JsonProperty("dispersion")]
        public double Dispersion {get; set;}

        ///<summary>
        ///Скорострельность (выстр/мин)
        ///</summary>
        [JsonProperty("fire_rate")]
        public double FireRate {get; set;}

        ///<summary>
        ///Количество снарядов
        ///</summary>
        [JsonProperty("max_ammo")]
        public Int64? MaxAmmo {get; set;}

        ///<summary>
        ///Угол ВН вниз (град)
        ///</summary>
        [JsonProperty("move_down_arc")]
        public Int64? MoveDownArc {get; set;}

        ///<summary>
        ///Угол ВН вверх (град)
        ///</summary>
        [JsonProperty("move_up_arc")]
        public Int64? MoveUpArc {get; set;}

        ///<summary>
        ///Время перезарядки (с)
        ///</summary>
        [JsonProperty("reload_time")]
        public double ReloadTime {get; set;}

        ///<summary>
        ///Скорость поворота (град/с)
        ///</summary>
        [JsonProperty("traverse_speed")]
        public Int64? TraverseSpeed {get; set;}

        ///<summary>
        ///Харатеристики снарядов орудия
        ///</summary>
        [JsonProperty("ammo")]
        public WotEncyclopediaModulesDefault_profileGunAmmo Ammo {get; set;}
    }
    public class WotEncyclopediaModulesDefault_profileGunAmmo
    {

        ///<summary>
        ///Урон (hp), в виде списка значений: min, avg, max
        ///</summary>
        [JsonProperty("damage")]
        public int[] Damage {get; set;}

        ///<summary>
        ///Пробитие (мм), в виде списка значений: min, avg, max
        ///</summary>
        [JsonProperty("penetration")]
        public int[] Penetration {get; set;}

        ///<summary>
        ///Тип снаряда
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}
    }


    public class WotEncyclopediaModulesDefault_profileRadio
    {

        ///<summary>
        ///Дальность связи
        ///</summary>
        [JsonProperty("signal_range")]
        public Int64? SignalRange {get; set;}
    }

    public class WotEncyclopediaModulesDefault_profileSuspension
    {

        ///<summary>
        ///Максимальная нагрузка (кг)
        ///</summary>
        [JsonProperty("load_limit")]
        public Int64? LoadLimit {get; set;}

        ///<summary>
        ///Скорость поворота (град/с)
        ///</summary>
        [JsonProperty("traverse_speed")]
        public Int64? TraverseSpeed {get; set;}
    }

    public class WotEncyclopediaModulesDefault_profileTurret
    {

        ///<summary>
        ///Броня: лоб (мм)
        ///</summary>
        [JsonProperty("armor_front")]
        public Int64? ArmorFront {get; set;}

        ///<summary>
        ///Броня: корма (мм)
        ///</summary>
        [JsonProperty("armor_rear")]
        public Int64? ArmorRear {get; set;}

        ///<summary>
        ///Броня: борт (мм)
        ///</summary>
        [JsonProperty("armor_sides")]
        public Int64? ArmorSides {get; set;}

        ///<summary>
        ///Прочность
        ///</summary>
        [JsonProperty("hp")]
        public Int64? Hp {get; set;}

        ///<summary>
        ///Скорость поворота (град/с)
        ///</summary>
        [JsonProperty("traverse_speed")]
        public Int64? TraverseSpeed {get; set;}

        ///<summary>
        ///Обзор (м)
        ///</summary>
        [JsonProperty("view_range")]
        public Int64? ViewRange {get; set;}
    }




    ///<summary>
    /// Типы рейтингов
    /// https://ru.wargaming.net/developers/api_reference/wot/ratings/types/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/ratings/types/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/ratings/types/")]
    public class RequestWotRatingsTypes:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Типы боёв. Допустимые значения: 
///
///"company" — Ротные бои 
///"random" — Случайные бои 
///"team" — Командные бои 
///"default" — без учёта типа боя (используется по умолчанию)
        ///string
        ///</summary>
        [JsonProperty("battle_type")]
        public string BattleType {get; set;}
    }
    
    ///<summary>
    ///Типы рейтингов
    ///</summary>
    public class ResponseWotRatingsTypes:IResponse
    {

        ///<summary>
        ///Категории рейтинга
        ///</summary>
        [JsonProperty("rank_fields")]
        public string[] RankFields {get; set;}

        ///<summary>
        ///Порог вхождения в рейтинг
        ///</summary>
        [JsonProperty("threshold")]
        public Int64? Threshold {get; set;}

        ///<summary>
        ///Период формирования рейтинга
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}
    }


    ///<summary>
    /// Даты c доступными рейтингами
    /// https://ru.wargaming.net/developers/api_reference/wot/ratings/dates/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/ratings/dates/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/ratings/dates/")]
    public class RequestWotRatingsDates:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Типы боёв. Допустимые значения: 
///
///"company" — Ротные бои 
///"random" — Случайные бои 
///"team" — Командные бои 
///"default" — без учёта типа боя (используется по умолчанию)
        ///string
        ///</summary>
        [JsonProperty("battle_type")]
        public string BattleType {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Период формирования рейтинга
        ///string
        ///</summary>
        [JsonProperty("type")]
        [FieldIsMandatory]
        public string Type {get; set;}

        ///<summary>
        ///Идентификатор аккаунта игрока
        ///numeric, list
        ///</summary>
        [JsonProperty("account_id")]
        public string AccountId {get; set;}
    }
    
    ///<summary>
    ///Даты c доступными рейтингами
    ///</summary>
    public class ResponseWotRatingsDates:IResponse
    {

        ///<summary>
        ///Даты c доступными рейтингами
        ///</summary>
        [JsonProperty("dates")]
        public int[] Dates {get; set;}
    }


    ///<summary>
    /// Рейтинги игрока
    /// https://ru.wargaming.net/developers/api_reference/wot/ratings/accounts/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/ratings/accounts/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/ratings/accounts/")]
    public class RequestWotRatingsAccounts:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Типы боёв. Допустимые значения: 
///
///"company" — Ротные бои 
///"random" — Случайные бои 
///"team" — Командные бои 
///"default" — без учёта типа боя (используется по умолчанию)
        ///string
        ///</summary>
        [JsonProperty("battle_type")]
        public string BattleType {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Период формирования рейтинга
        ///string
        ///</summary>
        [JsonProperty("type")]
        [FieldIsMandatory]
        public string Type {get; set;}

        ///<summary>
        ///Дата расчёта рейтингов. Не больше, чем 7 дней до текущей даты; по умолчанию - вчера. Дата в формате UNIX timestamp или ISO 8601. Например, 1376542800 или 2013-08-15T00:00:00
        ///timestamp/date
        ///</summary>
        [JsonProperty("date")]
        public string Date {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификаторы аккаунтов игроков
        ///numeric, list
        ///</summary>
        [JsonProperty("account_id")]
        [FieldIsMandatory]
        public string AccountId {get; set;}
    }
    
    ///<summary>
    ///Рейтинги игрока
    ///</summary>
    public class ResponseWotRatingsAccounts:IResponse
    {

        ///<summary>
        ///Идентификатор аккаунта игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Оставшееся количество боёв до участия в рейтингах
        ///</summary>
        [JsonProperty("battles_to_play")]
        public Int64? BattlesToPlay {get; set;}

        ///<summary>
        ///Количество проведённых боёв
        ///</summary>
        [JsonProperty("battles_count")]
        public WotRatingsAccountsBattles_count BattlesCount {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public WotRatingsAccountsCapture_points CapturePoints {get; set;}

        ///<summary>
        ///Средний нанесённый урон за бой
        ///</summary>
        [JsonProperty("damage_avg")]
        public WotRatingsAccountsDamage_avg DamageAvg {get; set;}

        ///<summary>
        ///Общий нанесённый урон
        ///</summary>
        [JsonProperty("damage_dealt")]
        public WotRatingsAccountsDamage_dealt DamageDealt {get; set;}

        ///<summary>
        ///Среднее количество уничтоженной техники за бой
        ///</summary>
        [JsonProperty("frags_avg")]
        public WotRatingsAccountsFrags_avg FragsAvg {get; set;}

        ///<summary>
        ///Количество уничтоженной техники
        ///</summary>
        [JsonProperty("frags_count")]
        public WotRatingsAccountsFrags_count FragsCount {get; set;}

        ///<summary>
        ///Личный рейтинг
        ///</summary>
        [JsonProperty("global_rating")]
        public WotRatingsAccountsGlobal_rating GlobalRating {get; set;}

        ///<summary>
        ///Процент попаданий
        ///</summary>
        [JsonProperty("hits_ratio")]
        public WotRatingsAccountsHits_ratio HitsRatio {get; set;}

        ///<summary>
        ///Среднее количество обнаруженной техники за бой
        ///</summary>
        [JsonProperty("spotted_avg")]
        public WotRatingsAccountsSpotted_avg SpottedAvg {get; set;}

        ///<summary>
        ///Количество обнаруженной техники
        ///</summary>
        [JsonProperty("spotted_count")]
        public WotRatingsAccountsSpotted_count SpottedCount {get; set;}

        ///<summary>
        ///Процент выживаемости
        ///</summary>
        [JsonProperty("survived_ratio")]
        public WotRatingsAccountsSurvived_ratio SurvivedRatio {get; set;}

        ///<summary>
        ///Процент побед
        ///</summary>
        [JsonProperty("wins_ratio")]
        public WotRatingsAccountsWins_ratio WinsRatio {get; set;}

        ///<summary>
        ///Суммарный опыт
        ///</summary>
        [JsonProperty("xp_amount")]
        public WotRatingsAccountsXp_amount XpAmount {get; set;}

        ///<summary>
        ///Средний опыт за бой
        ///</summary>
        [JsonProperty("xp_avg")]
        public WotRatingsAccountsXp_avg XpAvg {get; set;}

        ///<summary>
        ///Максимальный опыт за бой
        ///</summary>
        [JsonProperty("xp_max")]
        public WotRatingsAccountsXp_max XpMax {get; set;}
    }
    public class WotRatingsAccountsBattles_count
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotRatingsAccountsCapture_points
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotRatingsAccountsDamage_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotRatingsAccountsDamage_dealt
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotRatingsAccountsFrags_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotRatingsAccountsFrags_count
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotRatingsAccountsGlobal_rating
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotRatingsAccountsHits_ratio
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotRatingsAccountsSpotted_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotRatingsAccountsSpotted_count
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotRatingsAccountsSurvived_ratio
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotRatingsAccountsWins_ratio
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotRatingsAccountsXp_amount
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotRatingsAccountsXp_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotRatingsAccountsXp_max
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }



    ///<summary>
    /// Соседние позиции в рейтинге
    /// https://ru.wargaming.net/developers/api_reference/wot/ratings/neighbors/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/ratings/neighbors/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/ratings/neighbors/")]
    public class RequestWotRatingsNeighbors:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Типы боёв. Допустимые значения: 
///
///"company" — Ротные бои 
///"random" — Случайные бои 
///"team" — Командные бои 
///"default" — без учёта типа боя (используется по умолчанию)
        ///string
        ///</summary>
        [JsonProperty("battle_type")]
        public string BattleType {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Период формирования рейтинга
        ///string
        ///</summary>
        [JsonProperty("type")]
        [FieldIsMandatory]
        public string Type {get; set;}

        ///<summary>
        ///Дата расчёта рейтингов. Не больше, чем 7 дней до текущей даты; по умолчанию - вчера. Дата в формате UNIX timestamp или ISO 8601. Например, 1376542800 или 2013-08-15T00:00:00
        ///timestamp/date
        ///</summary>
        [JsonProperty("date")]
        public string Date {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор аккаунта игрока
        ///numeric
        ///</summary>
        [JsonProperty("account_id")]
        [FieldIsMandatory]
        public string AccountId {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Категория рейтинга
        ///string
        ///</summary>
        [JsonProperty("rank_field")]
        [FieldIsMandatory]
        public string RankField {get; set;}

        ///<summary>
        ///Количество возвращаемых записей. По умолчанию: 5. Максимальное значение: 50.
        ///numeric
        ///</summary>
        [JsonProperty("limit")]
        public string Limit {get; set;}
    }
    
    ///<summary>
    ///Соседние позиции в рейтинге
    ///</summary>
    public class ResponseWotRatingsNeighbors:IResponse
    {

        ///<summary>
        ///Идентификатор аккаунта игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Оставшееся количество боёв до участия в рейтингах
        ///</summary>
        [JsonProperty("battles_to_play")]
        public Int64? BattlesToPlay {get; set;}

        ///<summary>
        ///Количество проведённых боёв
        ///</summary>
        [JsonProperty("battles_count")]
        public WotRatingsNeighborsBattles_count BattlesCount {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public WotRatingsNeighborsCapture_points CapturePoints {get; set;}

        ///<summary>
        ///Средний нанесённый урон за бой
        ///</summary>
        [JsonProperty("damage_avg")]
        public WotRatingsNeighborsDamage_avg DamageAvg {get; set;}

        ///<summary>
        ///Общий нанесённый урон
        ///</summary>
        [JsonProperty("damage_dealt")]
        public WotRatingsNeighborsDamage_dealt DamageDealt {get; set;}

        ///<summary>
        ///Среднее количество уничтоженной техники за бой
        ///</summary>
        [JsonProperty("frags_avg")]
        public WotRatingsNeighborsFrags_avg FragsAvg {get; set;}

        ///<summary>
        ///Количество уничтоженной техники
        ///</summary>
        [JsonProperty("frags_count")]
        public WotRatingsNeighborsFrags_count FragsCount {get; set;}

        ///<summary>
        ///Личный рейтинг
        ///</summary>
        [JsonProperty("global_rating")]
        public WotRatingsNeighborsGlobal_rating GlobalRating {get; set;}

        ///<summary>
        ///Процент попаданий
        ///</summary>
        [JsonProperty("hits_ratio")]
        public WotRatingsNeighborsHits_ratio HitsRatio {get; set;}

        ///<summary>
        ///Среднее количество обнаруженной техники за бой
        ///</summary>
        [JsonProperty("spotted_avg")]
        public WotRatingsNeighborsSpotted_avg SpottedAvg {get; set;}

        ///<summary>
        ///Количество обнаруженной техники
        ///</summary>
        [JsonProperty("spotted_count")]
        public WotRatingsNeighborsSpotted_count SpottedCount {get; set;}

        ///<summary>
        ///Процент выживаемости
        ///</summary>
        [JsonProperty("survived_ratio")]
        public WotRatingsNeighborsSurvived_ratio SurvivedRatio {get; set;}

        ///<summary>
        ///Процент побед
        ///</summary>
        [JsonProperty("wins_ratio")]
        public WotRatingsNeighborsWins_ratio WinsRatio {get; set;}

        ///<summary>
        ///Суммарный опыт
        ///</summary>
        [JsonProperty("xp_amount")]
        public WotRatingsNeighborsXp_amount XpAmount {get; set;}

        ///<summary>
        ///Средний опыт за бой
        ///</summary>
        [JsonProperty("xp_avg")]
        public WotRatingsNeighborsXp_avg XpAvg {get; set;}

        ///<summary>
        ///Максимальный опыт за бой
        ///</summary>
        [JsonProperty("xp_max")]
        public WotRatingsNeighborsXp_max XpMax {get; set;}
    }
    public class WotRatingsNeighborsBattles_count
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotRatingsNeighborsCapture_points
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotRatingsNeighborsDamage_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotRatingsNeighborsDamage_dealt
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotRatingsNeighborsFrags_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotRatingsNeighborsFrags_count
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotRatingsNeighborsGlobal_rating
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotRatingsNeighborsHits_ratio
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotRatingsNeighborsSpotted_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotRatingsNeighborsSpotted_count
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotRatingsNeighborsSurvived_ratio
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotRatingsNeighborsWins_ratio
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotRatingsNeighborsXp_amount
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotRatingsNeighborsXp_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotRatingsNeighborsXp_max
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }



    ///<summary>
    /// Лучшие игроки
    /// https://ru.wargaming.net/developers/api_reference/wot/ratings/top/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/ratings/top/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/ratings/top/")]
    public class RequestWotRatingsTop:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Типы боёв. Допустимые значения: 
///
///"company" — Ротные бои 
///"random" — Случайные бои 
///"team" — Командные бои 
///"default" — без учёта типа боя (используется по умолчанию)
        ///string
        ///</summary>
        [JsonProperty("battle_type")]
        public string BattleType {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Период формирования рейтинга
        ///string
        ///</summary>
        [JsonProperty("type")]
        [FieldIsMandatory]
        public string Type {get; set;}

        ///<summary>
        ///Дата расчёта рейтингов. Не больше, чем 7 дней до текущей даты; по умолчанию - вчера. Дата в формате UNIX timestamp или ISO 8601. Например, 1376542800 или 2013-08-15T00:00:00
        ///timestamp/date
        ///</summary>
        [JsonProperty("date")]
        public string Date {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Категория рейтинга
        ///string
        ///</summary>
        [JsonProperty("rank_field")]
        [FieldIsMandatory]
        public string RankField {get; set;}

        ///<summary>
        ///Количество возвращаемых записей. По умолчанию: 10. Максимальное значение: 1000.
        ///numeric
        ///</summary>
        [JsonProperty("limit")]
        public string Limit {get; set;}

        ///<summary>
        ///Номер страницы результатов
        ///numeric
        ///</summary>
        [JsonProperty("page_no")]
        public string PageNo {get; set;}
    }
    
    ///<summary>
    ///Лучшие игроки
    ///</summary>
    public class ResponseWotRatingsTop:IResponse
    {

        ///<summary>
        ///Идентификатор аккаунта игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Оставшееся количество боёв до участия в рейтингах
        ///</summary>
        [JsonProperty("battles_to_play")]
        public Int64? BattlesToPlay {get; set;}

        ///<summary>
        ///Количество проведённых боёв
        ///</summary>
        [JsonProperty("battles_count")]
        public WotRatingsTopBattles_count BattlesCount {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public WotRatingsTopCapture_points CapturePoints {get; set;}

        ///<summary>
        ///Средний нанесённый урон за бой
        ///</summary>
        [JsonProperty("damage_avg")]
        public WotRatingsTopDamage_avg DamageAvg {get; set;}

        ///<summary>
        ///Общий нанесённый урон
        ///</summary>
        [JsonProperty("damage_dealt")]
        public WotRatingsTopDamage_dealt DamageDealt {get; set;}

        ///<summary>
        ///Среднее количество уничтоженной техники за бой
        ///</summary>
        [JsonProperty("frags_avg")]
        public WotRatingsTopFrags_avg FragsAvg {get; set;}

        ///<summary>
        ///Количество уничтоженной техники
        ///</summary>
        [JsonProperty("frags_count")]
        public WotRatingsTopFrags_count FragsCount {get; set;}

        ///<summary>
        ///Личный рейтинг
        ///</summary>
        [JsonProperty("global_rating")]
        public WotRatingsTopGlobal_rating GlobalRating {get; set;}

        ///<summary>
        ///Процент попаданий
        ///</summary>
        [JsonProperty("hits_ratio")]
        public WotRatingsTopHits_ratio HitsRatio {get; set;}

        ///<summary>
        ///Среднее количество обнаруженной техники за бой
        ///</summary>
        [JsonProperty("spotted_avg")]
        public WotRatingsTopSpotted_avg SpottedAvg {get; set;}

        ///<summary>
        ///Количество обнаруженной техники
        ///</summary>
        [JsonProperty("spotted_count")]
        public WotRatingsTopSpotted_count SpottedCount {get; set;}

        ///<summary>
        ///Процент выживаемости
        ///</summary>
        [JsonProperty("survived_ratio")]
        public WotRatingsTopSurvived_ratio SurvivedRatio {get; set;}

        ///<summary>
        ///Процент побед
        ///</summary>
        [JsonProperty("wins_ratio")]
        public WotRatingsTopWins_ratio WinsRatio {get; set;}

        ///<summary>
        ///Суммарный опыт
        ///</summary>
        [JsonProperty("xp_amount")]
        public WotRatingsTopXp_amount XpAmount {get; set;}

        ///<summary>
        ///Средний опыт за бой
        ///</summary>
        [JsonProperty("xp_avg")]
        public WotRatingsTopXp_avg XpAvg {get; set;}

        ///<summary>
        ///Максимальный опыт за бой
        ///</summary>
        [JsonProperty("xp_max")]
        public WotRatingsTopXp_max XpMax {get; set;}
    }
    public class WotRatingsTopBattles_count
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotRatingsTopCapture_points
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotRatingsTopDamage_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotRatingsTopDamage_dealt
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotRatingsTopFrags_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotRatingsTopFrags_count
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotRatingsTopGlobal_rating
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotRatingsTopHits_ratio
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotRatingsTopSpotted_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotRatingsTopSpotted_count
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotRatingsTopSurvived_ratio
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotRatingsTopWins_ratio
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotRatingsTopXp_amount
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotRatingsTopXp_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotRatingsTopXp_max
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }



    ///<summary>
    /// Типы рейтингов
    /// https://ru.wargaming.net/developers/api_reference/wot/clanratings/types/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/clanratings/types/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/clanratings/types/")]
    public class RequestWotClanratingsTypes:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}
    }
    
    ///<summary>
    ///Типы рейтингов
    ///</summary>
    public class ResponseWotClanratingsTypes:IResponse
    {

        ///<summary>
        ///Категории рейтинга
        ///</summary>
        [JsonProperty("rank_fields")]
        public string[] RankFields {get; set;}

        ///<summary>
        ///Период формирования рейтинга
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}
    }


    ///<summary>
    /// Даты c доступными рейтингами
    /// https://ru.wargaming.net/developers/api_reference/wot/clanratings/dates/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/clanratings/dates/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/clanratings/dates/")]
    public class RequestWotClanratingsDates:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Количество возвращаемых записей (может вернуться меньше записей, но не больше 365). Если переданный лимит превышает 365, тогда автоматически выставляется лимит в 7 (по умолчанию).
        ///numeric
        ///</summary>
        [JsonProperty("limit")]
        public string Limit {get; set;}
    }
    
    ///<summary>
    ///Даты c доступными рейтингами
    ///</summary>
    public class ResponseWotClanratingsDates:IResponse
    {

        ///<summary>
        ///Список дат, за которые есть рейтинговые данные
        ///</summary>
        [JsonProperty("dates")]
        public int[] Dates {get; set;}
    }


    ///<summary>
    /// Рейтинги кланов
    /// https://ru.wargaming.net/developers/api_reference/wot/clanratings/clans/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/clanratings/clans/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/clanratings/clans/")]
    public class RequestWotClanratingsClans:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Дата расчёта рейтингов. Дата в формате UNIX timestamp или ISO 8601. Например, 1376542800 или 2013-08-15T00:00:00
        ///timestamp/date
        ///</summary>
        [JsonProperty("date")]
        public string Date {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификаторы кланов
        ///numeric, list
        ///</summary>
        [JsonProperty("clan_id")]
        [FieldIsMandatory]
        public string ClanId {get; set;}
    }
    
    ///<summary>
    ///Рейтинги кланов
    ///</summary>
    public class ResponseWotClanratingsClans:IResponse
    {

        ///<summary>
        ///Идентификатор клана
        ///</summary>
        [JsonProperty("clan_id")]
        public Int64? ClanId {get; set;}

        ///<summary>
        ///Название клана
        ///</summary>
        [JsonProperty("clan_name")]
        public string ClanName {get; set;}

        ///<summary>
        ///Тег клана
        ///</summary>
        [JsonProperty("clan_tag")]
        public string ClanTag {get; set;}

        ///<summary>
        ///Причины, по которым не были рассчитаны определённые категории рейтингов. Содержит данные в формате ключ-значение, где ключом является название категории, а значением причина.
///Возможные причины:
///
///inactivity - Неактивность на протяжении 28 дней
///newbies_measure - В клане меньше десяти игроков
///limits - Условия ранка не выполнены
///blocked - Клан заблокирован
///other - Технические причины
        ///</summary>
        [JsonProperty("exclude_reasons")]
        public Dictionary<string,string> ExcludeReasons {get; set;}

        ///<summary>
        ///Среднее количество боёв
        ///</summary>
        [JsonProperty("battles_count_avg")]
        public WotClanratingsClansBattles_count_avg BattlesCountAvg {get; set;}

        ///<summary>
        ///Среднее количество боёв в день
        ///</summary>
        [JsonProperty("battles_count_avg_daily")]
        public WotClanratingsClansBattles_count_avg_daily BattlesCountAvgDaily {get; set;}

        ///<summary>
        ///Показатель клановой эффективности
        ///</summary>
        [JsonProperty("efficiency")]
        public WotClanratingsClansEfficiency Efficiency {get; set;}

        ///<summary>
        ///Эло-рейтинг клана в Битвах за Укрепрайон
        ///</summary>
        [JsonProperty("fb_elo_rating")]
        public WotClanratingsClansFb_elo_rating FbEloRating {get; set;}

        ///<summary>
        ///Эло-рейтинг клана в Битвах за Укрепрайон в абсолютном дивизионе
        ///</summary>
        [JsonProperty("fb_elo_rating_10")]
        public WotClanratingsClansFb_elo_rating_10 FbEloRating10 {get; set;}

        ///<summary>
        ///Эло-рейтинг клана в Битвах за Укрепрайон в чемпионском дивизионе
        ///</summary>
        [JsonProperty("fb_elo_rating_8")]
        public WotClanratingsClansFb_elo_rating_8 FbEloRating8 {get; set;}

        ///<summary>
        ///Среднее значение глобального рейтинга
        ///</summary>
        [JsonProperty("global_rating_avg")]
        public WotClanratingsClansGlobal_rating_avg GlobalRatingAvg {get; set;}

        ///<summary>
        ///Средневзвешенное значение глобального рейтинга
        ///</summary>
        [JsonProperty("global_rating_weighted_avg")]
        public WotClanratingsClansGlobal_rating_weighted_avg GlobalRatingWeightedAvg {get; set;}

        ///<summary>
        ///Эло-рейтинг на Глобальной карте
        ///</summary>
        [JsonProperty("gm_elo_rating")]
        public WotClanratingsClansGm_elo_rating GmEloRating {get; set;}

        ///<summary>
        ///Эло-рейтинг на Глобальной карте в абсолютном дивизионе
        ///</summary>
        [JsonProperty("gm_elo_rating_10")]
        public WotClanratingsClansGm_elo_rating_10 GmEloRating10 {get; set;}

        ///<summary>
        ///Эло-рейтинг на Глобальной карте в среднем дивизионе
        ///</summary>
        [JsonProperty("gm_elo_rating_6")]
        public WotClanratingsClansGm_elo_rating_6 GmEloRating6 {get; set;}

        ///<summary>
        ///Эло-рейтинг на Глобальной карте в чемпионском дивизионе
        ///</summary>
        [JsonProperty("gm_elo_rating_8")]
        public WotClanratingsClansGm_elo_rating_8 GmEloRating8 {get; set;}

        ///<summary>
        ///Рейтинг в Битвах за Укрепрайон
        ///</summary>
        [JsonProperty("rating_fort")]
        public WotClanratingsClansRating_fort RatingFort {get; set;}

        ///<summary>
        ///Среднее количество техники 10 уровня на игрока клана
        ///</summary>
        [JsonProperty("v10l_avg")]
        public WotClanratingsClansV10l_avg V10lAvg {get; set;}

        ///<summary>
        ///Средний процент побед
        ///</summary>
        [JsonProperty("wins_ratio_avg")]
        public WotClanratingsClansWins_ratio_avg WinsRatioAvg {get; set;}
    }
    public class WotClanratingsClansBattles_count_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotClanratingsClansBattles_count_avg_daily
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotClanratingsClansEfficiency
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotClanratingsClansFb_elo_rating
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotClanratingsClansFb_elo_rating_10
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotClanratingsClansFb_elo_rating_8
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotClanratingsClansGlobal_rating_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotClanratingsClansGlobal_rating_weighted_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotClanratingsClansGm_elo_rating
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotClanratingsClansGm_elo_rating_10
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotClanratingsClansGm_elo_rating_6
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotClanratingsClansGm_elo_rating_8
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotClanratingsClansRating_fort
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotClanratingsClansV10l_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotClanratingsClansWins_ratio_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }



    ///<summary>
    /// Соседние позиции в рейтинге кланов
    /// https://ru.wargaming.net/developers/api_reference/wot/clanratings/neighbors/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/clanratings/neighbors/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/clanratings/neighbors/")]
    public class RequestWotClanratingsNeighbors:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Дата расчёта рейтингов. Дата в формате UNIX timestamp или ISO 8601. Например, 1376542800 или 2013-08-15T00:00:00
        ///timestamp/date
        ///</summary>
        [JsonProperty("date")]
        public string Date {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Категория рейтинга
        ///string
        ///</summary>
        [JsonProperty("rank_field")]
        [FieldIsMandatory]
        public string RankField {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор клана
        ///numeric
        ///</summary>
        [JsonProperty("clan_id")]
        [FieldIsMandatory]
        public string ClanId {get; set;}

        ///<summary>
        ///Количество возвращаемых записей (может вернуться меньше записей, но не больше 50). Если переданный лимит превышает 50, тогда автоматически выставляется лимит в 5 (по умолчанию).
        ///numeric
        ///</summary>
        [JsonProperty("limit")]
        public string Limit {get; set;}
    }
    
    ///<summary>
    ///Соседние позиции в рейтинге кланов
    ///</summary>
    public class ResponseWotClanratingsNeighbors:IResponse
    {

        ///<summary>
        ///Идентификатор клана
        ///</summary>
        [JsonProperty("clan_id")]
        public Int64? ClanId {get; set;}

        ///<summary>
        ///Название клана
        ///</summary>
        [JsonProperty("clan_name")]
        public string ClanName {get; set;}

        ///<summary>
        ///Тег клана
        ///</summary>
        [JsonProperty("clan_tag")]
        public string ClanTag {get; set;}

        ///<summary>
        ///Причины, по которым не были рассчитаны определённые категории рейтингов. Содержит данные в формате ключ-значение, где ключом является название категории, а значением причина.
///Возможные причины:
///
///inactivity - Неактивность на протяжении 28 дней
///newbies_measure - В клане меньше десяти игроков
///limits - Условия ранка не выполнены
///blocked - Клан заблокирован
///other - Технические причины
        ///</summary>
        [JsonProperty("exclude_reasons")]
        public Dictionary<string,string> ExcludeReasons {get; set;}

        ///<summary>
        ///Среднее количество боёв
        ///</summary>
        [JsonProperty("battles_count_avg")]
        public WotClanratingsNeighborsBattles_count_avg BattlesCountAvg {get; set;}

        ///<summary>
        ///Среднее количество боёв в день
        ///</summary>
        [JsonProperty("battles_count_avg_daily")]
        public WotClanratingsNeighborsBattles_count_avg_daily BattlesCountAvgDaily {get; set;}

        ///<summary>
        ///Показатель клановой эффективности
        ///</summary>
        [JsonProperty("efficiency")]
        public WotClanratingsNeighborsEfficiency Efficiency {get; set;}

        ///<summary>
        ///Эло-рейтинг клана в Битвах за Укрепрайон
        ///</summary>
        [JsonProperty("fb_elo_rating")]
        public WotClanratingsNeighborsFb_elo_rating FbEloRating {get; set;}

        ///<summary>
        ///Эло-рейтинг клана в Битвах за Укрепрайон в абсолютном дивизионе
        ///</summary>
        [JsonProperty("fb_elo_rating_10")]
        public WotClanratingsNeighborsFb_elo_rating_10 FbEloRating10 {get; set;}

        ///<summary>
        ///Эло-рейтинг клана в Битвах за Укрепрайон в чемпионском дивизионе
        ///</summary>
        [JsonProperty("fb_elo_rating_8")]
        public WotClanratingsNeighborsFb_elo_rating_8 FbEloRating8 {get; set;}

        ///<summary>
        ///Среднее значение глобального рейтинга
        ///</summary>
        [JsonProperty("global_rating_avg")]
        public WotClanratingsNeighborsGlobal_rating_avg GlobalRatingAvg {get; set;}

        ///<summary>
        ///Средневзвешенное значение глобального рейтинга
        ///</summary>
        [JsonProperty("global_rating_weighted_avg")]
        public WotClanratingsNeighborsGlobal_rating_weighted_avg GlobalRatingWeightedAvg {get; set;}

        ///<summary>
        ///Эло-рейтинг на Глобальной карте
        ///</summary>
        [JsonProperty("gm_elo_rating")]
        public WotClanratingsNeighborsGm_elo_rating GmEloRating {get; set;}

        ///<summary>
        ///Эло-рейтинг на Глобальной карте в абсолютном дивизионе
        ///</summary>
        [JsonProperty("gm_elo_rating_10")]
        public WotClanratingsNeighborsGm_elo_rating_10 GmEloRating10 {get; set;}

        ///<summary>
        ///Эло-рейтинг на Глобальной карте в среднем дивизионе
        ///</summary>
        [JsonProperty("gm_elo_rating_6")]
        public WotClanratingsNeighborsGm_elo_rating_6 GmEloRating6 {get; set;}

        ///<summary>
        ///Эло-рейтинг на Глобальной карте в чемпионском дивизионе
        ///</summary>
        [JsonProperty("gm_elo_rating_8")]
        public WotClanratingsNeighborsGm_elo_rating_8 GmEloRating8 {get; set;}

        ///<summary>
        ///Рейтинг в Битвах за Укрепрайон
        ///</summary>
        [JsonProperty("rating_fort")]
        public WotClanratingsNeighborsRating_fort RatingFort {get; set;}

        ///<summary>
        ///Среднее количество техники 10 уровня на игрока клана
        ///</summary>
        [JsonProperty("v10l_avg")]
        public WotClanratingsNeighborsV10l_avg V10lAvg {get; set;}

        ///<summary>
        ///Средний процент побед
        ///</summary>
        [JsonProperty("wins_ratio_avg")]
        public WotClanratingsNeighborsWins_ratio_avg WinsRatioAvg {get; set;}
    }
    public class WotClanratingsNeighborsBattles_count_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotClanratingsNeighborsBattles_count_avg_daily
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotClanratingsNeighborsEfficiency
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotClanratingsNeighborsFb_elo_rating
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotClanratingsNeighborsFb_elo_rating_10
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotClanratingsNeighborsFb_elo_rating_8
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotClanratingsNeighborsGlobal_rating_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotClanratingsNeighborsGlobal_rating_weighted_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotClanratingsNeighborsGm_elo_rating
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotClanratingsNeighborsGm_elo_rating_10
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotClanratingsNeighborsGm_elo_rating_6
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotClanratingsNeighborsGm_elo_rating_8
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotClanratingsNeighborsRating_fort
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotClanratingsNeighborsV10l_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotClanratingsNeighborsWins_ratio_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }



    ///<summary>
    /// Лучшие кланы
    /// https://ru.wargaming.net/developers/api_reference/wot/clanratings/top/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/clanratings/top/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/clanratings/top/")]
    public class RequestWotClanratingsTop:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Дата расчёта рейтингов. Дата в формате UNIX timestamp или ISO 8601. Например, 1376542800 или 2013-08-15T00:00:00
        ///timestamp/date
        ///</summary>
        [JsonProperty("date")]
        public string Date {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Категория рейтинга
        ///string
        ///</summary>
        [JsonProperty("rank_field")]
        [FieldIsMandatory]
        public string RankField {get; set;}

        ///<summary>
        ///Номер страницы
        ///numeric
        ///</summary>
        [JsonProperty("page_no")]
        public string PageNo {get; set;}

        ///<summary>
        ///Количество возвращаемых записей (может вернуться меньше записей, но не больше 1000). Если переданный лимит превышает 1000, тогда автоматически выставляется лимит в 10 (по умолчанию).
        ///numeric
        ///</summary>
        [JsonProperty("limit")]
        public string Limit {get; set;}
    }
    
    ///<summary>
    ///Лучшие кланы
    ///</summary>
    public class ResponseWotClanratingsTop:IResponse
    {

        ///<summary>
        ///Идентификатор клана
        ///</summary>
        [JsonProperty("clan_id")]
        public Int64? ClanId {get; set;}

        ///<summary>
        ///Название клана
        ///</summary>
        [JsonProperty("clan_name")]
        public string ClanName {get; set;}

        ///<summary>
        ///Тег клана
        ///</summary>
        [JsonProperty("clan_tag")]
        public string ClanTag {get; set;}

        ///<summary>
        ///Причины, по которым не были рассчитаны определённые категории рейтингов. Содержит данные в формате ключ-значение, где ключом является название категории, а значением причина.
///Возможные причины:
///
///inactivity - Неактивность на протяжении 28 дней
///newbies_measure - В клане меньше десяти игроков
///limits - Условия ранка не выполнены
///blocked - Клан заблокирован
///other - Технические причины
        ///</summary>
        [JsonProperty("exclude_reasons")]
        public Dictionary<string,string> ExcludeReasons {get; set;}

        ///<summary>
        ///Среднее количество боёв
        ///</summary>
        [JsonProperty("battles_count_avg")]
        public WotClanratingsTopBattles_count_avg BattlesCountAvg {get; set;}

        ///<summary>
        ///Среднее количество боёв в день
        ///</summary>
        [JsonProperty("battles_count_avg_daily")]
        public WotClanratingsTopBattles_count_avg_daily BattlesCountAvgDaily {get; set;}

        ///<summary>
        ///Показатель клановой эффективности
        ///</summary>
        [JsonProperty("efficiency")]
        public WotClanratingsTopEfficiency Efficiency {get; set;}

        ///<summary>
        ///Эло-рейтинг клана в Битвах за Укрепрайон
        ///</summary>
        [JsonProperty("fb_elo_rating")]
        public WotClanratingsTopFb_elo_rating FbEloRating {get; set;}

        ///<summary>
        ///Эло-рейтинг клана в Битвах за Укрепрайон в абсолютном дивизионе
        ///</summary>
        [JsonProperty("fb_elo_rating_10")]
        public WotClanratingsTopFb_elo_rating_10 FbEloRating10 {get; set;}

        ///<summary>
        ///Эло-рейтинг клана в Битвах за Укрепрайон в чемпионском дивизионе
        ///</summary>
        [JsonProperty("fb_elo_rating_8")]
        public WotClanratingsTopFb_elo_rating_8 FbEloRating8 {get; set;}

        ///<summary>
        ///Среднее значение глобального рейтинга
        ///</summary>
        [JsonProperty("global_rating_avg")]
        public WotClanratingsTopGlobal_rating_avg GlobalRatingAvg {get; set;}

        ///<summary>
        ///Средневзвешенное значение глобального рейтинга
        ///</summary>
        [JsonProperty("global_rating_weighted_avg")]
        public WotClanratingsTopGlobal_rating_weighted_avg GlobalRatingWeightedAvg {get; set;}

        ///<summary>
        ///Эло-рейтинг на Глобальной карте
        ///</summary>
        [JsonProperty("gm_elo_rating")]
        public WotClanratingsTopGm_elo_rating GmEloRating {get; set;}

        ///<summary>
        ///Эло-рейтинг на Глобальной карте в абсолютном дивизионе
        ///</summary>
        [JsonProperty("gm_elo_rating_10")]
        public WotClanratingsTopGm_elo_rating_10 GmEloRating10 {get; set;}

        ///<summary>
        ///Эло-рейтинг на Глобальной карте в среднем дивизионе
        ///</summary>
        [JsonProperty("gm_elo_rating_6")]
        public WotClanratingsTopGm_elo_rating_6 GmEloRating6 {get; set;}

        ///<summary>
        ///Эло-рейтинг на Глобальной карте в чемпионском дивизионе
        ///</summary>
        [JsonProperty("gm_elo_rating_8")]
        public WotClanratingsTopGm_elo_rating_8 GmEloRating8 {get; set;}

        ///<summary>
        ///Рейтинг в Битвах за Укрепрайон
        ///</summary>
        [JsonProperty("rating_fort")]
        public WotClanratingsTopRating_fort RatingFort {get; set;}

        ///<summary>
        ///Среднее количество техники 10 уровня на игрока клана
        ///</summary>
        [JsonProperty("v10l_avg")]
        public WotClanratingsTopV10l_avg V10lAvg {get; set;}

        ///<summary>
        ///Средний процент побед
        ///</summary>
        [JsonProperty("wins_ratio_avg")]
        public WotClanratingsTopWins_ratio_avg WinsRatioAvg {get; set;}
    }
    public class WotClanratingsTopBattles_count_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotClanratingsTopBattles_count_avg_daily
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotClanratingsTopEfficiency
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotClanratingsTopFb_elo_rating
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotClanratingsTopFb_elo_rating_10
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotClanratingsTopFb_elo_rating_8
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotClanratingsTopGlobal_rating_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotClanratingsTopGlobal_rating_weighted_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotClanratingsTopGm_elo_rating
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotClanratingsTopGm_elo_rating_10
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotClanratingsTopGm_elo_rating_6
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotClanratingsTopGm_elo_rating_8
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WotClanratingsTopRating_fort
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotClanratingsTopV10l_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WotClanratingsTopWins_ratio_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }



    ///<summary>
    /// Статистика по технике игрока
    /// https://ru.wargaming.net/developers/api_reference/wot/tanks/stats/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/tanks/stats/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/tanks/stats/")]
    public class RequestWotTanksStats:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Ключ доступа к персональным данным пользователя. Имеет срок действия. Для получения ключа доступа необходимо запросить аутентификацию.
        ///string
        ///</summary>
        [JsonProperty("access_token")]
        public string AccessToken {get; set;}

        ///<summary>
        ///Дополнительные поля, которые будут включены в ответ. Допустимые значения: 
///
///fallout
///random
        ///string, list
        ///</summary>
        [JsonProperty("extra")]
        public string Extra {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор аккаунта игрока
        ///numeric
        ///</summary>
        [JsonProperty("account_id")]
        [FieldIsMandatory]
        public string AccountId {get; set;}

        ///<summary>
        ///Идентификатор техники игрока
        ///numeric, list
        ///</summary>
        [JsonProperty("tank_id")]
        public string TankId {get; set;}

        ///<summary>
        ///Фильтр по наличию техники в Ангаре. Если параметр не указан, возвращается вся техника. Параметр обрабатывается только при наличии действующего access_token для указанного account_id. Допустимые значения: 
///
///"1" — Возвращать технику из Ангара. 
///"0" — Возвращать технику, которой уже нет в Ангаре.
        ///string
        ///</summary>
        [JsonProperty("in_garage")]
        public string InGarage {get; set;}
    }
    
    ///<summary>
    ///Статистика по технике игрока
    ///</summary>
    public class ResponseWotTanksStats:IResponse
    {

        ///<summary>
        ///Идентификатор аккаунта игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Знаки классности:
///
///0 — Отсутствует
///1 — 3 степень
///2 — 2 степень
///3 — 1 степень
///4 — Мастер
        ///</summary>
        [JsonProperty("mark_of_mastery")]
        public Int64? MarkOfMastery {get; set;}

        ///<summary>
        ///Максимум уничтожено за бой
        ///</summary>
        [JsonProperty("max_frags")]
        public Int64? MaxFrags {get; set;}

        ///<summary>
        ///Максимальный опыт за бой
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Идентификатор техники
        ///</summary>
        [JsonProperty("tank_id")]
        public Int64? TankId {get; set;}

        ///<summary>
        ///Уничтоженная техника. Данные доступны только при наличии действующего access_token для указанного аккаунта.
        ///</summary>
        [JsonProperty("frags")]
        public Dictionary<string,string> Frags {get; set;}

        ///<summary>
        ///Присутствие техники в Ангаре. Данные доступны только при наличии действующего access_token для указанного аккаунта.
        ///</summary>
        [JsonProperty("in_garage")]
        public bool InGarage {get; set;}

        ///<summary>
        ///Вся статистика
        ///</summary>
        [JsonProperty("all")]
        public WotTanksStatsAll All {get; set;}

        ///<summary>
        ///Статистика боёв в составе клана
        ///</summary>
        [JsonProperty("clan")]
        public WotTanksStatsClan Clan {get; set;}

        ///<summary>
        ///Статистика боёв в составе роты
        ///</summary>
        [JsonProperty("company")]
        public WotTanksStatsCompany Company {get; set;}

        ///<summary>
        ///Статистика в режиме «Бой до последнего».
///Дополнительное поле.
        ///</summary>
        [JsonProperty("fallout")]
        public WotTanksStatsFallout Fallout {get; set;}

        ///<summary>
        ///Вся статистика боёв на Глобальной карте
        ///</summary>
        [JsonProperty("globalmap")]
        public WotTanksStatsGlobalmap Globalmap {get; set;}

        ///<summary>
        ///Статистика случайных боёв.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("random")]
        public WotTanksStatsRandom Random {get; set;}

        ///<summary>
        ///Статистика командных боёв постоянных команд
        ///</summary>
        [JsonProperty("regular_team")]
        public WotTanksStatsRegular_team RegularTeam {get; set;}

        ///<summary>
        ///Общая по всем кланам статистика боёв игрока в режиме обороны Укрепрайона
        ///</summary>
        [JsonProperty("stronghold_defense")]
        public WotTanksStatsStronghold_defense StrongholdDefense {get; set;}

        ///<summary>
        ///Общая по всем кланам статистика боёв игрока в режиме вылазок Укрепрайона
        ///</summary>
        [JsonProperty("stronghold_skirmish")]
        public WotTanksStatsStronghold_skirmish StrongholdSkirmish {get; set;}

        ///<summary>
        ///Статистика командных боёв
        ///</summary>
        [JsonProperty("team")]
        public WotTanksStatsTeam Team {get; set;}
    }
    public class WotTanksStatsAll
    {

        ///<summary>
        ///Средний заблокированный бронёй урон за бой. Заблокированный бронёй урон — это урон от снарядов (бронебойных, кумулятивных и подкалиберных), которые попали в танк, но не нанесли урона.
///Значение считается с версии игры 9.0.
        ///</summary>
        [JsonProperty("avg_damage_blocked")]
        public double AvgDamageBlocked {get; set;}

        ///<summary>
        ///Средний опыт за бой
        ///</summary>
        [JsonProperty("battle_avg_xp")]
        public Int64? BattleAvgXp {get; set;}

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Нанесено повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Получено урона
        ///</summary>
        [JsonProperty("damage_received")]
        public Int64? DamageReceived {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий
        ///</summary>
        [JsonProperty("direct_hits_received")]
        public Int64? DirectHitsReceived {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits")]
        public Int64? ExplosionHits {get; set;}

        ///<summary>
        ///Количество полученных осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits_received")]
        public Int64? ExplosionHitsReceived {get; set;}

        ///<summary>
        ///Уничтожено техники
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Процент попаданий
        ///</summary>
        [JsonProperty("hits_percents")]
        public Int64? HitsPercents {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий, не нанёсших урон
        ///</summary>
        [JsonProperty("no_damage_direct_hits_received")]
        public Int64? NoDamageDirectHitsReceived {get; set;}

        ///<summary>
        ///Количество пробитий
        ///</summary>
        [JsonProperty("piercings")]
        public Int64? Piercings {get; set;}

        ///<summary>
        ///Количество полученных пробитий
        ///</summary>
        [JsonProperty("piercings_received")]
        public Int64? PiercingsReceived {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}

        ///<summary>
        ///Обнаружено противников
        ///</summary>
        [JsonProperty("spotted")]
        public Int64? Spotted {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Отношение заблокированного бронёй урона к полученному игроком урону от бронебойных, кумулятивных, подкалиберных снарядов.
///Значение считается с версии игры 9.0.
        ///</summary>
        [JsonProperty("tanking_factor")]
        public double TankingFactor {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Суммарный опыт
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}
    }

    public class WotTanksStatsClan
    {

        ///<summary>
        ///Средний опыт за бой
        ///</summary>
        [JsonProperty("battle_avg_xp")]
        public Int64? BattleAvgXp {get; set;}

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Нанесено повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Получено урона
        ///</summary>
        [JsonProperty("damage_received")]
        public Int64? DamageReceived {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Уничтожено техники
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Процент попаданий
        ///</summary>
        [JsonProperty("hits_percents")]
        public Int64? HitsPercents {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage")]
        public Int64? MaxDamage {get; set;}

        ///<summary>
        ///Максимум уничтожено за бой
        ///</summary>
        [JsonProperty("max_frags")]
        public Int64? MaxFrags {get; set;}

        ///<summary>
        ///Максимальный опыт за бой
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}

        ///<summary>
        ///Обнаружено противников
        ///</summary>
        [JsonProperty("spotted")]
        public Int64? Spotted {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Суммарный опыт
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}
    }

    public class WotTanksStatsCompany
    {

        ///<summary>
        ///Средний опыт за бой
        ///</summary>
        [JsonProperty("battle_avg_xp")]
        public Int64? BattleAvgXp {get; set;}

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Нанесено повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Получено урона
        ///</summary>
        [JsonProperty("damage_received")]
        public Int64? DamageReceived {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Уничтожено техники
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Процент попаданий
        ///</summary>
        [JsonProperty("hits_percents")]
        public Int64? HitsPercents {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}

        ///<summary>
        ///Обнаружено противников
        ///</summary>
        [JsonProperty("spotted")]
        public Int64? Spotted {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Суммарный опыт
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}
    }

    public class WotTanksStatsFallout
    {

        ///<summary>
        ///Урон, нанесённый при помощи боевых резервов
        ///</summary>
        [JsonProperty("avatar_damage_dealt")]
        public Int64? AvatarDamageDealt {get; set;}

        ///<summary>
        ///Уничтожено при помощи боевых резервов
        ///</summary>
        [JsonProperty("avatar_frags")]
        public Int64? AvatarFrags {get; set;}

        ///<summary>
        ///Средний урон, нанесённый с вашей помощью
        ///</summary>
        [JsonProperty("avg_damage_assisted")]
        public double AvgDamageAssisted {get; set;}

        ///<summary>
        ///Средний урон по вашим разведданным
        ///</summary>
        [JsonProperty("avg_damage_assisted_radio")]
        public double AvgDamageAssistedRadio {get; set;}

        ///<summary>
        ///Средний урон после вашего попадания, сбившего гусеницу
        ///</summary>
        [JsonProperty("avg_damage_assisted_track")]
        public double AvgDamageAssistedTrack {get; set;}

        ///<summary>
        ///Средний заблокированный бронёй урон за бой. Заблокированный бронёй урон — это урон от снарядов (бронебойных, кумулятивных и подкалиберных), которые попали в танк, но не нанесли урона.
///Значение считается с версии игры 9.0.
        ///</summary>
        [JsonProperty("avg_damage_blocked")]
        public double AvgDamageBlocked {get; set;}

        ///<summary>
        ///Средний опыт за бой
        ///</summary>
        [JsonProperty("battle_avg_xp")]
        public Int64? BattleAvgXp {get; set;}

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Нанесено повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Получено урона
        ///</summary>
        [JsonProperty("damage_received")]
        public Int64? DamageReceived {get; set;}

        ///<summary>
        ///Погиб
        ///</summary>
        [JsonProperty("death_count")]
        public Int64? DeathCount {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий
        ///</summary>
        [JsonProperty("direct_hits_received")]
        public Int64? DirectHitsReceived {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits")]
        public Int64? ExplosionHits {get; set;}

        ///<summary>
        ///Количество полученных осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits_received")]
        public Int64? ExplosionHitsReceived {get; set;}

        ///<summary>
        ///Захвачено флагов в составе взвода
        ///</summary>
        [JsonProperty("flag_capture")]
        public Int64? FlagCapture {get; set;}

        ///<summary>
        ///Захвачено флагов в роли одиночного игрока
        ///</summary>
        [JsonProperty("flag_capture_solo")]
        public Int64? FlagCaptureSolo {get; set;}

        ///<summary>
        ///Уничтожено техники
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Процент попаданий
        ///</summary>
        [JsonProperty("hits_percents")]
        public Int64? HitsPercents {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage")]
        public Int64? MaxDamage {get; set;}

        ///<summary>
        ///Максимальный урон, нанесённый в одном бою, включая урон от аватара
        ///</summary>
        [JsonProperty("max_damage_with_avatar")]
        public Int64? MaxDamageWithAvatar {get; set;}

        ///<summary>
        ///Максимум уничтожено за бой
        ///</summary>
        [JsonProperty("max_frags")]
        public Int64? MaxFrags {get; set;}

        ///<summary>
        ///Максимальное количество уничтоженной техники, включая технику, уничтоженную аватаром
        ///</summary>
        [JsonProperty("max_frags_with_avatar")]
        public Int64? MaxFragsWithAvatar {get; set;}

        ///<summary>
        ///Максимальное количество Очков победы, заработанное в режиме «Бой до последнего»
        ///</summary>
        [JsonProperty("max_win_points")]
        public Int64? MaxWinPoints {get; set;}

        ///<summary>
        ///Максимальный опыт за бой
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий, не нанёсших урон
        ///</summary>
        [JsonProperty("no_damage_direct_hits_received")]
        public Int64? NoDamageDirectHitsReceived {get; set;}

        ///<summary>
        ///Количество пробитий
        ///</summary>
        [JsonProperty("piercings")]
        public Int64? Piercings {get; set;}

        ///<summary>
        ///Количество полученных пробитий
        ///</summary>
        [JsonProperty("piercings_received")]
        public Int64? PiercingsReceived {get; set;}

        ///<summary>
        ///Ресурсы, захваченные на ресурсных точках
        ///</summary>
        [JsonProperty("resource_absorbed")]
        public Int64? ResourceAbsorbed {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}

        ///<summary>
        ///Обнаружено противников
        ///</summary>
        [JsonProperty("spotted")]
        public Int64? Spotted {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Отношение заблокированного бронёй урона к полученному игроком урону от бронебойных, кумулятивных, подкалиберных снарядов.
///Значение считается с версии игры 9.0.
        ///</summary>
        [JsonProperty("tanking_factor")]
        public double TankingFactor {get; set;}

        ///<summary>
        ///Очки победы
        ///</summary>
        [JsonProperty("win_points")]
        public Int64? WinPoints {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Суммарный опыт
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}
    }

    public class WotTanksStatsGlobalmap
    {

        ///<summary>
        ///Средний урон, нанесённый с вашей помощью
        ///</summary>
        [JsonProperty("avg_damage_assisted")]
        public double AvgDamageAssisted {get; set;}

        ///<summary>
        ///Средний урон по вашим разведданным
        ///</summary>
        [JsonProperty("avg_damage_assisted_radio")]
        public double AvgDamageAssistedRadio {get; set;}

        ///<summary>
        ///Средний урон после вашего попадания, сбившего гусеницу
        ///</summary>
        [JsonProperty("avg_damage_assisted_track")]
        public double AvgDamageAssistedTrack {get; set;}

        ///<summary>
        ///Средний заблокированный бронёй урон за бой. Заблокированный бронёй урон — это урон от снарядов (бронебойных, кумулятивных и подкалиберных), которые попали в танк, но не нанесли урона.
///Значение считается с версии игры 9.0.
        ///</summary>
        [JsonProperty("avg_damage_blocked")]
        public double AvgDamageBlocked {get; set;}

        ///<summary>
        ///Средний опыт за бой
        ///</summary>
        [JsonProperty("battle_avg_xp")]
        public Int64? BattleAvgXp {get; set;}

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Нанесено повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Получено урона
        ///</summary>
        [JsonProperty("damage_received")]
        public Int64? DamageReceived {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий
        ///</summary>
        [JsonProperty("direct_hits_received")]
        public Int64? DirectHitsReceived {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits")]
        public Int64? ExplosionHits {get; set;}

        ///<summary>
        ///Количество полученных осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits_received")]
        public Int64? ExplosionHitsReceived {get; set;}

        ///<summary>
        ///Уничтожено техники
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Процент попаданий
        ///</summary>
        [JsonProperty("hits_percents")]
        public Int64? HitsPercents {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий, не нанёсших урон
        ///</summary>
        [JsonProperty("no_damage_direct_hits_received")]
        public Int64? NoDamageDirectHitsReceived {get; set;}

        ///<summary>
        ///Количество пробитий
        ///</summary>
        [JsonProperty("piercings")]
        public Int64? Piercings {get; set;}

        ///<summary>
        ///Количество полученных пробитий
        ///</summary>
        [JsonProperty("piercings_received")]
        public Int64? PiercingsReceived {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}

        ///<summary>
        ///Обнаружено противников
        ///</summary>
        [JsonProperty("spotted")]
        public Int64? Spotted {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Отношение заблокированного бронёй урона к полученному игроком урону от бронебойных, кумулятивных, подкалиберных снарядов.
///Значение считается с версии игры 9.0.
        ///</summary>
        [JsonProperty("tanking_factor")]
        public double TankingFactor {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Суммарный опыт
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}
    }

    public class WotTanksStatsRandom
    {

        ///<summary>
        ///Средний опыт за бой
        ///</summary>
        [JsonProperty("battle_avg_xp")]
        public Int64? BattleAvgXp {get; set;}

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Нанесено повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Получено урона
        ///</summary>
        [JsonProperty("damage_received")]
        public Int64? DamageReceived {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Уничтожено техники
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Процент попаданий
        ///</summary>
        [JsonProperty("hits_percents")]
        public Int64? HitsPercents {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage")]
        public Int64? MaxDamage {get; set;}

        ///<summary>
        ///Максимум уничтожено за бой
        ///</summary>
        [JsonProperty("max_frags")]
        public Int64? MaxFrags {get; set;}

        ///<summary>
        ///Максимальный опыт за бой
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}

        ///<summary>
        ///Обнаружено противников
        ///</summary>
        [JsonProperty("spotted")]
        public Int64? Spotted {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Суммарный опыт
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}
    }

    public class WotTanksStatsRegular_team
    {

        ///<summary>
        ///Средний опыт за бой
        ///</summary>
        [JsonProperty("battle_avg_xp")]
        public Int64? BattleAvgXp {get; set;}

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Нанесено повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Получено урона
        ///</summary>
        [JsonProperty("damage_received")]
        public Int64? DamageReceived {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Уничтожено техники
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Процент попаданий
        ///</summary>
        [JsonProperty("hits_percents")]
        public Int64? HitsPercents {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage")]
        public Int64? MaxDamage {get; set;}

        ///<summary>
        ///Максимум уничтожено за бой
        ///</summary>
        [JsonProperty("max_frags")]
        public Int64? MaxFrags {get; set;}

        ///<summary>
        ///Максимальный опыт за бой
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}

        ///<summary>
        ///Обнаружено противников
        ///</summary>
        [JsonProperty("spotted")]
        public Int64? Spotted {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Суммарный опыт
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}
    }

    public class WotTanksStatsStronghold_defense
    {

        ///<summary>
        ///Средний опыт за бой
        ///</summary>
        [JsonProperty("battle_avg_xp")]
        public Int64? BattleAvgXp {get; set;}

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Нанесено повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Получено урона
        ///</summary>
        [JsonProperty("damage_received")]
        public Int64? DamageReceived {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий
        ///</summary>
        [JsonProperty("direct_hits_received")]
        public Int64? DirectHitsReceived {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits")]
        public Int64? ExplosionHits {get; set;}

        ///<summary>
        ///Количество полученных осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits_received")]
        public Int64? ExplosionHitsReceived {get; set;}

        ///<summary>
        ///Уничтожено техники
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Процент попаданий
        ///</summary>
        [JsonProperty("hits_percents")]
        public Int64? HitsPercents {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage")]
        public Int64? MaxDamage {get; set;}

        ///<summary>
        ///Максимум уничтожено за бой
        ///</summary>
        [JsonProperty("max_frags")]
        public Int64? MaxFrags {get; set;}

        ///<summary>
        ///Максимальный опыт за бой
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий, не нанёсших урон
        ///</summary>
        [JsonProperty("no_damage_direct_hits_received")]
        public Int64? NoDamageDirectHitsReceived {get; set;}

        ///<summary>
        ///Количество пробитий
        ///</summary>
        [JsonProperty("piercings")]
        public Int64? Piercings {get; set;}

        ///<summary>
        ///Количество полученных пробитий
        ///</summary>
        [JsonProperty("piercings_received")]
        public Int64? PiercingsReceived {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}

        ///<summary>
        ///Обнаружено противников
        ///</summary>
        [JsonProperty("spotted")]
        public Int64? Spotted {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Отношение заблокированного бронёй урона к полученному игроком урону от бронебойных, кумулятивных, подкалиберных снарядов.
///Значение считается с версии игры 9.0.
        ///</summary>
        [JsonProperty("tanking_factor")]
        public double TankingFactor {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Суммарный опыт
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}
    }

    public class WotTanksStatsStronghold_skirmish
    {

        ///<summary>
        ///Средний опыт за бой
        ///</summary>
        [JsonProperty("battle_avg_xp")]
        public Int64? BattleAvgXp {get; set;}

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Нанесено повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Получено урона
        ///</summary>
        [JsonProperty("damage_received")]
        public Int64? DamageReceived {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий
        ///</summary>
        [JsonProperty("direct_hits_received")]
        public Int64? DirectHitsReceived {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits")]
        public Int64? ExplosionHits {get; set;}

        ///<summary>
        ///Количество полученных осколочно-фугасных попаданий
        ///</summary>
        [JsonProperty("explosion_hits_received")]
        public Int64? ExplosionHitsReceived {get; set;}

        ///<summary>
        ///Уничтожено техники
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Процент попаданий
        ///</summary>
        [JsonProperty("hits_percents")]
        public Int64? HitsPercents {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage")]
        public Int64? MaxDamage {get; set;}

        ///<summary>
        ///Максимум уничтожено за бой
        ///</summary>
        [JsonProperty("max_frags")]
        public Int64? MaxFrags {get; set;}

        ///<summary>
        ///Максимальный опыт за бой
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Количество полученных прямых попаданий, не нанёсших урон
        ///</summary>
        [JsonProperty("no_damage_direct_hits_received")]
        public Int64? NoDamageDirectHitsReceived {get; set;}

        ///<summary>
        ///Количество пробитий
        ///</summary>
        [JsonProperty("piercings")]
        public Int64? Piercings {get; set;}

        ///<summary>
        ///Количество полученных пробитий
        ///</summary>
        [JsonProperty("piercings_received")]
        public Int64? PiercingsReceived {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}

        ///<summary>
        ///Обнаружено противников
        ///</summary>
        [JsonProperty("spotted")]
        public Int64? Spotted {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Отношение заблокированного бронёй урона к полученному игроком урону от бронебойных, кумулятивных, подкалиберных снарядов.
///Значение считается с версии игры 9.0.
        ///</summary>
        [JsonProperty("tanking_factor")]
        public double TankingFactor {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Суммарный опыт
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}
    }

    public class WotTanksStatsTeam
    {

        ///<summary>
        ///Средний опыт за бой
        ///</summary>
        [JsonProperty("battle_avg_xp")]
        public Int64? BattleAvgXp {get; set;}

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Нанесено повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Получено урона
        ///</summary>
        [JsonProperty("damage_received")]
        public Int64? DamageReceived {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Уничтожено техники
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Процент попаданий
        ///</summary>
        [JsonProperty("hits_percents")]
        public Int64? HitsPercents {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage")]
        public Int64? MaxDamage {get; set;}

        ///<summary>
        ///Максимум уничтожено за бой
        ///</summary>
        [JsonProperty("max_frags")]
        public Int64? MaxFrags {get; set;}

        ///<summary>
        ///Максимальный опыт за бой
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}

        ///<summary>
        ///Обнаружено противников
        ///</summary>
        [JsonProperty("spotted")]
        public Int64? Spotted {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Суммарный опыт
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}
    }



    ///<summary>
    /// Достижения по технике игрока
    /// https://ru.wargaming.net/developers/api_reference/wot/tanks/achievements/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/tanks/achievements/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/tanks/achievements/")]
    public class RequestWotTanksAchievements:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Ключ доступа к персональным данным пользователя. Имеет срок действия. Для получения ключа доступа необходимо запросить аутентификацию.
        ///string
        ///</summary>
        [JsonProperty("access_token")]
        public string AccessToken {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор аккаунта игрока
        ///numeric
        ///</summary>
        [JsonProperty("account_id")]
        [FieldIsMandatory]
        public string AccountId {get; set;}

        ///<summary>
        ///Идентификатор техники игрока
        ///numeric, list
        ///</summary>
        [JsonProperty("tank_id")]
        public string TankId {get; set;}

        ///<summary>
        ///Фильтр по наличию техники в Ангаре. Если параметр не указан, возвращается вся техника. Параметр обрабатывается только при наличии действующего access_token для указанного account_id. Допустимые значения: 
///
///"1" — Возвращать технику из Ангара. 
///"0" — Возвращать технику, которой уже нет в Ангаре.
        ///string
        ///</summary>
        [JsonProperty("in_garage")]
        public string InGarage {get; set;}
    }
    
    ///<summary>
    ///Достижения по технике игрока
    ///</summary>
    public class ResponseWotTanksAchievements:IResponse
    {

        ///<summary>
        ///Идентификатор аккаунта игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Полученные достижения
        ///</summary>
        [JsonProperty("achievements")]
        public Dictionary<string,string> Achievements {get; set;}

        ///<summary>
        ///Максимальные значения серийных достижений
        ///</summary>
        [JsonProperty("max_series")]
        public Dictionary<string,string> MaxSeries {get; set;}

        ///<summary>
        ///Текущие значения серийных достижений
        ///</summary>
        [JsonProperty("series")]
        public Dictionary<string,string> Series {get; set;}

        ///<summary>
        ///Идентификатор техники
        ///</summary>
        [JsonProperty("tank_id")]
        public Int64? TankId {get; set;}
    }


    ///<summary>
    /// Список постоянных команд
    /// https://ru.wargaming.net/developers/api_reference/wot/regularteams/list/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/regularteams/list/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/regularteams/list/")]
    public class RequestWotRegularteamsList:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Количество возвращаемых записей (может вернуться меньше записей, но не больше 100). Если переданный лимит превышает 100, тогда автоматически выставляется лимит в 100 (по умолчанию).
        ///numeric
        ///</summary>
        [JsonProperty("limit")]
        public string Limit {get; set;}

        ///<summary>
        ///Номер страницы результатов
        ///numeric
        ///</summary>
        [JsonProperty("page_no")]
        public string PageNo {get; set;}

        ///<summary>
        ///Строка поиска по тегу или имени команды
        ///string
        ///</summary>
        [JsonProperty("search")]
        public string Search {get; set;}

        ///<summary>
        ///Позволяет сортировать команды по указанному параметру. Допустимые значения: 
///
///"team_id" — по идентификатору команды 
///"-team_id" — по идентификатору команды в обратном порядке 
///"name" — по названию команды 
///"-name" — по названию команды в обратном порядке 
///"tag" — по тегу команды 
///"-tag" — по тегу команды в обратном порядке 
///"members_count" — по численности команды 
///"-members_count" — по численности команды в обратном порядке
        ///string
        ///</summary>
        [JsonProperty("order_by")]
        public string OrderBy {get; set;}
    }
    
    ///<summary>
    ///Список постоянных команд
    ///</summary>
    public class ResponseWotRegularteamsList:IResponse
    {

        ///<summary>
        ///Идентификатор аккаунта капитана команды
        ///</summary>
        [JsonProperty("captain_id")]
        public Int64? CaptainId {get; set;}

        ///<summary>
        ///Количество игроков в команде
        ///</summary>
        [JsonProperty("members_count")]
        public Int64? MembersCount {get; set;}

        ///<summary>
        ///Название команды
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Тег команды
        ///</summary>
        [JsonProperty("tag")]
        public string Tag {get; set;}

        ///<summary>
        ///Идентификатор команды
        ///</summary>
        [JsonProperty("team_id")]
        public Int64? TeamId {get; set;}

        ///<summary>
        ///Эмблемы команды
        ///</summary>
        [JsonProperty("emblems")]
        public WotRegularteamsListEmblems Emblems {get; set;}

        ///<summary>
        ///Позиция в Ладдере
        ///</summary>
        [JsonProperty("ladder")]
        public WotRegularteamsListLadder Ladder {get; set;}
    }
    public class WotRegularteamsListEmblems
    {

        ///<summary>
        ///Ссылка на эмблему 195x195 px
        ///</summary>
        [JsonProperty("x195")]
        public string X195 {get; set;}

        ///<summary>
        ///Ссылка на эмблему 24x24 px
        ///</summary>
        [JsonProperty("x24")]
        public string X24 {get; set;}

        ///<summary>
        ///Ссылка на эмблему 256x256 px
        ///</summary>
        [JsonProperty("x256")]
        public string X256 {get; set;}

        ///<summary>
        ///Ссылка на эмблему 32x32 px
        ///</summary>
        [JsonProperty("x32")]
        public string X32 {get; set;}

        ///<summary>
        ///Ссылка на эмблему 64x64 px
        ///</summary>
        [JsonProperty("x64")]
        public string X64 {get; set;}
    }

    public class WotRegularteamsListLadder
    {

        ///<summary>
        ///Уровень дивизиона
        ///</summary>
        [JsonProperty("division")]
        public Int64? Division {get; set;}

        ///<summary>
        ///Номер группы
        ///</summary>
        [JsonProperty("group")]
        public Int64? Group {get; set;}

        ///<summary>
        ///Очки Ладдера
        ///</summary>
        [JsonProperty("points")]
        public Int64? Points {get; set;}

        ///<summary>
        ///Позиция в группе
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}
    }



    ///<summary>
    /// Данные постоянной команды
    /// https://ru.wargaming.net/developers/api_reference/wot/regularteams/info/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/regularteams/info/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/regularteams/info/")]
    public class RequestWotRegularteamsInfo:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор команды
        ///numeric, list
        ///</summary>
        [JsonProperty("team_id")]
        [FieldIsMandatory]
        public string TeamId {get; set;}
    }
    
    ///<summary>
    ///Данные постоянной команды
    ///</summary>
    public class ResponseWotRegularteamsInfo:IResponse
    {

        ///<summary>
        ///Команда может приглашать игроков
        ///</summary>
        [JsonProperty("accepts_join_requests")]
        public bool AcceptsJoinRequests {get; set;}

        ///<summary>
        ///Команда может участвовать в случайных боях
        ///</summary>
        [JsonProperty("allow_random_battles")]
        public bool AllowRandomBattles {get; set;}

        ///<summary>
        ///Количество боёв команды
        ///</summary>
        [JsonProperty("battles_count")]
        public Int64? BattlesCount {get; set;}

        ///<summary>
        ///Идентификатор аккаунта капитана команды
        ///</summary>
        [JsonProperty("captain_id")]
        public Int64? CaptainId {get; set;}

        ///<summary>
        ///Дата создания команды
        ///</summary>
        [JsonProperty("created_at")]
        public int? CreatedAt {get; set;}

        ///<summary>
        ///Описание команды
        ///</summary>
        [JsonProperty("description")]
        public string Description {get; set;}

        ///<summary>
        ///Количество игроков в команде
        ///</summary>
        [JsonProperty("members_count")]
        public Int64? MembersCount {get; set;}

        ///<summary>
        ///Название команды
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Краткое описание команды
        ///</summary>
        [JsonProperty("short_description")]
        public string ShortDescription {get; set;}

        ///<summary>
        ///Тег команды
        ///</summary>
        [JsonProperty("tag")]
        public string Tag {get; set;}

        ///<summary>
        ///Идентификатор команды
        ///</summary>
        [JsonProperty("team_id")]
        public Int64? TeamId {get; set;}

        ///<summary>
        ///Дата обновления информации о команде
        ///</summary>
        [JsonProperty("updated_at")]
        public int? UpdatedAt {get; set;}

        ///<summary>
        ///Количество побед команды
        ///</summary>
        [JsonProperty("wins_count")]
        public Int64? WinsCount {get; set;}

        ///<summary>
        ///Эмблемы команды
        ///</summary>
        [JsonProperty("emblems")]
        public WotRegularteamsInfoEmblems Emblems {get; set;}

        ///<summary>
        ///Позиция в Ладдере
        ///</summary>
        [JsonProperty("ladder")]
        public WotRegularteamsInfoLadder Ladder {get; set;}

        ///<summary>
        ///Список игроков команды
        ///</summary>
        [JsonProperty("players")]
        public WotRegularteamsInfoPlayers Players {get; set;}
    }
    public class WotRegularteamsInfoEmblems
    {

        ///<summary>
        ///Ссылка на эмблему 195x195 px
        ///</summary>
        [JsonProperty("x195")]
        public string X195 {get; set;}

        ///<summary>
        ///Ссылка на эмблему 24x24 px
        ///</summary>
        [JsonProperty("x24")]
        public string X24 {get; set;}

        ///<summary>
        ///Ссылка на эмблему 256x256 px
        ///</summary>
        [JsonProperty("x256")]
        public string X256 {get; set;}

        ///<summary>
        ///Ссылка на эмблему 32x32 px
        ///</summary>
        [JsonProperty("x32")]
        public string X32 {get; set;}

        ///<summary>
        ///Ссылка на эмблему 64x64 px
        ///</summary>
        [JsonProperty("x64")]
        public string X64 {get; set;}
    }

    public class WotRegularteamsInfoLadder
    {

        ///<summary>
        ///Уровень дивизиона
        ///</summary>
        [JsonProperty("division")]
        public Int64? Division {get; set;}

        ///<summary>
        ///Номер группы
        ///</summary>
        [JsonProperty("group")]
        public Int64? Group {get; set;}

        ///<summary>
        ///Очки Ладдера
        ///</summary>
        [JsonProperty("points")]
        public Int64? Points {get; set;}

        ///<summary>
        ///Позиция в группе
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}
    }

    public class WotRegularteamsInfoPlayers
    {

        ///<summary>
        ///Идентификатор аккаунта игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Дата вступления в команду
        ///</summary>
        [JsonProperty("joined_at")]
        public int? JoinedAt {get; set;}

        ///<summary>
        ///Техническое название роли в команде
        ///</summary>
        [JsonProperty("role")]
        public string Role {get; set;}
    }



    ///<summary>
    /// Информация об игроке постоянной команды
    /// https://ru.wargaming.net/developers/api_reference/wot/regularteams/memberinfo/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wot/regularteams/memberinfo/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wot/regularteams/memberinfo/")]
    public class RequestWotRegularteamsMemberinfo:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор аккаунта
        ///numeric
        ///</summary>
        [JsonProperty("account_id")]
        [FieldIsMandatory]
        public string AccountId {get; set;}
    }
    
    ///<summary>
    ///Информация об игроке постоянной команды
    ///</summary>
    public class ResponseWotRegularteamsMemberinfo:IResponse
    {

        ///<summary>
        ///Идентификатор аккаунта
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Роль
        ///</summary>
        [JsonProperty("role")]
        public string Role {get; set;}

        ///<summary>
        ///Идентификатор команды
        ///</summary>
        [JsonProperty("team_id")]
        public Int64? TeamId {get; set;}
    }


}

namespace WGClient.WorldOfTanksBlitz
{
    ///<summary>
    /// Игроки
    /// https://ru.wargaming.net/developers/api_reference/wotb/account/list/
    ///</summary>
    [Method(Url="api.wotblitz.ru/wotb/account/list/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wotb/account/list/")]
    public class RequestWotbAccountList:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Тип поиска. Определяет минимальную длину строки поиска и вид поиска. По умолчанию используется значение startswith. Допустимые значения: 
///
///"startswith" — Поиск по первым символам имени игрока. Минимальная длина: 3 символа без учёта регистра. (используется по умолчанию)
///"exact" — Поиск по строгому соответствию имени игрока. Минимальная длина: 1 символ без учёта регистра.
        ///string
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Строка поиска по имени игрока. Вид поиска и минимальная длина строки поиска зависят от параметра type.
///        Максимальная длина: 24 символа.
        ///string
        ///</summary>
        [JsonProperty("search")]
        [FieldIsMandatory]
        public string Search {get; set;}

        ///<summary>
        ///Количество возвращаемых записей (может вернуться меньше записей, но не больше 100). Если переданный лимит превышает 100, тогда автоматически выставляется лимит в 100 (по умолчанию).
        ///numeric
        ///</summary>
        [JsonProperty("limit")]
        public string Limit {get; set;}
    }
    
    ///<summary>
    ///Игроки
    ///</summary>
    public class ResponseWotbAccountList:IResponse
    {

        ///<summary>
        ///Идентификатор аккаунта игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Имя игрока
        ///</summary>
        [JsonProperty("nickname")]
        public string Nickname {get; set;}
    }


    ///<summary>
    /// Персональные данные игрока
    /// https://ru.wargaming.net/developers/api_reference/wotb/account/info/
    ///</summary>
    [Method(Url="api.wotblitz.ru/wotb/account/info/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wotb/account/info/")]
    public class RequestWotbAccountInfo:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Ключ доступа к персональным данным пользователя. Имеет срок действия. Для получения ключа доступа необходимо запросить аутентификацию.
        ///string
        ///</summary>
        [JsonProperty("access_token")]
        public string AccessToken {get; set;}

        ///<summary>
        ///Дополнительные поля, которые будут включены в ответ. Допустимые значения: 
///
///private.grouped_contacts
        ///string, list
        ///</summary>
        [JsonProperty("extra")]
        public string Extra {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор аккаунта игрока
        ///numeric, list
        ///</summary>
        [JsonProperty("account_id")]
        [FieldIsMandatory]
        public string AccountId {get; set;}
    }
    
    ///<summary>
    ///Персональные данные игрока
    ///</summary>
    public class ResponseWotbAccountInfo:IResponse
    {

        ///<summary>
        ///Идентификатор аккаунта игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Дата создания аккаунта игрока
        ///</summary>
        [JsonProperty("created_at")]
        public int? CreatedAt {get; set;}

        ///<summary>
        ///Время последнего боя
        ///</summary>
        [JsonProperty("last_battle_time")]
        public int? LastBattleTime {get; set;}

        ///<summary>
        ///Имя игрока
        ///</summary>
        [JsonProperty("nickname")]
        public string Nickname {get; set;}

        ///<summary>
        ///Дата обновления информации об игроке
        ///</summary>
        [JsonProperty("updated_at")]
        public int? UpdatedAt {get; set;}

        ///<summary>
        ///Приватные данные игрока
        ///</summary>
        [JsonProperty("private")]
        public WotbAccountInfoPrivate Private {get; set;}

        ///<summary>
        ///Статистика игрока
        ///</summary>
        [JsonProperty("statistics")]
        public WotbAccountInfoStatistics Statistics {get; set;}
    }
    public class WotbAccountInfoPrivate
    {

        ///<summary>
        ///Информация о блокировке аккаунта
        ///</summary>
        [JsonProperty("ban_info")]
        public string BanInfo {get; set;}

        ///<summary>
        ///Время окончания блокировки аккаунта
        ///</summary>
        [JsonProperty("ban_time")]
        public int? BanTime {get; set;}

        ///<summary>
        ///Общее время в бою до уничтожения в секундах
        ///</summary>
        [JsonProperty("battle_life_time")]
        public Int64? BattleLifeTime {get; set;}

        ///<summary>
        ///Кредиты
        ///</summary>
        [JsonProperty("credits")]
        public Int64? Credits {get; set;}

        ///<summary>
        ///Свободный опыт
        ///</summary>
        [JsonProperty("free_xp")]
        public Int64? FreeXp {get; set;}

        ///<summary>
        ///Золото
        ///</summary>
        [JsonProperty("gold")]
        public Int64? Gold {get; set;}

        ///<summary>
        ///Показывает, является ли аккаунт премиум аккаунтом
        ///</summary>
        [JsonProperty("is_premium")]
        public bool IsPremium {get; set;}

        ///<summary>
        ///Срок действия премиум аккаунта
        ///</summary>
        [JsonProperty("premium_expires_at")]
        public int? PremiumExpiresAt {get; set;}

        ///<summary>
        ///Группы контактов.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("grouped_contacts")]
        public WotbAccountInfoPrivateGrouped_contacts GroupedContacts {get; set;}

        ///<summary>
        ///Ограничения аккаунта
        ///</summary>
        [JsonProperty("restrictions")]
        public WotbAccountInfoPrivateRestrictions Restrictions {get; set;}
    }
    public class WotbAccountInfoPrivateGrouped_contacts
    {

        ///<summary>
        ///Заблокированные
        ///</summary>
        [JsonProperty("blocked")]
        public int[] Blocked {get; set;}

        ///<summary>
        ///Группы
        ///</summary>
        [JsonProperty("groups")]
        public Dictionary<string,string> Groups {get; set;}

        ///<summary>
        ///Не сгруппированные
        ///</summary>
        [JsonProperty("ungrouped")]
        public int[] Ungrouped {get; set;}
    }

    public class WotbAccountInfoPrivateRestrictions
    {

        ///<summary>
        ///Время окончания блокировки в чате
        ///</summary>
        [JsonProperty("chat_ban_time")]
        public int? ChatBanTime {get; set;}
    }


    public class WotbAccountInfoStatistics
    {

        ///<summary>
        ///Количество и модели уничтоженной игроком техники. Приватные данные игрока.
        ///</summary>
        [JsonProperty("frags")]
        public Dictionary<string,string> Frags {get; set;}

        ///<summary>
        ///Вся статистика
        ///</summary>
        [JsonProperty("all")]
        public WotbAccountInfoStatisticsAll All {get; set;}
    }
    public class WotbAccountInfoStatisticsAll
    {

        ///<summary>
        ///Количество боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Нанесённый урон
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Полученный урон
        ///</summary>
        [JsonProperty("damage_received")]
        public Int64? DamageReceived {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Количество уничтоженной техники
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Количество уничтоженной техники (уровень >=8)
        ///</summary>
        [JsonProperty("frags8p")]
        public Int64? Frags8p {get; set;}

        ///<summary>
        ///Количество попаданий
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Количество поражений
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимум уничтожено за бой
        ///</summary>
        [JsonProperty("max_frags")]
        public Int64? MaxFrags {get; set;}

        ///<summary>
        ///Техника, на которой уничтожено максимальное количество техники противника
        ///</summary>
        [JsonProperty("max_frags_tank_id")]
        public Int64? MaxFragsTankId {get; set;}

        ///<summary>
        ///Максимальный опыт за бой
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Техника, на которой получен максимальный опыт за бой
        ///</summary>
        [JsonProperty("max_xp_tank_id")]
        public Int64? MaxXpTankId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}

        ///<summary>
        ///Количество обнаруженной техники
        ///</summary>
        [JsonProperty("spotted")]
        public Int64? Spotted {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Выжил в боях и победил
        ///</summary>
        [JsonProperty("win_and_survived")]
        public Int64? WinAndSurvived {get; set;}

        ///<summary>
        ///Количество побед
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Суммарный опыт
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}
    }




    ///<summary>
    /// Достижения игрока
    /// https://ru.wargaming.net/developers/api_reference/wotb/account/achievements/
    ///</summary>
    [Method(Url="api.wotblitz.ru/wotb/account/achievements/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wotb/account/achievements/")]
    public class RequestWotbAccountAchievements:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор аккаунта игрока
        ///numeric, list
        ///</summary>
        [JsonProperty("account_id")]
        [FieldIsMandatory]
        public string AccountId {get; set;}
    }
    
    ///<summary>
    ///Достижения игрока
    ///</summary>
    public class ResponseWotbAccountAchievements:IResponse
    {

        ///<summary>
        ///Полученные достижения
        ///</summary>
        [JsonProperty("achievements")]
        public Dictionary<string,string> Achievements {get; set;}

        ///<summary>
        ///Максимальные значения серийных достижений
        ///</summary>
        [JsonProperty("max_series")]
        public Dictionary<string,string> MaxSeries {get; set;}
    }


    ///<summary>
    /// Статистика по технике
    /// https://ru.wargaming.net/developers/api_reference/wotb/account/tankstats/
    ///</summary>
    [Method(Url="api.wotblitz.ru/wotb/account/tankstats/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wotb/account/tankstats/")]
    public class RequestWotbAccountTankstats:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор аккаунта игрока
        ///numeric, list
        ///</summary>
        [JsonProperty("account_id")]
        [FieldIsMandatory]
        public string AccountId {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор техники игрока
        ///numeric
        ///</summary>
        [JsonProperty("tank_id")]
        [FieldIsMandatory]
        public string TankId {get; set;}
    }
    
    ///<summary>
    ///Статистика по технике
    ///</summary>
    public class ResponseWotbAccountTankstats:IResponse
    {

        ///<summary>
        ///Идентификатор аккаунта игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Общее время в боях в секундах
        ///</summary>
        [JsonProperty("battle_life_time")]
        public int? BattleLifeTime {get; set;}

        ///<summary>
        ///Время последнего боя
        ///</summary>
        [JsonProperty("last_battle_time")]
        public int? LastBattleTime {get; set;}

        ///<summary>
        ///Знаки классности:
///
///0 — Отсутствует
///1 — 3 степень
///2 — 2 степень
///3 — 1 степень
///4 — Мастер
        ///</summary>
        [JsonProperty("mark_of_mastery")]
        public Int64? MarkOfMastery {get; set;}

        ///<summary>
        ///Идентификатор техники
        ///</summary>
        [JsonProperty("tank_id")]
        public Int64? TankId {get; set;}

        ///<summary>
        ///Вся статистика
        ///</summary>
        [JsonProperty("all")]
        public WotbAccountTankstatsAll All {get; set;}
    }
    public class WotbAccountTankstatsAll
    {

        ///<summary>
        ///Количество боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Нанесённый урон
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Полученный урон
        ///</summary>
        [JsonProperty("damage_received")]
        public Int64? DamageReceived {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Количество уничтоженной техники
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Количество уничтоженной техники (уровень >=8)
        ///</summary>
        [JsonProperty("frags8p")]
        public Int64? Frags8p {get; set;}

        ///<summary>
        ///Количество попаданий
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Количество поражений
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимум уничтожено за бой
        ///</summary>
        [JsonProperty("max_frags")]
        public Int64? MaxFrags {get; set;}

        ///<summary>
        ///Максимальный опыт за бой
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}

        ///<summary>
        ///Количество обнаруженной техники
        ///</summary>
        [JsonProperty("spotted")]
        public Int64? Spotted {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Выжил в боях и победил
        ///</summary>
        [JsonProperty("win_and_survived")]
        public Int64? WinAndSurvived {get; set;}

        ///<summary>
        ///Количество побед
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Суммарный опыт
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}
    }



    ///<summary>
    /// Техника
    /// https://ru.wargaming.net/developers/api_reference/wotb/encyclopedia/vehicles/
    ///</summary>
    [Method(Url="api.wotblitz.ru/wotb/encyclopedia/vehicles/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wotb/encyclopedia/vehicles/")]
    public class RequestWotbEncyclopediaVehicles:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Идентификатор техники
        ///numeric, list
        ///</summary>
        [JsonProperty("tank_id")]
        public string TankId {get; set;}

        ///<summary>
        ///Нация
        ///string, list
        ///</summary>
        [JsonProperty("nation")]
        public string Nation {get; set;}
    }
    
    ///<summary>
    ///Техника
    ///</summary>
    public class ResponseWotbEncyclopediaVehicles:IResponse
    {

        ///<summary>
        ///Описание техники
        ///</summary>
        [JsonProperty("description")]
        public string Description {get; set;}

        ///<summary>
        ///Список идентификаторов совместимых двигателей
        ///</summary>
        [JsonProperty("engines")]
        public int[] Engines {get; set;}

        ///<summary>
        ///Список идентификаторов совместимых орудий
        ///</summary>
        [JsonProperty("guns")]
        public int[] Guns {get; set;}

        ///<summary>
        ///Показывает, является ли техника премиум техникой
        ///</summary>
        [JsonProperty("is_premium")]
        public bool IsPremium {get; set;}

        ///<summary>
        ///Название техники
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Нация
        ///</summary>
        [JsonProperty("nation")]
        public string Nation {get; set;}

        ///<summary>
        ///Список доступной для исследования техники в виде пар:
///
///идентификатор исследуемой техники
///стоимость исследования в опыте
        ///</summary>
        [JsonProperty("next_tanks")]
        public Dictionary<string,string> NextTanks {get; set;}

        ///<summary>
        ///Список значений стоимости исследования в виде пар:
///
///идентификатор родительской техники
///стоимость исследованния в опыте
        ///</summary>
        [JsonProperty("prices_xp")]
        public Dictionary<string,string> PricesXp {get; set;}

        ///<summary>
        ///Список идентификаторов совместимых ходовых
        ///</summary>
        [JsonProperty("suspensions")]
        public int[] Suspensions {get; set;}

        ///<summary>
        ///Идентификатор техники
        ///</summary>
        [JsonProperty("tank_id")]
        public Int64? TankId {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("tier")]
        public Int64? Tier {get; set;}

        ///<summary>
        ///Список идентификаторов совместимых башен
        ///</summary>
        [JsonProperty("turrets")]
        public int[] Turrets {get; set;}

        ///<summary>
        ///Тип техники
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}

        ///<summary>
        ///Стоимость
        ///</summary>
        [JsonProperty("cost")]
        public WotbEncyclopediaVehiclesCost Cost {get; set;}

        ///<summary>
        ///Характеристики базовой комплектации
        ///</summary>
        [JsonProperty("default_profile")]
        public WotbEncyclopediaVehiclesDefault_profile DefaultProfile {get; set;}

        ///<summary>
        ///Изображения техники
        ///</summary>
        [JsonProperty("images")]
        public WotbEncyclopediaVehiclesImages Images {get; set;}
    }
    public class WotbEncyclopediaVehiclesCost
    {

        ///<summary>
        ///Стоимость в кредитах
        ///</summary>
        [JsonProperty("price_credit")]
        public Int64? PriceCredit {get; set;}

        ///<summary>
        ///Стоимость покупки в золоте
        ///</summary>
        [JsonProperty("price_gold")]
        public Int64? PriceGold {get; set;}
    }

    public class WotbEncyclopediaVehiclesDefault_profile
    {

        ///<summary>
        ///Идентификатор двигателя
        ///</summary>
        [JsonProperty("engine_id")]
        public Int64? EngineId {get; set;}

        ///<summary>
        ///Огневая мощь (%)
        ///</summary>
        [JsonProperty("firepower")]
        public Int64? Firepower {get; set;}

        ///<summary>
        ///Идентификатор орудия
        ///</summary>
        [JsonProperty("gun_id")]
        public Int64? GunId {get; set;}

        ///<summary>
        ///Прочность
        ///</summary>
        [JsonProperty("hp")]
        public Int64? Hp {get; set;}

        ///<summary>
        ///Прочность корпуса
        ///</summary>
        [JsonProperty("hull_hp")]
        public Int64? HullHp {get; set;}

        ///<summary>
        ///Масса корпуса (кг)
        ///</summary>
        [JsonProperty("hull_weight")]
        public Int64? HullWeight {get; set;}

        ///<summary>
        ///Базовая комплектация
        ///</summary>
        [JsonProperty("is_default")]
        public bool IsDefault {get; set;}

        ///<summary>
        ///Манёвренность (%)
        ///</summary>
        [JsonProperty("maneuverability")]
        public Int64? Maneuverability {get; set;}

        ///<summary>
        ///Боекомплект
        ///</summary>
        [JsonProperty("max_ammo")]
        public Int64? MaxAmmo {get; set;}

        ///<summary>
        ///Предельная масса (кг)
        ///</summary>
        [JsonProperty("max_weight")]
        public Int64? MaxWeight {get; set;}

        ///<summary>
        ///Защищённость (%)
        ///</summary>
        [JsonProperty("protection")]
        public Int64? Protection {get; set;}

        ///<summary>
        ///Эффективность выстрела (%)
        ///</summary>
        [JsonProperty("shot_efficiency")]
        public Int64? ShotEfficiency {get; set;}

        ///<summary>
        ///Дальность связи
        ///</summary>
        [JsonProperty("signal_range")]
        public Int64? SignalRange {get; set;}

        ///<summary>
        ///Макс. скорость заднего хода (км/ч)
        ///</summary>
        [JsonProperty("speed_backward")]
        public Int64? SpeedBackward {get; set;}

        ///<summary>
        ///Максимальная скорость
        ///</summary>
        [JsonProperty("speed_forward")]
        public Int64? SpeedForward {get; set;}

        ///<summary>
        ///Идентификатор ходовой
        ///</summary>
        [JsonProperty("suspension_id")]
        public Int64? SuspensionId {get; set;}

        ///<summary>
        ///Идентификатор башни
        ///</summary>
        [JsonProperty("turret_id")]
        public Int64? TurretId {get; set;}

        ///<summary>
        ///Масса (кг)
        ///</summary>
        [JsonProperty("weight")]
        public Int64? Weight {get; set;}

        ///<summary>
        ///Бронирование
        ///</summary>
        [JsonProperty("armor")]
        public WotbEncyclopediaVehiclesDefault_profileArmor Armor {get; set;}

        ///<summary>
        ///Характеристики двигателя
        ///</summary>
        [JsonProperty("engine")]
        public WotbEncyclopediaVehiclesDefault_profileEngine Engine {get; set;}

        ///<summary>
        ///Характеристики орудия
        ///</summary>
        [JsonProperty("gun")]
        public WotbEncyclopediaVehiclesDefault_profileGun Gun {get; set;}

        ///<summary>
        ///Характеристики снарядов орудия
        ///</summary>
        [JsonProperty("shells")]
        public WotbEncyclopediaVehiclesDefault_profileShells Shells {get; set;}

        ///<summary>
        ///Характеристики ходовой
        ///</summary>
        [JsonProperty("suspension")]
        public WotbEncyclopediaVehiclesDefault_profileSuspension Suspension {get; set;}

        ///<summary>
        ///Характеристики башни
        ///</summary>
        [JsonProperty("turret")]
        public WotbEncyclopediaVehiclesDefault_profileTurret Turret {get; set;}
    }
    public class WotbEncyclopediaVehiclesDefault_profileArmor
    {

        ///<summary>
        ///Бронирование корпуса
        ///</summary>
        [JsonProperty("hull")]
        public WotbEncyclopediaVehiclesDefault_profileArmorHull Hull {get; set;}

        ///<summary>
        ///Бронирование башни
        ///</summary>
        [JsonProperty("turret")]
        public WotbEncyclopediaVehiclesDefault_profileArmorTurret Turret {get; set;}
    }
    public class WotbEncyclopediaVehiclesDefault_profileArmorHull
    {

        ///<summary>
        ///Лоб (мм)
        ///</summary>
        [JsonProperty("front")]
        public Int64? Front {get; set;}

        ///<summary>
        ///Корма (мм)
        ///</summary>
        [JsonProperty("rear")]
        public Int64? Rear {get; set;}

        ///<summary>
        ///Борт (мм)
        ///</summary>
        [JsonProperty("sides")]
        public Int64? Sides {get; set;}
    }

    public class WotbEncyclopediaVehiclesDefault_profileArmorTurret
    {

        ///<summary>
        ///Лоб (мм)
        ///</summary>
        [JsonProperty("front")]
        public Int64? Front {get; set;}

        ///<summary>
        ///Корма (мм)
        ///</summary>
        [JsonProperty("rear")]
        public Int64? Rear {get; set;}

        ///<summary>
        ///Борт (мм)
        ///</summary>
        [JsonProperty("sides")]
        public Int64? Sides {get; set;}
    }


    public class WotbEncyclopediaVehiclesDefault_profileEngine
    {

        ///<summary>
        ///Вероятность возгорания
        ///</summary>
        [JsonProperty("fire_chance")]
        public double FireChance {get; set;}

        ///<summary>
        ///Название техники
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Мощность двигателя (л.с.)
        ///</summary>
        [JsonProperty("power")]
        public Int64? Power {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("tier")]
        public Int64? Tier {get; set;}

        ///<summary>
        ///Масса (кг)
        ///</summary>
        [JsonProperty("weight")]
        public Int64? Weight {get; set;}
    }

    public class WotbEncyclopediaVehiclesDefault_profileGun
    {

        ///<summary>
        ///Время сведения (с)
        ///</summary>
        [JsonProperty("aim_time")]
        public double AimTime {get; set;}

        ///<summary>
        ///Калибр (мм)
        ///</summary>
        [JsonProperty("caliber")]
        public Int64? Caliber {get; set;}

        ///<summary>
        ///Разброс на 100 м (м)
        ///</summary>
        [JsonProperty("dispersion")]
        public double Dispersion {get; set;}

        ///<summary>
        ///Скорострельность (выстр/мин)
        ///</summary>
        [JsonProperty("fire_rate")]
        public double FireRate {get; set;}

        ///<summary>
        ///Угол ВН вниз (град)
        ///</summary>
        [JsonProperty("move_down_arc")]
        public Int64? MoveDownArc {get; set;}

        ///<summary>
        ///Угол ВН вверх (град)
        ///</summary>
        [JsonProperty("move_up_arc")]
        public Int64? MoveUpArc {get; set;}

        ///<summary>
        ///Название техники
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Время перезарядки (с)
        ///</summary>
        [JsonProperty("reload_time")]
        public double ReloadTime {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("tier")]
        public Int64? Tier {get; set;}

        ///<summary>
        ///Скорость поворота (град/с)
        ///</summary>
        [JsonProperty("traverse_speed")]
        public double TraverseSpeed {get; set;}

        ///<summary>
        ///Масса (кг)
        ///</summary>
        [JsonProperty("weight")]
        public Int64? Weight {get; set;}
    }

    public class WotbEncyclopediaVehiclesDefault_profileShells
    {

        ///<summary>
        ///Средний урон (ед.)
        ///</summary>
        [JsonProperty("damage")]
        public Int64? Damage {get; set;}

        ///<summary>
        ///Средняя бронепробиваемость (мм)
        ///</summary>
        [JsonProperty("penetration")]
        public Int64? Penetration {get; set;}

        ///<summary>
        ///Тип
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}
    }

    public class WotbEncyclopediaVehiclesDefault_profileSuspension
    {

        ///<summary>
        ///Максимальная нагрузка (кг)
        ///</summary>
        [JsonProperty("load_limit")]
        public Int64? LoadLimit {get; set;}

        ///<summary>
        ///Название техники
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("tier")]
        public Int64? Tier {get; set;}

        ///<summary>
        ///Скорость поворота (град/с)
        ///</summary>
        [JsonProperty("traverse_speed")]
        public Int64? TraverseSpeed {get; set;}

        ///<summary>
        ///Масса (кг)
        ///</summary>
        [JsonProperty("weight")]
        public Int64? Weight {get; set;}
    }

    public class WotbEncyclopediaVehiclesDefault_profileTurret
    {

        ///<summary>
        ///Прочность
        ///</summary>
        [JsonProperty("hp")]
        public Int64? Hp {get; set;}

        ///<summary>
        ///Название техники
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("tier")]
        public Int64? Tier {get; set;}

        ///<summary>
        ///Угол вращения влево (град)
        ///</summary>
        [JsonProperty("traverse_left_arc")]
        public Int64? TraverseLeftArc {get; set;}

        ///<summary>
        ///Угол вращения вправо (град)
        ///</summary>
        [JsonProperty("traverse_right_arc")]
        public Int64? TraverseRightArc {get; set;}

        ///<summary>
        ///Скорость поворота (град/с)
        ///</summary>
        [JsonProperty("traverse_speed")]
        public Int64? TraverseSpeed {get; set;}

        ///<summary>
        ///Обзор (м)
        ///</summary>
        [JsonProperty("view_range")]
        public Int64? ViewRange {get; set;}

        ///<summary>
        ///Масса (кг)
        ///</summary>
        [JsonProperty("weight")]
        public Int64? Weight {get; set;}
    }


    public class WotbEncyclopediaVehiclesImages
    {

        ///<summary>
        ///Обычное изображение
        ///</summary>
        [JsonProperty("normal")]
        public string Normal {get; set;}

        ///<summary>
        ///Уменьшенное изображение
        ///</summary>
        [JsonProperty("preview")]
        public string Preview {get; set;}
    }



    ///<summary>
    /// Характеристики техники
    /// https://ru.wargaming.net/developers/api_reference/wotb/encyclopedia/vehicleprofile/
    ///</summary>
    [Method(Url="api.wotblitz.ru/wotb/encyclopedia/vehicleprofile/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wotb/encyclopedia/vehicleprofile/")]
    public class RequestWotbEncyclopediaVehicleprofile:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор техники
        ///numeric
        ///</summary>
        [JsonProperty("tank_id")]
        [FieldIsMandatory]
        public string TankId {get; set;}

        ///<summary>
        ///Идентификатор двигателя. Если модуль не указан, используется модуль базовой комплектации.
        ///numeric
        ///</summary>
        [JsonProperty("engine_id")]
        public string EngineId {get; set;}

        ///<summary>
        ///Идентификатор орудия. Если модуль не указан, используется модуль базовой комплектации.
        ///numeric
        ///</summary>
        [JsonProperty("gun_id")]
        public string GunId {get; set;}

        ///<summary>
        ///Идентификатор ходовой. Если модуль не указан, используется модуль базовой комплектации.
        ///numeric
        ///</summary>
        [JsonProperty("suspension_id")]
        public string SuspensionId {get; set;}

        ///<summary>
        ///Идентификатор башни. Если модуль не указан, используется модуль базовой комплектации.
        ///numeric
        ///</summary>
        [JsonProperty("turret_id")]
        public string TurretId {get; set;}
    }
    
    ///<summary>
    ///Характеристики техники
    ///</summary>
    public class ResponseWotbEncyclopediaVehicleprofile:IResponse
    {

        ///<summary>
        ///Идентификатор двигателя
        ///</summary>
        [JsonProperty("engine_id")]
        public Int64? EngineId {get; set;}

        ///<summary>
        ///Огневая мощь (%)
        ///</summary>
        [JsonProperty("firepower")]
        public Int64? Firepower {get; set;}

        ///<summary>
        ///Идентификатор орудия
        ///</summary>
        [JsonProperty("gun_id")]
        public Int64? GunId {get; set;}

        ///<summary>
        ///Прочность
        ///</summary>
        [JsonProperty("hp")]
        public Int64? Hp {get; set;}

        ///<summary>
        ///Прочность корпуса
        ///</summary>
        [JsonProperty("hull_hp")]
        public Int64? HullHp {get; set;}

        ///<summary>
        ///Масса корпуса (кг)
        ///</summary>
        [JsonProperty("hull_weight")]
        public Int64? HullWeight {get; set;}

        ///<summary>
        ///Базовая комплектация
        ///</summary>
        [JsonProperty("is_default")]
        public bool IsDefault {get; set;}

        ///<summary>
        ///Манёвренность (%)
        ///</summary>
        [JsonProperty("maneuverability")]
        public Int64? Maneuverability {get; set;}

        ///<summary>
        ///Боекомплект
        ///</summary>
        [JsonProperty("max_ammo")]
        public Int64? MaxAmmo {get; set;}

        ///<summary>
        ///Предельная масса (кг)
        ///</summary>
        [JsonProperty("max_weight")]
        public Int64? MaxWeight {get; set;}

        ///<summary>
        ///Защищённость (%)
        ///</summary>
        [JsonProperty("protection")]
        public Int64? Protection {get; set;}

        ///<summary>
        ///Эффективность выстрела (%)
        ///</summary>
        [JsonProperty("shot_efficiency")]
        public Int64? ShotEfficiency {get; set;}

        ///<summary>
        ///Дальность связи
        ///</summary>
        [JsonProperty("signal_range")]
        public Int64? SignalRange {get; set;}

        ///<summary>
        ///Макс. скорость заднего хода (км/ч)
        ///</summary>
        [JsonProperty("speed_backward")]
        public Int64? SpeedBackward {get; set;}

        ///<summary>
        ///Максимальная скорость
        ///</summary>
        [JsonProperty("speed_forward")]
        public Int64? SpeedForward {get; set;}

        ///<summary>
        ///Идентификатор ходовой
        ///</summary>
        [JsonProperty("suspension_id")]
        public Int64? SuspensionId {get; set;}

        ///<summary>
        ///Идентификатор башни
        ///</summary>
        [JsonProperty("turret_id")]
        public Int64? TurretId {get; set;}

        ///<summary>
        ///Масса (кг)
        ///</summary>
        [JsonProperty("weight")]
        public Int64? Weight {get; set;}

        ///<summary>
        ///Бронирование
        ///</summary>
        [JsonProperty("armor")]
        public WotbEncyclopediaVehicleprofileArmor Armor {get; set;}

        ///<summary>
        ///Характеристики двигателя
        ///</summary>
        [JsonProperty("engine")]
        public WotbEncyclopediaVehicleprofileEngine Engine {get; set;}

        ///<summary>
        ///Характеристики орудия
        ///</summary>
        [JsonProperty("gun")]
        public WotbEncyclopediaVehicleprofileGun Gun {get; set;}

        ///<summary>
        ///Характеристики снарядов орудия
        ///</summary>
        [JsonProperty("shells")]
        public WotbEncyclopediaVehicleprofileShells Shells {get; set;}

        ///<summary>
        ///Характеристики ходовой
        ///</summary>
        [JsonProperty("suspension")]
        public WotbEncyclopediaVehicleprofileSuspension Suspension {get; set;}

        ///<summary>
        ///Характеристики башни
        ///</summary>
        [JsonProperty("turret")]
        public WotbEncyclopediaVehicleprofileTurret Turret {get; set;}
    }
    public class WotbEncyclopediaVehicleprofileArmor
    {

        ///<summary>
        ///Бронирование корпуса
        ///</summary>
        [JsonProperty("hull")]
        public WotbEncyclopediaVehicleprofileArmorHull Hull {get; set;}

        ///<summary>
        ///Бронирование башни
        ///</summary>
        [JsonProperty("turret")]
        public WotbEncyclopediaVehicleprofileArmorTurret Turret {get; set;}
    }
    public class WotbEncyclopediaVehicleprofileArmorHull
    {

        ///<summary>
        ///Лоб (мм)
        ///</summary>
        [JsonProperty("front")]
        public Int64? Front {get; set;}

        ///<summary>
        ///Корма (мм)
        ///</summary>
        [JsonProperty("rear")]
        public Int64? Rear {get; set;}

        ///<summary>
        ///Борт (мм)
        ///</summary>
        [JsonProperty("sides")]
        public Int64? Sides {get; set;}
    }

    public class WotbEncyclopediaVehicleprofileArmorTurret
    {

        ///<summary>
        ///Лоб (мм)
        ///</summary>
        [JsonProperty("front")]
        public Int64? Front {get; set;}

        ///<summary>
        ///Корма (мм)
        ///</summary>
        [JsonProperty("rear")]
        public Int64? Rear {get; set;}

        ///<summary>
        ///Борт (мм)
        ///</summary>
        [JsonProperty("sides")]
        public Int64? Sides {get; set;}
    }


    public class WotbEncyclopediaVehicleprofileEngine
    {

        ///<summary>
        ///Вероятность возгорания
        ///</summary>
        [JsonProperty("fire_chance")]
        public double FireChance {get; set;}

        ///<summary>
        ///Название техники
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Мощность двигателя (л.с.)
        ///</summary>
        [JsonProperty("power")]
        public Int64? Power {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("tier")]
        public Int64? Tier {get; set;}

        ///<summary>
        ///Масса (кг)
        ///</summary>
        [JsonProperty("weight")]
        public Int64? Weight {get; set;}
    }

    public class WotbEncyclopediaVehicleprofileGun
    {

        ///<summary>
        ///Время сведения (с)
        ///</summary>
        [JsonProperty("aim_time")]
        public double AimTime {get; set;}

        ///<summary>
        ///Калибр (мм)
        ///</summary>
        [JsonProperty("caliber")]
        public Int64? Caliber {get; set;}

        ///<summary>
        ///Разброс на 100 м (м)
        ///</summary>
        [JsonProperty("dispersion")]
        public double Dispersion {get; set;}

        ///<summary>
        ///Скорострельность (выстр/мин)
        ///</summary>
        [JsonProperty("fire_rate")]
        public double FireRate {get; set;}

        ///<summary>
        ///Угол ВН вниз (град)
        ///</summary>
        [JsonProperty("move_down_arc")]
        public Int64? MoveDownArc {get; set;}

        ///<summary>
        ///Угол ВН вверх (град)
        ///</summary>
        [JsonProperty("move_up_arc")]
        public Int64? MoveUpArc {get; set;}

        ///<summary>
        ///Название техники
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Время перезарядки (с)
        ///</summary>
        [JsonProperty("reload_time")]
        public double ReloadTime {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("tier")]
        public Int64? Tier {get; set;}

        ///<summary>
        ///Скорость поворота (град/с)
        ///</summary>
        [JsonProperty("traverse_speed")]
        public double TraverseSpeed {get; set;}

        ///<summary>
        ///Масса (кг)
        ///</summary>
        [JsonProperty("weight")]
        public Int64? Weight {get; set;}
    }

    public class WotbEncyclopediaVehicleprofileShells
    {

        ///<summary>
        ///Средний урон (ед.)
        ///</summary>
        [JsonProperty("damage")]
        public Int64? Damage {get; set;}

        ///<summary>
        ///Средняя бронепробиваемость (мм)
        ///</summary>
        [JsonProperty("penetration")]
        public Int64? Penetration {get; set;}

        ///<summary>
        ///Тип
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}
    }

    public class WotbEncyclopediaVehicleprofileSuspension
    {

        ///<summary>
        ///Максимальная нагрузка (кг)
        ///</summary>
        [JsonProperty("load_limit")]
        public Int64? LoadLimit {get; set;}

        ///<summary>
        ///Название техники
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("tier")]
        public Int64? Tier {get; set;}

        ///<summary>
        ///Скорость поворота (град/с)
        ///</summary>
        [JsonProperty("traverse_speed")]
        public Int64? TraverseSpeed {get; set;}

        ///<summary>
        ///Масса (кг)
        ///</summary>
        [JsonProperty("weight")]
        public Int64? Weight {get; set;}
    }

    public class WotbEncyclopediaVehicleprofileTurret
    {

        ///<summary>
        ///Прочность
        ///</summary>
        [JsonProperty("hp")]
        public Int64? Hp {get; set;}

        ///<summary>
        ///Название техники
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("tier")]
        public Int64? Tier {get; set;}

        ///<summary>
        ///Угол вращения влево (град)
        ///</summary>
        [JsonProperty("traverse_left_arc")]
        public Int64? TraverseLeftArc {get; set;}

        ///<summary>
        ///Угол вращения вправо (град)
        ///</summary>
        [JsonProperty("traverse_right_arc")]
        public Int64? TraverseRightArc {get; set;}

        ///<summary>
        ///Скорость поворота (град/с)
        ///</summary>
        [JsonProperty("traverse_speed")]
        public Int64? TraverseSpeed {get; set;}

        ///<summary>
        ///Обзор (м)
        ///</summary>
        [JsonProperty("view_range")]
        public Int64? ViewRange {get; set;}

        ///<summary>
        ///Масса (кг)
        ///</summary>
        [JsonProperty("weight")]
        public Int64? Weight {get; set;}
    }



    ///<summary>
    /// Модули
    /// https://ru.wargaming.net/developers/api_reference/wotb/encyclopedia/modules/
    ///</summary>
    [Method(Url="api.wotblitz.ru/wotb/encyclopedia/modules/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wotb/encyclopedia/modules/")]
    public class RequestWotbEncyclopediaModules:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Идентификатор модуля
        ///numeric, list
        ///</summary>
        [JsonProperty("module_id")]
        public string ModuleId {get; set;}
    }
    
    ///<summary>
    ///Модули
    ///</summary>
    public class ResponseWotbEncyclopediaModules:IResponse
    {

        ///<summary>
        ///
        ///</summary>
        [JsonProperty("engines")]
        public WotbEncyclopediaModulesEngines Engines {get; set;}

        ///<summary>
        ///
        ///</summary>
        [JsonProperty("guns")]
        public WotbEncyclopediaModulesGuns Guns {get; set;}

        ///<summary>
        ///
        ///</summary>
        [JsonProperty("suspensions")]
        public WotbEncyclopediaModulesSuspensions Suspensions {get; set;}

        ///<summary>
        ///
        ///</summary>
        [JsonProperty("turrets")]
        public WotbEncyclopediaModulesTurrets Turrets {get; set;}
    }
    public class WotbEncyclopediaModulesEngines
    {

        ///<summary>
        ///Вероятность возгорания
        ///</summary>
        [JsonProperty("fire_chance")]
        public double FireChance {get; set;}

        ///<summary>
        ///Идентификатор модуля
        ///</summary>
        [JsonProperty("module_id")]
        public Int64? ModuleId {get; set;}

        ///<summary>
        ///Название техники
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Нация
        ///</summary>
        [JsonProperty("nation")]
        public string Nation {get; set;}

        ///<summary>
        ///Мощность двигателя (л.с.)
        ///</summary>
        [JsonProperty("power")]
        public Int64? Power {get; set;}

        ///<summary>
        ///Список совместимой техники
        ///</summary>
        [JsonProperty("tanks")]
        public int[] Tanks {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("tier")]
        public Int64? Tier {get; set;}

        ///<summary>
        ///Масса (кг)
        ///</summary>
        [JsonProperty("weight")]
        public Int64? Weight {get; set;}
    }

    public class WotbEncyclopediaModulesGuns
    {

        ///<summary>
        ///Время сведения (с)
        ///</summary>
        [JsonProperty("aim_time")]
        public double AimTime {get; set;}

        ///<summary>
        ///Разброс на 100 м (м)
        ///</summary>
        [JsonProperty("dispersion")]
        public double Dispersion {get; set;}

        ///<summary>
        ///Идентификатор модуля
        ///</summary>
        [JsonProperty("module_id")]
        public Int64? ModuleId {get; set;}

        ///<summary>
        ///Название техники
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Нация
        ///</summary>
        [JsonProperty("nation")]
        public string Nation {get; set;}

        ///<summary>
        ///Список совместимой техники
        ///</summary>
        [JsonProperty("tanks")]
        public int[] Tanks {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("tier")]
        public Int64? Tier {get; set;}

        ///<summary>
        ///Масса (кг)
        ///</summary>
        [JsonProperty("weight")]
        public Int64? Weight {get; set;}

        ///<summary>
        ///
        ///</summary>
        [JsonProperty("shells")]
        public WotbEncyclopediaModulesGunsShells Shells {get; set;}
    }
    public class WotbEncyclopediaModulesGunsShells
    {

        ///<summary>
        ///Средний урон (ед.)
        ///</summary>
        [JsonProperty("damage")]
        public Int64? Damage {get; set;}

        ///<summary>
        ///Средняя бронепробиваемость (мм)
        ///</summary>
        [JsonProperty("penetration")]
        public Int64? Penetration {get; set;}

        ///<summary>
        ///Тип
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}
    }


    public class WotbEncyclopediaModulesSuspensions
    {

        ///<summary>
        ///Максимальная нагрузка (кг)
        ///</summary>
        [JsonProperty("load_limit")]
        public Int64? LoadLimit {get; set;}

        ///<summary>
        ///Идентификатор модуля
        ///</summary>
        [JsonProperty("module_id")]
        public Int64? ModuleId {get; set;}

        ///<summary>
        ///Название техники
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Нация
        ///</summary>
        [JsonProperty("nation")]
        public string Nation {get; set;}

        ///<summary>
        ///Список совместимой техники
        ///</summary>
        [JsonProperty("tanks")]
        public int[] Tanks {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("tier")]
        public Int64? Tier {get; set;}

        ///<summary>
        ///Скорость поворота (град/с)
        ///</summary>
        [JsonProperty("traverse_speed")]
        public Int64? TraverseSpeed {get; set;}

        ///<summary>
        ///Масса (кг)
        ///</summary>
        [JsonProperty("weight")]
        public Int64? Weight {get; set;}
    }

    public class WotbEncyclopediaModulesTurrets
    {

        ///<summary>
        ///Прочность
        ///</summary>
        [JsonProperty("hp")]
        public Int64? Hp {get; set;}

        ///<summary>
        ///Идентификатор модуля
        ///</summary>
        [JsonProperty("module_id")]
        public Int64? ModuleId {get; set;}

        ///<summary>
        ///Название техники
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Нация
        ///</summary>
        [JsonProperty("nation")]
        public string Nation {get; set;}

        ///<summary>
        ///Список совместимой техники
        ///</summary>
        [JsonProperty("tanks")]
        public int[] Tanks {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("tier")]
        public Int64? Tier {get; set;}

        ///<summary>
        ///Угол вращения влево (град)
        ///</summary>
        [JsonProperty("traverse_left_arc")]
        public Int64? TraverseLeftArc {get; set;}

        ///<summary>
        ///Угол вращения вправо (град)
        ///</summary>
        [JsonProperty("traverse_right_arc")]
        public Int64? TraverseRightArc {get; set;}

        ///<summary>
        ///Обзор (м)
        ///</summary>
        [JsonProperty("view_range")]
        public Int64? ViewRange {get; set;}

        ///<summary>
        ///Масса (кг)
        ///</summary>
        [JsonProperty("weight")]
        public Int64? Weight {get; set;}

        ///<summary>
        ///Бронирование
        ///</summary>
        [JsonProperty("armor")]
        public WotbEncyclopediaModulesTurretsArmor Armor {get; set;}
    }
    public class WotbEncyclopediaModulesTurretsArmor
    {

        ///<summary>
        ///Лоб (мм)
        ///</summary>
        [JsonProperty("front")]
        public Int64? Front {get; set;}

        ///<summary>
        ///Корма (мм)
        ///</summary>
        [JsonProperty("rear")]
        public Int64? Rear {get; set;}

        ///<summary>
        ///Борт (мм)
        ///</summary>
        [JsonProperty("sides")]
        public Int64? Sides {get; set;}
    }




    ///<summary>
    /// Оборудование и снаряжение
    /// https://ru.wargaming.net/developers/api_reference/wotb/encyclopedia/provisions/
    ///</summary>
    [Method(Url="api.wotblitz.ru/wotb/encyclopedia/provisions/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wotb/encyclopedia/provisions/")]
    public class RequestWotbEncyclopediaProvisions:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Тип. Допустимые значения: 
///
///"equipment" — Снаряжение 
///"optionalDevice" — Оборудование
        ///string
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}

        ///<summary>
        ///Идентификатор оборудования или снаряжения
        ///numeric, list
        ///</summary>
        [JsonProperty("provision_id")]
        public string ProvisionId {get; set;}

        ///<summary>
        ///Идентификатор техники
        ///numeric, list
        ///</summary>
        [JsonProperty("tank_id")]
        public string TankId {get; set;}
    }
    
    ///<summary>
    ///Оборудование и снаряжение
    ///</summary>
    public class ResponseWotbEncyclopediaProvisions:IResponse
    {

        ///<summary>
        ///Локализованное описание
        ///</summary>
        [JsonProperty("description_i18n")]
        public string DescriptionI18n {get; set;}

        ///<summary>
        ///Локализованное название
        ///</summary>
        [JsonProperty("name_i18n")]
        public string NameI18n {get; set;}

        ///<summary>
        ///Стоимость в кредитах
        ///</summary>
        [JsonProperty("price_credit")]
        public Int64? PriceCredit {get; set;}

        ///<summary>
        ///Стоимость покупки в золоте
        ///</summary>
        [JsonProperty("price_gold")]
        public Int64? PriceGold {get; set;}

        ///<summary>
        ///Идентификатор оборудования или снаряжения
        ///</summary>
        [JsonProperty("provision_id")]
        public Int64? ProvisionId {get; set;}

        ///<summary>
        ///Список идентификаторов совместимой техники
        ///</summary>
        [JsonProperty("tanks")]
        public int[] Tanks {get; set;}

        ///<summary>
        ///Тип
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}
    }


    ///<summary>
    /// Информация о Танкопедии
    /// https://ru.wargaming.net/developers/api_reference/wotb/encyclopedia/info/
    ///</summary>
    [Method(Url="api.wotblitz.ru/wotb/encyclopedia/info/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wotb/encyclopedia/info/")]
    public class RequestWotbEncyclopediaInfo:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}
    }
    
    ///<summary>
    ///Информация о Танкопедии
    ///</summary>
    public class ResponseWotbEncyclopediaInfo:IResponse
    {

        ///<summary>
        ///Версия игрового клиента
        ///</summary>
        [JsonProperty("game_version")]
        public string GameVersion {get; set;}

        ///<summary>
        ///Список поддерживаемых языков
        ///</summary>
        [JsonProperty("languages")]
        public Dictionary<string,string> Languages {get; set;}

        ///<summary>
        ///Время обновления информации о технике в Танкопедии
        ///</summary>
        [JsonProperty("tanks_updated_at")]
        public int? TanksUpdatedAt {get; set;}

        ///<summary>
        ///Доступные нации
        ///</summary>
        [JsonProperty("vehicle_nations")]
        public Dictionary<string,string> VehicleNations {get; set;}

        ///<summary>
        ///Возможные типы техники
        ///</summary>
        [JsonProperty("vehicle_types")]
        public Dictionary<string,string> VehicleTypes {get; set;}

        ///<summary>
        ///Разделы наград
        ///</summary>
        [JsonProperty("achievement_sections")]
        public WotbEncyclopediaInfoAchievement_sections AchievementSections {get; set;}
    }
    public class WotbEncyclopediaInfoAchievement_sections
    {

        ///<summary>
        ///Название раздела наград
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Порядок раздела наград
        ///</summary>
        [JsonProperty("order")]
        public Int64? Order {get; set;}
    }



    ///<summary>
    /// Достижения
    /// https://ru.wargaming.net/developers/api_reference/wotb/encyclopedia/achievements/
    ///</summary>
    [Method(Url="api.wotblitz.ru/wotb/encyclopedia/achievements/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wotb/encyclopedia/achievements/")]
    public class RequestWotbEncyclopediaAchievements:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}
    }
    
    ///<summary>
    ///Достижения
    ///</summary>
    public class ResponseWotbEncyclopediaAchievements:IResponse
    {

        ///<summary>
        ///Идентификатор достижения
        ///</summary>
        [JsonProperty("achievement_id")]
        public string AchievementId {get; set;}

        ///<summary>
        ///Условие
        ///</summary>
        [JsonProperty("condition")]
        public string Condition {get; set;}

        ///<summary>
        ///Описание достижения
        ///</summary>
        [JsonProperty("description")]
        public string Description {get; set;}

        ///<summary>
        ///Ссылка на изображение
        ///</summary>
        [JsonProperty("image")]
        public string Image {get; set;}

        ///<summary>
        ///Ссылка на изображение большого размера
        ///</summary>
        [JsonProperty("image_big")]
        public string ImageBig {get; set;}

        ///<summary>
        ///Название достижения
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Порядок достижений
        ///</summary>
        [JsonProperty("order")]
        public Int64? Order {get; set;}

        ///<summary>
        ///Раздел
        ///</summary>
        [JsonProperty("section")]
        public string Section {get; set;}

        ///<summary>
        ///Достижения
        ///</summary>
        [JsonProperty("options")]
        public WotbEncyclopediaAchievementsOptions Options {get; set;}
    }
    public class WotbEncyclopediaAchievementsOptions
    {

        ///<summary>
        ///Описание достижения
        ///</summary>
        [JsonProperty("description")]
        public string Description {get; set;}

        ///<summary>
        ///Ссылка на изображение
        ///</summary>
        [JsonProperty("image")]
        public string Image {get; set;}

        ///<summary>
        ///Ссылка на изображение большого размера
        ///</summary>
        [JsonProperty("image_big")]
        public string ImageBig {get; set;}

        ///<summary>
        ///Название достижения
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}
    }



    ///<summary>
    /// Умения экипажа
    /// https://ru.wargaming.net/developers/api_reference/wotb/encyclopedia/crewskills/
    ///</summary>
    [Method(Url="api.wotblitz.ru/wotb/encyclopedia/crewskills/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wotb/encyclopedia/crewskills/")]
    public class RequestWotbEncyclopediaCrewskills:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Типы техники. Максимальное ограничение: 100.
        ///string, list
        ///</summary>
        [JsonProperty("vehicle_type")]
        public string VehicleType {get; set;}

        ///<summary>
        ///Идентификаторы умений. Максимальное ограничение: 100.
        ///string, list
        ///</summary>
        [JsonProperty("skill_id")]
        public string SkillId {get; set;}
    }
    
    ///<summary>
    ///Умения экипажа
    ///</summary>
    public class ResponseWotbEncyclopediaCrewskills:IResponse
    {

        ///<summary>
        ///Эффект
        ///</summary>
        [JsonProperty("effect")]
        public string Effect {get; set;}

        ///<summary>
        ///Особенности
        ///</summary>
        [JsonProperty("features")]
        public string Features {get; set;}

        ///<summary>
        ///Название умения
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Идентификатор умения
        ///</summary>
        [JsonProperty("skill_id")]
        public string SkillId {get; set;}

        ///<summary>
        ///Подсказка
        ///</summary>
        [JsonProperty("tip")]
        public string Tip {get; set;}

        ///<summary>
        ///Тип техники
        ///</summary>
        [JsonProperty("vehicle_type")]
        public string VehicleType {get; set;}

        ///<summary>
        ///Изображения умений
        ///</summary>
        [JsonProperty("images")]
        public WotbEncyclopediaCrewskillsImages Images {get; set;}
    }
    public class WotbEncyclopediaCrewskillsImages
    {

        ///<summary>
        ///URL к большому изображению
        ///</summary>
        [JsonProperty("large")]
        public string Large {get; set;}
    }



    ///<summary>
    /// Кланы
    /// https://ru.wargaming.net/developers/api_reference/wotb/clans/list/
    ///</summary>
    [Method(Url="api.wotblitz.ru/wotb/clans/list/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wotb/clans/list/")]
    public class RequestWotbClansList:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Часть названия или тега клана, по которому осуществляется поиск. Не может быть меньше 2 символов
        ///string
        ///</summary>
        [JsonProperty("search")]
        public string Search {get; set;}

        ///<summary>
        ///Количество возвращаемых записей (может вернуться меньше записей, но не больше 100). Если переданный лимит превышает 100, тогда автоматически выставляется лимит в 100 (по умолчанию).
        ///numeric
        ///</summary>
        [JsonProperty("limit")]
        public string Limit {get; set;}

        ///<summary>
        ///Номер страницы
        ///numeric
        ///</summary>
        [JsonProperty("page_no")]
        public string PageNo {get; set;}
    }
    
    ///<summary>
    ///Кланы
    ///</summary>
    public class ResponseWotbClansList:IResponse
    {

        ///<summary>
        ///Идентификатор клана
        ///</summary>
        [JsonProperty("clan_id")]
        public Int64? ClanId {get; set;}

        ///<summary>
        ///Дата создания клана
        ///</summary>
        [JsonProperty("created_at")]
        public int? CreatedAt {get; set;}

        ///<summary>
        ///Количество игроков клана
        ///</summary>
        [JsonProperty("members_count")]
        public Int64? MembersCount {get; set;}

        ///<summary>
        ///Название клана
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Тег клана
        ///</summary>
        [JsonProperty("tag")]
        public string Tag {get; set;}
    }


    ///<summary>
    /// Данные клана
    /// https://ru.wargaming.net/developers/api_reference/wotb/clans/info/
    ///</summary>
    [Method(Url="api.wotblitz.ru/wotb/clans/info/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wotb/clans/info/")]
    public class RequestWotbClansInfo:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Дополнительные поля, которые будут включены в ответ. Допустимые значения: 
///
///members
        ///string, list
        ///</summary>
        [JsonProperty("extra")]
        public string Extra {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор клана
        ///numeric, list
        ///</summary>
        [JsonProperty("clan_id")]
        [FieldIsMandatory]
        public string ClanId {get; set;}
    }
    
    ///<summary>
    ///Данные клана
    ///</summary>
    public class ResponseWotbClansInfo:IResponse
    {

        ///<summary>
        ///Идентификатор клана
        ///</summary>
        [JsonProperty("clan_id")]
        public Int64? ClanId {get; set;}

        ///<summary>
        ///Дата создания клана
        ///</summary>
        [JsonProperty("created_at")]
        public int? CreatedAt {get; set;}

        ///<summary>
        ///Идентификатор игрока, создавшего клан
        ///</summary>
        [JsonProperty("creator_id")]
        public Int64? CreatorId {get; set;}

        ///<summary>
        ///Имя игрока, создавшего клан
        ///</summary>
        [JsonProperty("creator_name")]
        public string CreatorName {get; set;}

        ///<summary>
        ///Описание клана
        ///</summary>
        [JsonProperty("description")]
        public string Description {get; set;}

        ///<summary>
        ///Идентификатор набора эмблем
        ///</summary>
        [JsonProperty("emblem_set_id")]
        public Int64? EmblemSetId {get; set;}

        ///<summary>
        ///Клан удалён. Информация об удалённом клане содержит актуальные значения только для следующих полей: clan_id, is_clan_disbanded, updated_at.
        ///</summary>
        [JsonProperty("is_clan_disbanded")]
        public bool IsClanDisbanded {get; set;}

        ///<summary>
        ///Идентификатор Командующего
        ///</summary>
        [JsonProperty("leader_id")]
        public Int64? LeaderId {get; set;}

        ///<summary>
        ///Имя Командующего
        ///</summary>
        [JsonProperty("leader_name")]
        public string LeaderName {get; set;}

        ///<summary>
        ///Количество игроков клана
        ///</summary>
        [JsonProperty("members_count")]
        public Int64? MembersCount {get; set;}

        ///<summary>
        ///Список идентификаторов игроков клана
        ///</summary>
        [JsonProperty("members_ids")]
        public int[] MembersIds {get; set;}

        ///<summary>
        ///Девиз клана
        ///</summary>
        [JsonProperty("motto")]
        public string Motto {get; set;}

        ///<summary>
        ///Название клана
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Старое название клана
        ///</summary>
        [JsonProperty("old_name")]
        public string OldName {get; set;}

        ///<summary>
        ///Старый тег клана
        ///</summary>
        [JsonProperty("old_tag")]
        public string OldTag {get; set;}

        ///<summary>
        ///Политика приёма в клан.
///Допустимые значения:
///
///open - можно вступать свободно, если статистика полностью соответствует пороговым значениям (по умолчанию)
///restricted - можно отправлять заявки на вступление
        ///</summary>
        [JsonProperty("recruiting_policy")]
        public string RecruitingPolicy {get; set;}

        ///<summary>
        ///Время последнего переименования клана в UTC
        ///</summary>
        [JsonProperty("renamed_at")]
        public int? RenamedAt {get; set;}

        ///<summary>
        ///Тег клана
        ///</summary>
        [JsonProperty("tag")]
        public string Tag {get; set;}

        ///<summary>
        ///Время обновления информации о клане
        ///</summary>
        [JsonProperty("updated_at")]
        public int? UpdatedAt {get; set;}

        ///<summary>
        ///Игроки клана.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("members")]
        public WotbClansInfoMembers Members {get; set;}

        ///<summary>
        ///Пороги статистики для вступление в клан. Содержит null если пороги не установлены.
        ///</summary>
        [JsonProperty("recruiting_options")]
        public WotbClansInfoRecruiting_options RecruitingOptions {get; set;}
    }
    public class WotbClansInfoMembers
    {

        ///<summary>
        ///Идентификатор игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Имя игрока
        ///</summary>
        [JsonProperty("account_name")]
        public string AccountName {get; set;}

        ///<summary>
        ///Дата вступления в клан
        ///</summary>
        [JsonProperty("joined_at")]
        public int? JoinedAt {get; set;}

        ///<summary>
        ///Техническое название должности
        ///</summary>
        [JsonProperty("role")]
        public string Role {get; set;}
    }

    public class WotbClansInfoRecruiting_options
    {

        ///<summary>
        ///Среднее количество боёв в день
        ///</summary>
        [JsonProperty("average_battles_per_day")]
        public Int64? AverageBattlesPerDay {get; set;}

        ///<summary>
        ///Средний урон за бой
        ///</summary>
        [JsonProperty("average_damage")]
        public Int64? AverageDamage {get; set;}

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Минимальный уровень техники игрока
        ///</summary>
        [JsonProperty("vehicles_level")]
        public Int64? VehiclesLevel {get; set;}

        ///<summary>
        ///Процент побед
        ///</summary>
        [JsonProperty("wins_ratio")]
        public Int64? WinsRatio {get; set;}
    }



    ///<summary>
    /// Клановые данные игрока
    /// https://ru.wargaming.net/developers/api_reference/wotb/clans/accountinfo/
    ///</summary>
    [Method(Url="api.wotblitz.ru/wotb/clans/accountinfo/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wotb/clans/accountinfo/")]
    public class RequestWotbClansAccountinfo:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Дополнительные поля, которые будут включены в ответ. Допустимые значения: 
///
///clan
        ///string, list
        ///</summary>
        [JsonProperty("extra")]
        public string Extra {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор аккаунта
        ///numeric, list
        ///</summary>
        [JsonProperty("account_id")]
        [FieldIsMandatory]
        public string AccountId {get; set;}
    }
    
    ///<summary>
    ///Клановые данные игрока
    ///</summary>
    public class ResponseWotbClansAccountinfo:IResponse
    {

        ///<summary>
        ///Идентификатор игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Имя игрока
        ///</summary>
        [JsonProperty("account_name")]
        public string AccountName {get; set;}

        ///<summary>
        ///Идентификатор клана
        ///</summary>
        [JsonProperty("clan_id")]
        public Int64? ClanId {get; set;}

        ///<summary>
        ///Дата вступления в клан
        ///</summary>
        [JsonProperty("joined_at")]
        public int? JoinedAt {get; set;}

        ///<summary>
        ///Техническое название должности
        ///</summary>
        [JsonProperty("role")]
        public string Role {get; set;}

        ///<summary>
        ///Краткая информация о клане.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("clan")]
        public WotbClansAccountinfoClan Clan {get; set;}
    }
    public class WotbClansAccountinfoClan
    {

        ///<summary>
        ///Идентификатор клана
        ///</summary>
        [JsonProperty("clan_id")]
        public Int64? ClanId {get; set;}

        ///<summary>
        ///Дата создания клана
        ///</summary>
        [JsonProperty("created_at")]
        public int? CreatedAt {get; set;}

        ///<summary>
        ///Идентификатор набора эмблем
        ///</summary>
        [JsonProperty("emblem_set_id")]
        public Int64? EmblemSetId {get; set;}

        ///<summary>
        ///Количество игроков клана
        ///</summary>
        [JsonProperty("members_count")]
        public Int64? MembersCount {get; set;}

        ///<summary>
        ///Название клана
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Тег клана
        ///</summary>
        [JsonProperty("tag")]
        public string Tag {get; set;}
    }



    ///<summary>
    /// Глоссарий кланов
    /// https://ru.wargaming.net/developers/api_reference/wotb/clans/glossary/
    ///</summary>
    [Method(Url="api.wotblitz.ru/wotb/clans/glossary/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wotb/clans/glossary/")]
    public class RequestWotbClansGlossary:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}
    }
    
    ///<summary>
    ///Глоссарий кланов
    ///</summary>
    public class ResponseWotbClansGlossary:IResponse
    {

        ///<summary>
        ///Возможные должности игроков в клане
        ///</summary>
        [JsonProperty("clans_roles")]
        public Dictionary<string,string> ClansRoles {get; set;}

        ///<summary>
        ///Настройки клана
        ///</summary>
        [JsonProperty("settings")]
        public WotbClansGlossarySettings Settings {get; set;}
    }
    public class WotbClansGlossarySettings
    {

        ///<summary>
        ///Максимальное количество игроков клана
        ///</summary>
        [JsonProperty("max_members_count")]
        public Int64? MaxMembersCount {get; set;}
    }



    ///<summary>
    /// Доска объявлений
    /// https://ru.wargaming.net/developers/api_reference/wotb/clanmessages/messages/
    ///</summary>
    [Method(Url="api.wotblitz.ru/wotb/clanmessages/messages/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wotb/clanmessages/messages/")]
    public class RequestWotbClanmessagesMessages:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Ключ доступа к персональным данным пользователя. Имеет срок действия. Для получения ключа доступа необходимо запросить аутентификацию.
        ///string
        ///</summary>
        [JsonProperty("access_token")]
        [FieldIsMandatory]
        public string AccessToken {get; set;}

        ///<summary>
        ///Идентификатор сообщения
        ///numeric
        ///</summary>
        [JsonProperty("message_id")]
        public string MessageId {get; set;}

        ///<summary>
        ///Число возвращаемых записей. Если отправленное значение превышает 100, применяется ограничение в 25 (по умолчанию).
        ///numeric
        ///</summary>
        [JsonProperty("limit")]
        public string Limit {get; set;}

        ///<summary>
        ///Номер страницы.
        ///numeric
        ///</summary>
        [JsonProperty("page_no")]
        public string PageNo {get; set;}

        ///<summary>
        ///Сортировка. Допустимые значения:
///
///
///importance — по важности сообщения
///
///
///-importance — по важности сообщения, в обратном порядке
///
///
///created_at — по дате создания сообщения
///
///
///-created_at — по дате создания сообщения, в обратном порядке
///
///
///updated_at — по дате обновления сообщения
///
///
///-updated_at — по дате обновления сообщения, в обратном порядке
///
///
///type — по типу сообщения
///
///
///-type — по типу сообщения, в обратном порядке
        ///string, list
        ///</summary>
        [JsonProperty("order_by")]
        public string OrderBy {get; set;}

        ///<summary>
        ///Поиск сообщений с конечной датой актуальности равной заданному значению или позднее его. Дата в формате UNIX timestamp или ISO 8601. Например, 1376542800 или 2013-08-15T00:00:00.
        ///timestamp/date
        ///</summary>
        [JsonProperty("expires_after")]
        public string ExpiresAfter {get; set;}

        ///<summary>
        ///Поиск сообщений с конечной датой актуальности ранее заданного значения. Дата в формате UNIX timestamp или ISO 8601. Например, 1376542800 или 2013-08-15T00:00:00.
        ///timestamp/date
        ///</summary>
        [JsonProperty("expires_before")]
        public string ExpiresBefore {get; set;}

        ///<summary>
        ///Статус сообщения. Допустимые значения: 
///
///"active" — Активные сообщения 
///"deleted" — Удалённое сообщение
        ///string
        ///</summary>
        [JsonProperty("status")]
        public string Status {get; set;}

        ///<summary>
        ///Тип сообщения. Допустимые значения: 
///
///"general" — Общие сообщения 
///"training" — Сообщения о тренировке 
///"meeting" — Сообщения о встрече 
///"battle" — Сообщения в бою
        ///string
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}

        ///<summary>
        ///Важность сообщения. Допустимые значения: 
///
///"important" — Важные сообщения 
///"standard" — Стандартные сообщения
        ///string
        ///</summary>
        [JsonProperty("importance")]
        public string Importance {get; set;}
    }
    
    ///<summary>
    ///Доска объявлений
    ///</summary>
    public class ResponseWotbClanmessagesMessages:IResponse
    {

        ///<summary>
        ///Идентификатор автора сообщения
        ///</summary>
        [JsonProperty("author_id")]
        public Int64? AuthorId {get; set;}

        ///<summary>
        ///Идентификатор клана
        ///</summary>
        [JsonProperty("clan_id")]
        public Int64? ClanId {get; set;}

        ///<summary>
        ///Дата создания сообщения
        ///</summary>
        [JsonProperty("created_at")]
        public int? CreatedAt {get; set;}

        ///<summary>
        ///Идентификатор игрока, изменившего сообщение
        ///</summary>
        [JsonProperty("editor_id")]
        public Int64? EditorId {get; set;}

        ///<summary>
        ///Дата, когда сообщение станет неактуальным
        ///</summary>
        [JsonProperty("expires_at")]
        public int? ExpiresAt {get; set;}

        ///<summary>
        ///Важность сообщения
        ///</summary>
        [JsonProperty("importance")]
        public string Importance {get; set;}

        ///<summary>
        ///Количество отметок "Нравится"
        ///</summary>
        [JsonProperty("likes")]
        public Int64? Likes {get; set;}

        ///<summary>
        ///Текст сообщения
        ///</summary>
        [JsonProperty("message")]
        public string Message {get; set;}

        ///<summary>
        ///Идентификатор сообщения
        ///</summary>
        [JsonProperty("message_id")]
        public Int64? MessageId {get; set;}

        ///<summary>
        ///Заголовок сообщения
        ///</summary>
        [JsonProperty("title")]
        public string Title {get; set;}

        ///<summary>
        ///Тип сообщения
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}

        ///<summary>
        ///Дата обновления сообщения
        ///</summary>
        [JsonProperty("updated_at")]
        public int? UpdatedAt {get; set;}
    }


    ///<summary>
    /// Создать сообщение на доске объявлений
    /// https://ru.wargaming.net/developers/api_reference/wotb/clanmessages/create/
    ///</summary>
    [Method(Url="api.wotblitz.ru/wotb/clanmessages/create/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wotb/clanmessages/create/")]
    public class RequestWotbClanmessagesCreate:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Ключ доступа к персональным данным пользователя. Имеет срок действия. Для получения ключа доступа необходимо запросить аутентификацию.
        ///string
        ///</summary>
        [JsonProperty("access_token")]
        [FieldIsMandatory]
        public string AccessToken {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Заголовок сообщения. Максимальная длина: 100 символов.
        ///string
        ///</summary>
        [JsonProperty("title")]
        [FieldIsMandatory]
        public string Title {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Текст сообщения. Максимальная длина: 1000 символов.
        ///string
        ///</summary>
        [JsonProperty("text")]
        [FieldIsMandatory]
        public string Text {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Важность сообщения. Допустимые значения: 
///
///"important" — Важные сообщения 
///"standard" — Стандартные сообщения
        ///string
        ///</summary>
        [JsonProperty("importance")]
        [FieldIsMandatory]
        public string Importance {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Дата, когда сообщение станет неактуальным. Дата в формате UNIX timestamp или ISO 8601. Например, 1376542800 или 2013-08-15T00:00:00. Должна должна быть в будущем времени.
        ///timestamp/date
        ///</summary>
        [JsonProperty("expires_at")]
        [FieldIsMandatory]
        public string ExpiresAt {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Тип сообщения. Допустимые значения: 
///
///"general" — Общие сообщения 
///"training" — Сообщения о тренировке 
///"meeting" — Сообщения о встрече 
///"battle" — Сообщения в бою
        ///string
        ///</summary>
        [JsonProperty("type")]
        [FieldIsMandatory]
        public string Type {get; set;}
    }
    
    ///<summary>
    ///Создать сообщение на доске объявлений
    ///</summary>
    public class ResponseWotbClanmessagesCreate:IResponse
    {

        ///<summary>
        ///Идентификатор сообщения
        ///</summary>
        [JsonProperty("message_id")]
        public Int64? MessageId {get; set;}
    }


    ///<summary>
    /// Удалить сообщение на доске объявлений
    /// https://ru.wargaming.net/developers/api_reference/wotb/clanmessages/delete/
    ///</summary>
    [Method(Url="api.wotblitz.ru/wotb/clanmessages/delete/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wotb/clanmessages/delete/")]
    public class RequestWotbClanmessagesDelete:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Ключ доступа к персональным данным пользователя. Имеет срок действия. Для получения ключа доступа необходимо запросить аутентификацию.
        ///string
        ///</summary>
        [JsonProperty("access_token")]
        [FieldIsMandatory]
        public string AccessToken {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор сообщения
        ///numeric
        ///</summary>
        [JsonProperty("message_id")]
        [FieldIsMandatory]
        public string MessageId {get; set;}
    }
    
    ///<summary>
    ///Удалить сообщение на доске объявлений
    ///</summary>
    public class ResponseWotbClanmessagesDelete:IResponse
    {
    }


    ///<summary>
    /// Поставить/снять отметку "Нравится"
    /// https://ru.wargaming.net/developers/api_reference/wotb/clanmessages/like/
    ///</summary>
    [Method(Url="api.wotblitz.ru/wotb/clanmessages/like/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wotb/clanmessages/like/")]
    public class RequestWotbClanmessagesLike:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Ключ доступа к персональным данным пользователя. Имеет срок действия. Для получения ключа доступа необходимо запросить аутентификацию.
        ///string
        ///</summary>
        [JsonProperty("access_token")]
        [FieldIsMandatory]
        public string AccessToken {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор сообщения
        ///numeric
        ///</summary>
        [JsonProperty("message_id")]
        [FieldIsMandatory]
        public string MessageId {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Действие. Допустимые значения: 
///
///"add" — Отметить сообщение как понравившееся 
///"remove" — Снять отметку "Нравится" с сообщения
        ///string
        ///</summary>
        [JsonProperty("action")]
        [FieldIsMandatory]
        public string Action {get; set;}
    }
    
    ///<summary>
    ///Поставить/снять отметку "Нравится"
    ///</summary>
    public class ResponseWotbClanmessagesLike:IResponse
    {
    }


    ///<summary>
    /// Отметки "Нравится"
    /// https://ru.wargaming.net/developers/api_reference/wotb/clanmessages/likes/
    ///</summary>
    [Method(Url="api.wotblitz.ru/wotb/clanmessages/likes/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wotb/clanmessages/likes/")]
    public class RequestWotbClanmessagesLikes:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Ключ доступа к персональным данным пользователя. Имеет срок действия. Для получения ключа доступа необходимо запросить аутентификацию.
        ///string
        ///</summary>
        [JsonProperty("access_token")]
        [FieldIsMandatory]
        public string AccessToken {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор сообщения. Количество возвращаемых записей не должно превышать 10.
        ///numeric, list
        ///</summary>
        [JsonProperty("message_id")]
        [FieldIsMandatory]
        public string MessageId {get; set;}
    }
    
    ///<summary>
    ///Отметки "Нравится"
    ///</summary>
    public class ResponseWotbClanmessagesLikes:IResponse
    {

        ///<summary>
        ///Идентификатор аккаунта, поставившего отметку "Нравится"
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Дата, когда сообщение было отмечено как понравившееся
        ///</summary>
        [JsonProperty("liked_at")]
        public int? LikedAt {get; set;}
    }


    ///<summary>
    /// Обновить сообщение на доске объявлений
    /// https://ru.wargaming.net/developers/api_reference/wotb/clanmessages/update/
    ///</summary>
    [Method(Url="api.wotblitz.ru/wotb/clanmessages/update/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wotb/clanmessages/update/")]
    public class RequestWotbClanmessagesUpdate:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Ключ доступа к персональным данным пользователя. Имеет срок действия. Для получения ключа доступа необходимо запросить аутентификацию.
        ///string
        ///</summary>
        [JsonProperty("access_token")]
        [FieldIsMandatory]
        public string AccessToken {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор сообщения
        ///numeric
        ///</summary>
        [JsonProperty("message_id")]
        [FieldIsMandatory]
        public string MessageId {get; set;}

        ///<summary>
        ///Заголовок сообщения. Максимальная длина: 100 символов.
        ///string
        ///</summary>
        [JsonProperty("title")]
        public string Title {get; set;}

        ///<summary>
        ///Текст сообщения. Максимальная длина: 1000 символов.
        ///string
        ///</summary>
        [JsonProperty("text")]
        public string Text {get; set;}

        ///<summary>
        ///Важность сообщения. Допустимые значения: 
///
///"important" — Важные сообщения 
///"standard" — Стандартные сообщения
        ///string
        ///</summary>
        [JsonProperty("importance")]
        public string Importance {get; set;}

        ///<summary>
        ///Дата, когда сообщение станет неактуальным. Дата в формате UNIX timestamp или ISO 8601. Например, 1376542800 или 2013-08-15T00:00:00. Должна должна быть в будущем времени.
        ///timestamp/date
        ///</summary>
        [JsonProperty("expires_at")]
        public string ExpiresAt {get; set;}

        ///<summary>
        ///Тип сообщения. Допустимые значения: 
///
///"general" — Общие сообщения 
///"training" — Сообщения о тренировке 
///"meeting" — Сообщения о встрече 
///"battle" — Сообщения в бою
        ///string
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}
    }
    
    ///<summary>
    ///Обновить сообщение на доске объявлений
    ///</summary>
    public class ResponseWotbClanmessagesUpdate:IResponse
    {

        ///<summary>
        ///Идентификатор сообщения
        ///</summary>
        [JsonProperty("message_id")]
        public Int64? MessageId {get; set;}
    }


    ///<summary>
    /// Статистика по технике игрока
    /// https://ru.wargaming.net/developers/api_reference/wotb/tanks/stats/
    ///</summary>
    [Method(Url="api.wotblitz.ru/wotb/tanks/stats/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wotb/tanks/stats/")]
    public class RequestWotbTanksStats:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Ключ доступа к персональным данным пользователя. Имеет срок действия. Для получения ключа доступа необходимо запросить аутентификацию.
        ///string
        ///</summary>
        [JsonProperty("access_token")]
        public string AccessToken {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор аккаунта игрока
        ///numeric
        ///</summary>
        [JsonProperty("account_id")]
        [FieldIsMandatory]
        public string AccountId {get; set;}

        ///<summary>
        ///Идентификатор техники игрока
        ///numeric, list
        ///</summary>
        [JsonProperty("tank_id")]
        public string TankId {get; set;}

        ///<summary>
        ///Фильтр по наличию техники в Ангаре. Если параметр не указан, возвращается вся техника. Параметр обрабатывается только при наличии действующего access_token для указанного account_id. Допустимые значения: 
///
///"1" — Возвращать технику из Ангара. 
///"0" — Возвращать технику, которой уже нет в Ангаре.
        ///string
        ///</summary>
        [JsonProperty("in_garage")]
        public string InGarage {get; set;}
    }
    
    ///<summary>
    ///Статистика по технике игрока
    ///</summary>
    public class ResponseWotbTanksStats:IResponse
    {

        ///<summary>
        ///Идентификатор аккаунта игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Общее время в боях в секундах
        ///</summary>
        [JsonProperty("battle_life_time")]
        public int? BattleLifeTime {get; set;}

        ///<summary>
        ///Время последнего обновления данных о наличии техники в Ангаре. Данные доступны только при наличии действительного access_token для указанного аккаунта.
        ///</summary>
        [JsonProperty("in_garage_updated")]
        public int? InGarageUpdated {get; set;}

        ///<summary>
        ///Время последнего боя
        ///</summary>
        [JsonProperty("last_battle_time")]
        public int? LastBattleTime {get; set;}

        ///<summary>
        ///Знаки классности:
///
///0 — Отсутствует
///1 — 3 степень
///2 — 2 степень
///3 — 1 степень
///4 — Мастер
        ///</summary>
        [JsonProperty("mark_of_mastery")]
        public Int64? MarkOfMastery {get; set;}

        ///<summary>
        ///Идентификатор техники
        ///</summary>
        [JsonProperty("tank_id")]
        public Int64? TankId {get; set;}

        ///<summary>
        ///Уничтоженная техника. Данные доступны только при наличии действующего access_token для указанного аккаунта.
        ///</summary>
        [JsonProperty("frags")]
        public Dictionary<string,string> Frags {get; set;}

        ///<summary>
        ///Присутствие техники в Ангаре. Данные доступны только при наличии действующего access_token для указанного аккаунта.
        ///</summary>
        [JsonProperty("in_garage")]
        public bool InGarage {get; set;}

        ///<summary>
        ///Вся статистика
        ///</summary>
        [JsonProperty("all")]
        public WotbTanksStatsAll All {get; set;}
    }
    public class WotbTanksStatsAll
    {

        ///<summary>
        ///Количество боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Нанесённый урон
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Полученный урон
        ///</summary>
        [JsonProperty("damage_received")]
        public Int64? DamageReceived {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Количество уничтоженной техники
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Количество уничтоженной техники (уровень >=8)
        ///</summary>
        [JsonProperty("frags8p")]
        public Int64? Frags8p {get; set;}

        ///<summary>
        ///Количество попаданий
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Количество поражений
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимум уничтожено за бой
        ///</summary>
        [JsonProperty("max_frags")]
        public Int64? MaxFrags {get; set;}

        ///<summary>
        ///Максимальный опыт за бой
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}

        ///<summary>
        ///Количество обнаруженной техники
        ///</summary>
        [JsonProperty("spotted")]
        public Int64? Spotted {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Выжил в боях и победил
        ///</summary>
        [JsonProperty("win_and_survived")]
        public Int64? WinAndSurvived {get; set;}

        ///<summary>
        ///Количество побед
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Суммарный опыт
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}
    }



    ///<summary>
    /// Достижения по технике игрока
    /// https://ru.wargaming.net/developers/api_reference/wotb/tanks/achievements/
    ///</summary>
    [Method(Url="api.wotblitz.ru/wotb/tanks/achievements/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wotb/tanks/achievements/")]
    public class RequestWotbTanksAchievements:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Ключ доступа к персональным данным пользователя. Имеет срок действия. Для получения ключа доступа необходимо запросить аутентификацию.
        ///string
        ///</summary>
        [JsonProperty("access_token")]
        public string AccessToken {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор аккаунта игрока
        ///numeric
        ///</summary>
        [JsonProperty("account_id")]
        [FieldIsMandatory]
        public string AccountId {get; set;}

        ///<summary>
        ///Идентификатор техники игрока
        ///numeric, list
        ///</summary>
        [JsonProperty("tank_id")]
        public string TankId {get; set;}

        ///<summary>
        ///Фильтр по наличию техники в Ангаре. Если параметр не указан, возвращается вся техника. Параметр обрабатывается только при наличии действующего access_token для указанного account_id. Допустимые значения: 
///
///"1" — Возвращать технику из Ангара. 
///"0" — Возвращать технику, которой уже нет в Ангаре.
        ///string
        ///</summary>
        [JsonProperty("in_garage")]
        public string InGarage {get; set;}
    }
    
    ///<summary>
    ///Достижения по технике игрока
    ///</summary>
    public class ResponseWotbTanksAchievements:IResponse
    {

        ///<summary>
        ///Идентификатор аккаунта игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Полученные достижения
        ///</summary>
        [JsonProperty("achievements")]
        public Dictionary<string,string> Achievements {get; set;}

        ///<summary>
        ///Максимальные значения серийных достижений
        ///</summary>
        [JsonProperty("max_series")]
        public Dictionary<string,string> MaxSeries {get; set;}

        ///<summary>
        ///Идентификатор техники
        ///</summary>
        [JsonProperty("tank_id")]
        public Int64? TankId {get; set;}
    }


}

namespace WGClient.WorldOfWarplanes
{
    ///<summary>
    /// Игроки
    /// https://ru.wargaming.net/developers/api_reference/wowp/account/list/
    ///</summary>
    [Method(Url="api.worldofwarplanes.ru/wowp/account/list/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wowp/account/list/")]
    public class RequestWowpAccountList:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Тип поиска. Определяет минимальную длину строки поиска и вид поиска. По умолчанию используется значение startswith. Допустимые значения: 
///
///"startswith" — Поиск по первым символам имени игрока. Минимальная длина: 3 символа без учёта регистра. (используется по умолчанию)
///"exact" — Поиск по строгому соответствию имени игрока. Минимальная длина: 1 символ без учёта регистра.
        ///string
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Строка поиска по имени игрока. Вид поиска и минимальная длина строки поиска зависят от параметра type.
///        Максимальная длина: 24 символа.
        ///string
        ///</summary>
        [JsonProperty("search")]
        [FieldIsMandatory]
        public string Search {get; set;}

        ///<summary>
        ///Количество возвращаемых записей (может вернуться меньше записей, но не больше 100). Если переданный лимит превышает 100, тогда автоматически выставляется лимит в 100 (по умолчанию).
        ///numeric
        ///</summary>
        [JsonProperty("limit")]
        public string Limit {get; set;}
    }
    
    ///<summary>
    ///Игроки
    ///</summary>
    public class ResponseWowpAccountList:IResponse
    {

        ///<summary>
        ///Идентификатор аккаунта игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Имя игрока
        ///</summary>
        [JsonProperty("nickname")]
        public string Nickname {get; set;}
    }


    ///<summary>
    /// Персональные данные игрока
    /// https://ru.wargaming.net/developers/api_reference/wowp/account/info/
    ///</summary>
    [Method(Url="api.worldofwarplanes.ru/wowp/account/info/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wowp/account/info/")]
    public class RequestWowpAccountInfo:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Ключ доступа к персональным данным пользователя. Имеет срок действия. Для получения ключа доступа необходимо запросить аутентификацию.
        ///string
        ///</summary>
        [JsonProperty("access_token")]
        public string AccessToken {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор аккаунта игрока
        ///numeric, list
        ///</summary>
        [JsonProperty("account_id")]
        [FieldIsMandatory]
        public string AccountId {get; set;}
    }
    
    ///<summary>
    ///Персональные данные игрока
    ///</summary>
    public class ResponseWowpAccountInfo:IResponse
    {

        ///<summary>
        ///Идентификатор аккаунта игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Количество боев, проведенных в рамках закрытого бета теста
        ///</summary>
        [JsonProperty("cbt_games_played")]
        public Int64? CbtGamesPlayed {get; set;}

        ///<summary>
        ///Язык игрового клиента
        ///</summary>
        [JsonProperty("client_language")]
        public string ClientLanguage {get; set;}

        ///<summary>
        ///Дата создания аккаунта игрока
        ///</summary>
        [JsonProperty("created_at")]
        public int? CreatedAt {get; set;}

        ///<summary>
        ///Личный рейтинг
        ///</summary>
        [JsonProperty("global_rating")]
        public Int64? GlobalRating {get; set;}

        ///<summary>
        ///Время последнего боя
        ///</summary>
        [JsonProperty("last_battle_time")]
        public int? LastBattleTime {get; set;}

        ///<summary>
        ///Время окончания последней игровой сессии
        ///</summary>
        [JsonProperty("logout_at")]
        public int? LogoutAt {get; set;}

        ///<summary>
        ///Имя игрока
        ///</summary>
        [JsonProperty("nickname")]
        public string Nickname {get; set;}

        ///<summary>
        ///Количество боев, проведенных в рамках открытого бета теста
        ///</summary>
        [JsonProperty("obt_games_played")]
        public Int64? ObtGamesPlayed {get; set;}

        ///<summary>
        ///Дата обновления информации об игроке
        ///</summary>
        [JsonProperty("updated_at")]
        public int? UpdatedAt {get; set;}

        ///<summary>
        ///Достижения игрока
        ///</summary>
        [JsonProperty("achievements")]
        public WowpAccountInfoAchievements Achievements {get; set;}

        ///<summary>
        ///Приватные данные игрока
        ///</summary>
        [JsonProperty("private")]
        public WowpAccountInfoPrivate Private {get; set;}

        ///<summary>
        ///Бои звеном
        ///</summary>
        [JsonProperty("squad")]
        public WowpAccountInfoSquad Squad {get; set;}

        ///<summary>
        ///Статистика игрока
        ///</summary>
        [JsonProperty("statistics")]
        public WowpAccountInfoStatistics Statistics {get; set;}
    }
    public class WowpAccountInfoAchievements
    {

        ///<summary>
        ///Название достижения
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Локализованное поле name
        ///</summary>
        [JsonProperty("name_i18n")]
        public string NameI18n {get; set;}

        ///<summary>
        ///Количество достижений
        ///</summary>
        [JsonProperty("number")]
        public Int64? Number {get; set;}
    }

    public class WowpAccountInfoPrivate
    {

        ///<summary>
        ///Информация о блокировке аккаунта
        ///</summary>
        [JsonProperty("ban_info")]
        public string BanInfo {get; set;}

        ///<summary>
        ///Время окончания блокировки аккаунта
        ///</summary>
        [JsonProperty("ban_time")]
        public int? BanTime {get; set;}

        ///<summary>
        ///Кредиты
        ///</summary>
        [JsonProperty("credits")]
        public Int64? Credits {get; set;}

        ///<summary>
        ///Свободный опыт
        ///</summary>
        [JsonProperty("free_xp")]
        public Int64? FreeXp {get; set;}

        ///<summary>
        ///Идентификаторы аккаунтов друзей игрока
        ///</summary>
        [JsonProperty("friends")]
        public int[] Friends {get; set;}

        ///<summary>
        ///Золото
        ///</summary>
        [JsonProperty("gold")]
        public Int64? Gold {get; set;}

        ///<summary>
        ///Показывает, привязан ли аккаунт к номеру мобильного телефона
        ///</summary>
        [JsonProperty("is_bound_to_phone")]
        public bool IsBoundToPhone {get; set;}

        ///<summary>
        ///Показывает, является ли аккаунт премиум аккаунтом
        ///</summary>
        [JsonProperty("is_premium")]
        public bool IsPremium {get; set;}

        ///<summary>
        ///Срок действия премиум аккаунта
        ///</summary>
        [JsonProperty("premium_expires_at")]
        public int? PremiumExpiresAt {get; set;}
    }

    public class WowpAccountInfoSquad
    {

        ///<summary>
        ///Проведено боёв звеном
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}
    }

    public class WowpAccountInfoStatistics
    {

        ///<summary>
        ///Помощь в уничтожении самолётов
        ///</summary>
        [JsonProperty("assists")]
        public Int64? Assists {get; set;}

        ///<summary>
        ///«Чистый» опыт
        ///</summary>
        [JsonProperty("base_xp")]
        public Int64? BaseXp {get; set;}

        ///<summary>
        ///Средний опыт за бой (без учёта премиум аккаунта)
        ///</summary>
        [JsonProperty("battle_avg_xp")]
        public Int64? BattleAvgXp {get; set;}

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Помощь в уничтожении самолётов, максимум за бой
        ///</summary>
        [JsonProperty("max_assists")]
        public Int64? MaxAssists {get; set;}

        ///<summary>
        ///Нанесено урона самолётам противника, максимум за бой
        ///</summary>
        [JsonProperty("max_damage_dealt")]
        public double MaxDamageDealt {get; set;}

        ///<summary>
        ///Нанесено урона объектам, максимум за бой
        ///</summary>
        [JsonProperty("max_structure_damage")]
        public double MaxStructureDamage {get; set;}

        ///<summary>
        ///Максимальный опыт за бой
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Суммарный опыт
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}

        ///<summary>
        ///Нанесено урона самолётам противника
        ///</summary>
        [JsonProperty("damage_dealt")]
        public WowpAccountInfoStatisticsDamage_dealt DamageDealt {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника
        ///</summary>
        [JsonProperty("frags")]
        public WowpAccountInfoStatisticsFrags Frags {get; set;}

        ///<summary>
        ///Разрушено объектов (кроме баз)
        ///</summary>
        [JsonProperty("ground_objects_destroyed")]
        public WowpAccountInfoStatisticsGround_objects_destroyed GroundObjectsDestroyed {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public WowpAccountInfoStatisticsHits Hits {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника, максимум за бой
        ///</summary>
        [JsonProperty("max_frags")]
        public WowpAccountInfoStatisticsMax_frags MaxFrags {get; set;}

        ///<summary>
        ///Разрушено объектов (кроме баз), максимум за бой
        ///</summary>
        [JsonProperty("max_ground_objects_destroyed")]
        public WowpAccountInfoStatisticsMax_ground_objects_destroyed MaxGroundObjectsDestroyed {get; set;}

        ///<summary>
        ///Разрушено объектов, максимум за бой
        ///</summary>
        [JsonProperty("max_structure_destroyed")]
        public WowpAccountInfoStatisticsMax_structure_destroyed MaxStructureDestroyed {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public WowpAccountInfoStatisticsShots Shots {get; set;}

        ///<summary>
        ///Нанесено урона объектам
        ///</summary>
        [JsonProperty("structure_damage")]
        public WowpAccountInfoStatisticsStructure_damage StructureDamage {get; set;}

        ///<summary>
        ///Разрушено баз
        ///</summary>
        [JsonProperty("team_objects_destroyed")]
        public WowpAccountInfoStatisticsTeam_objects_destroyed TeamObjectsDestroyed {get; set;}

        ///<summary>
        ///Уничтожено орудий ПВО противника
        ///</summary>
        [JsonProperty("turrets_destroyed")]
        public WowpAccountInfoStatisticsTurrets_destroyed TurretsDestroyed {get; set;}
    }
    public class WowpAccountInfoStatisticsDamage_dealt
    {

        ///<summary>
        ///бомбами
        ///</summary>
        [JsonProperty("bombs")]
        public double Bombs {get; set;}

        ///<summary>
        ///поджогом
        ///</summary>
        [JsonProperty("fire")]
        public double Fire {get; set;}

        ///<summary>
        ///пушками
        ///</summary>
        [JsonProperty("guns")]
        public double Guns {get; set;}

        ///<summary>
        ///тараном
        ///</summary>
        [JsonProperty("ramming")]
        public double Ramming {get; set;}

        ///<summary>
        ///бортстрелком
        ///</summary>
        [JsonProperty("rear_gunner")]
        public double RearGunner {get; set;}

        ///<summary>
        ///ракетами
        ///</summary>
        [JsonProperty("rockets")]
        public double Rockets {get; set;}

        ///<summary>
        ///всего
        ///</summary>
        [JsonProperty("total")]
        public double Total {get; set;}
    }

    public class WowpAccountInfoStatisticsFrags
    {

        ///<summary>
        ///бомбами
        ///</summary>
        [JsonProperty("bombs")]
        public Int64? Bombs {get; set;}

        ///<summary>
        ///поджогом
        ///</summary>
        [JsonProperty("fire")]
        public Int64? Fire {get; set;}

        ///<summary>
        ///пушками
        ///</summary>
        [JsonProperty("guns")]
        public Int64? Guns {get; set;}

        ///<summary>
        ///тараном
        ///</summary>
        [JsonProperty("ramming")]
        public Int64? Ramming {get; set;}

        ///<summary>
        ///бортстрелком
        ///</summary>
        [JsonProperty("rear_gunner")]
        public Int64? RearGunner {get; set;}

        ///<summary>
        ///ракетами
        ///</summary>
        [JsonProperty("rockets")]
        public Int64? Rockets {get; set;}

        ///<summary>
        ///всего
        ///</summary>
        [JsonProperty("total")]
        public Int64? Total {get; set;}
    }

    public class WowpAccountInfoStatisticsGround_objects_destroyed
    {

        ///<summary>
        ///бомбами
        ///</summary>
        [JsonProperty("bombs")]
        public Int64? Bombs {get; set;}

        ///<summary>
        ///поджогом
        ///</summary>
        [JsonProperty("fire")]
        public Int64? Fire {get; set;}

        ///<summary>
        ///пушками
        ///</summary>
        [JsonProperty("guns")]
        public Int64? Guns {get; set;}

        ///<summary>
        ///тараном
        ///</summary>
        [JsonProperty("ramming")]
        public Int64? Ramming {get; set;}

        ///<summary>
        ///бортстрелком
        ///</summary>
        [JsonProperty("rear_gunner")]
        public Int64? RearGunner {get; set;}

        ///<summary>
        ///ракетами
        ///</summary>
        [JsonProperty("rockets")]
        public Int64? Rockets {get; set;}

        ///<summary>
        ///всего
        ///</summary>
        [JsonProperty("total")]
        public Int64? Total {get; set;}
    }

    public class WowpAccountInfoStatisticsHits
    {

        ///<summary>
        ///бомбами
        ///</summary>
        [JsonProperty("bombs")]
        public Int64? Bombs {get; set;}

        ///<summary>
        ///поджогом
        ///</summary>
        [JsonProperty("fire")]
        public Int64? Fire {get; set;}

        ///<summary>
        ///пушками
        ///</summary>
        [JsonProperty("guns")]
        public Int64? Guns {get; set;}

        ///<summary>
        ///тараном
        ///</summary>
        [JsonProperty("ramming")]
        public Int64? Ramming {get; set;}

        ///<summary>
        ///бортстрелком
        ///</summary>
        [JsonProperty("rear_gunner")]
        public Int64? RearGunner {get; set;}

        ///<summary>
        ///ракетами
        ///</summary>
        [JsonProperty("rockets")]
        public Int64? Rockets {get; set;}

        ///<summary>
        ///всего
        ///</summary>
        [JsonProperty("total")]
        public Int64? Total {get; set;}
    }

    public class WowpAccountInfoStatisticsMax_frags
    {

        ///<summary>
        ///бомбами
        ///</summary>
        [JsonProperty("bombs")]
        public Int64? Bombs {get; set;}

        ///<summary>
        ///поджогом
        ///</summary>
        [JsonProperty("fire")]
        public Int64? Fire {get; set;}

        ///<summary>
        ///пушками
        ///</summary>
        [JsonProperty("guns")]
        public Int64? Guns {get; set;}

        ///<summary>
        ///тараном
        ///</summary>
        [JsonProperty("ramming")]
        public Int64? Ramming {get; set;}

        ///<summary>
        ///бортстрелком
        ///</summary>
        [JsonProperty("rear_gunner")]
        public Int64? RearGunner {get; set;}

        ///<summary>
        ///ракетами
        ///</summary>
        [JsonProperty("rockets")]
        public Int64? Rockets {get; set;}

        ///<summary>
        ///всего
        ///</summary>
        [JsonProperty("total")]
        public Int64? Total {get; set;}
    }

    public class WowpAccountInfoStatisticsMax_ground_objects_destroyed
    {

        ///<summary>
        ///бомбами
        ///</summary>
        [JsonProperty("bombs")]
        public Int64? Bombs {get; set;}

        ///<summary>
        ///поджогом
        ///</summary>
        [JsonProperty("fire")]
        public Int64? Fire {get; set;}

        ///<summary>
        ///пушками
        ///</summary>
        [JsonProperty("guns")]
        public Int64? Guns {get; set;}

        ///<summary>
        ///тараном
        ///</summary>
        [JsonProperty("ramming")]
        public Int64? Ramming {get; set;}

        ///<summary>
        ///бортстрелком
        ///</summary>
        [JsonProperty("rear_gunner")]
        public Int64? RearGunner {get; set;}

        ///<summary>
        ///ракетами
        ///</summary>
        [JsonProperty("rockets")]
        public Int64? Rockets {get; set;}

        ///<summary>
        ///всего
        ///</summary>
        [JsonProperty("total")]
        public Int64? Total {get; set;}
    }

    public class WowpAccountInfoStatisticsMax_structure_destroyed
    {

        ///<summary>
        ///бомбами
        ///</summary>
        [JsonProperty("bombs")]
        public double Bombs {get; set;}

        ///<summary>
        ///поджогом
        ///</summary>
        [JsonProperty("fire")]
        public double Fire {get; set;}

        ///<summary>
        ///пушками
        ///</summary>
        [JsonProperty("guns")]
        public double Guns {get; set;}

        ///<summary>
        ///тараном
        ///</summary>
        [JsonProperty("ramming")]
        public double Ramming {get; set;}

        ///<summary>
        ///бортстрелком
        ///</summary>
        [JsonProperty("rear_gunner")]
        public double RearGunner {get; set;}

        ///<summary>
        ///ракетами
        ///</summary>
        [JsonProperty("rockets")]
        public double Rockets {get; set;}

        ///<summary>
        ///всего
        ///</summary>
        [JsonProperty("total")]
        public double Total {get; set;}
    }

    public class WowpAccountInfoStatisticsShots
    {

        ///<summary>
        ///бомбами
        ///</summary>
        [JsonProperty("bombs")]
        public Int64? Bombs {get; set;}

        ///<summary>
        ///поджогом
        ///</summary>
        [JsonProperty("fire")]
        public Int64? Fire {get; set;}

        ///<summary>
        ///пушками
        ///</summary>
        [JsonProperty("guns")]
        public Int64? Guns {get; set;}

        ///<summary>
        ///тараном
        ///</summary>
        [JsonProperty("ramming")]
        public Int64? Ramming {get; set;}

        ///<summary>
        ///бортстрелком
        ///</summary>
        [JsonProperty("rear_gunner")]
        public Int64? RearGunner {get; set;}

        ///<summary>
        ///ракетами
        ///</summary>
        [JsonProperty("rockets")]
        public Int64? Rockets {get; set;}

        ///<summary>
        ///всего
        ///</summary>
        [JsonProperty("total")]
        public Int64? Total {get; set;}
    }

    public class WowpAccountInfoStatisticsStructure_damage
    {

        ///<summary>
        ///бомбами
        ///</summary>
        [JsonProperty("bombs")]
        public double Bombs {get; set;}

        ///<summary>
        ///поджогом
        ///</summary>
        [JsonProperty("fire")]
        public double Fire {get; set;}

        ///<summary>
        ///пушками
        ///</summary>
        [JsonProperty("guns")]
        public double Guns {get; set;}

        ///<summary>
        ///тараном
        ///</summary>
        [JsonProperty("ramming")]
        public double Ramming {get; set;}

        ///<summary>
        ///бортстрелком
        ///</summary>
        [JsonProperty("rear_gunner")]
        public double RearGunner {get; set;}

        ///<summary>
        ///ракетами
        ///</summary>
        [JsonProperty("rockets")]
        public double Rockets {get; set;}

        ///<summary>
        ///всего
        ///</summary>
        [JsonProperty("total")]
        public double Total {get; set;}
    }

    public class WowpAccountInfoStatisticsTeam_objects_destroyed
    {

        ///<summary>
        ///бомбами
        ///</summary>
        [JsonProperty("bombs")]
        public Int64? Bombs {get; set;}

        ///<summary>
        ///поджогом
        ///</summary>
        [JsonProperty("fire")]
        public Int64? Fire {get; set;}

        ///<summary>
        ///пушками
        ///</summary>
        [JsonProperty("guns")]
        public Int64? Guns {get; set;}

        ///<summary>
        ///тараном
        ///</summary>
        [JsonProperty("ramming")]
        public Int64? Ramming {get; set;}

        ///<summary>
        ///бортстрелком
        ///</summary>
        [JsonProperty("rear_gunner")]
        public Int64? RearGunner {get; set;}

        ///<summary>
        ///ракетами
        ///</summary>
        [JsonProperty("rockets")]
        public Int64? Rockets {get; set;}

        ///<summary>
        ///всего
        ///</summary>
        [JsonProperty("total")]
        public Int64? Total {get; set;}
    }

    public class WowpAccountInfoStatisticsTurrets_destroyed
    {

        ///<summary>
        ///бомбами
        ///</summary>
        [JsonProperty("bombs")]
        public Int64? Bombs {get; set;}

        ///<summary>
        ///поджогом
        ///</summary>
        [JsonProperty("fire")]
        public Int64? Fire {get; set;}

        ///<summary>
        ///пушками
        ///</summary>
        [JsonProperty("guns")]
        public Int64? Guns {get; set;}

        ///<summary>
        ///тараном
        ///</summary>
        [JsonProperty("ramming")]
        public Int64? Ramming {get; set;}

        ///<summary>
        ///бортстрелком
        ///</summary>
        [JsonProperty("rear_gunner")]
        public Int64? RearGunner {get; set;}

        ///<summary>
        ///ракетами
        ///</summary>
        [JsonProperty("rockets")]
        public Int64? Rockets {get; set;}

        ///<summary>
        ///всего
        ///</summary>
        [JsonProperty("total")]
        public Int64? Total {get; set;}
    }




    ///<summary>
    /// Авиатехника игрока
    /// https://ru.wargaming.net/developers/api_reference/wowp/account/planes/
    ///</summary>
    [Method(Url="api.worldofwarplanes.ru/wowp/account/planes/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wowp/account/planes/")]
    public class RequestWowpAccountPlanes:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Ключ доступа к персональным данным пользователя. Имеет срок действия. Для получения ключа доступа необходимо запросить аутентификацию.
        ///string
        ///</summary>
        [JsonProperty("access_token")]
        public string AccessToken {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор аккаунта игрока
        ///numeric, list
        ///</summary>
        [JsonProperty("account_id")]
        [FieldIsMandatory]
        public string AccountId {get; set;}
    }
    
    ///<summary>
    ///Авиатехника игрока
    ///</summary>
    public class ResponseWowpAccountPlanes:IResponse
    {

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Время обновления состояния. Данные доступны только при наличии действительного access_token для указанного аккаунта.
        ///</summary>
        [JsonProperty("in_garage_updated")]
        public int? InGarageUpdated {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Разрушено объектов, максимум за бой
        ///</summary>
        [JsonProperty("max_ground_object_destroyed")]
        public Int64? MaxGroundObjectDestroyed {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника, максимум за бой
        ///</summary>
        [JsonProperty("max_killed")]
        public Int64? MaxKilled {get; set;}

        ///<summary>
        ///Идентификатор самолёта
        ///</summary>
        [JsonProperty("plane_id")]
        public Int64? PlaneId {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Присутствие авиатехники в Ангаре. Данные доступны только при наличии действительного access_token для указанного аккаунта.
        ///</summary>
        [JsonProperty("in_garage")]
        public bool InGarage {get; set;}
    }


    ///<summary>
    /// Список авиатехники
    /// https://ru.wargaming.net/developers/api_reference/wowp/encyclopedia/planes/
    ///</summary>
    [Method(Url="api.worldofwarplanes.ru/wowp/encyclopedia/planes/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wowp/encyclopedia/planes/")]
    public class RequestWowpEncyclopediaPlanes:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Тип. Допустимые значения: 
///
///"fighter" — Истребитель 
///"fighterHeavy" — Тяжёлый истребитель 
///"assault" — Ударный самолёт 
///"navy" — Многоцелевой истребитель
        ///string
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}

        ///<summary>
        ///Нация. Допустимые значения: 
///
///"ussr" — СССР 
///"germany" — Германия 
///"usa" — США 
///"france" — Франция 
///"uk" — Великобритания 
///"china" — Китай 
///"japan" — Япония
        ///string
        ///</summary>
        [JsonProperty("nation")]
        public string Nation {get; set;}
    }
    
    ///<summary>
    ///Список авиатехники
    ///</summary>
    public class ResponseWowpEncyclopediaPlanes:IResponse
    {

        ///<summary>
        ///Показывает, был ли самолёт подарен
        ///</summary>
        [JsonProperty("is_gift")]
        public bool IsGift {get; set;}

        ///<summary>
        ///Показывает, является ли самолёт премиум самолётом
        ///</summary>
        [JsonProperty("is_premium")]
        public bool IsPremium {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("level")]
        public Int64? Level {get; set;}

        ///<summary>
        ///Название
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Локализованное поле name
        ///</summary>
        [JsonProperty("name_i18n")]
        public string NameI18n {get; set;}

        ///<summary>
        ///Нация
        ///</summary>
        [JsonProperty("nation")]
        public string Nation {get; set;}

        ///<summary>
        ///Локализованное поле nation
        ///</summary>
        [JsonProperty("nation_i18n")]
        public string NationI18n {get; set;}

        ///<summary>
        ///Идентификатор самолёта
        ///</summary>
        [JsonProperty("plane_id")]
        public Int64? PlaneId {get; set;}

        ///<summary>
        ///Тип
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}

        ///<summary>
        ///Изображения самолёта
        ///</summary>
        [JsonProperty("images")]
        public WowpEncyclopediaPlanesImages Images {get; set;}
    }
    public class WowpEncyclopediaPlanesImages
    {

        ///<summary>
        ///URL к изображению самолёта в размере 408 x 252 пкс
        ///</summary>
        [JsonProperty("large")]
        public string Large {get; set;}

        ///<summary>
        ///URL к изображению самолёта в размере 102 x 63 пкс
        ///</summary>
        [JsonProperty("medium")]
        public string Medium {get; set;}

        ///<summary>
        ///URL к изображению самолёта в размере 51 x 31 пкс
        ///</summary>
        [JsonProperty("small")]
        public string Small {get; set;}
    }



    ///<summary>
    /// Информация об авиатехнике
    /// https://ru.wargaming.net/developers/api_reference/wowp/encyclopedia/planeinfo/
    ///</summary>
    [Method(Url="api.worldofwarplanes.ru/wowp/encyclopedia/planeinfo/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wowp/encyclopedia/planeinfo/")]
    public class RequestWowpEncyclopediaPlaneinfo:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор самолёта
        ///numeric, list
        ///</summary>
        [JsonProperty("plane_id")]
        [FieldIsMandatory]
        public string PlaneId {get; set;}
    }
    
    ///<summary>
    ///Информация об авиатехнике
    ///</summary>
    public class ResponseWowpEncyclopediaPlaneinfo:IResponse
    {

        ///<summary>
        ///Локализованное описание самолёта
        ///</summary>
        [JsonProperty("description")]
        public string Description {get; set;}

        ///<summary>
        ///Показывает, был ли самолёт подарен
        ///</summary>
        [JsonProperty("is_gift")]
        public bool IsGift {get; set;}

        ///<summary>
        ///Показывает, является ли самолёт премиум самолётом
        ///</summary>
        [JsonProperty("is_premium")]
        public bool IsPremium {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("level")]
        public Int64? Level {get; set;}

        ///<summary>
        ///Название
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Локализованное поле name
        ///</summary>
        [JsonProperty("name_i18n")]
        public string NameI18n {get; set;}

        ///<summary>
        ///Нация
        ///</summary>
        [JsonProperty("nation")]
        public string Nation {get; set;}

        ///<summary>
        ///Локализованное поле nation
        ///</summary>
        [JsonProperty("nation_i18n")]
        public string NationI18n {get; set;}

        ///<summary>
        ///Потомки самолета первого порядка
        ///</summary>
        [JsonProperty("next_planes")]
        public int[] NextPlanes {get; set;}

        ///<summary>
        ///Идентификатор самолёта
        ///</summary>
        [JsonProperty("plane_id")]
        public Int64? PlaneId {get; set;}

        ///<summary>
        ///Предки самолета первого порядка
        ///</summary>
        [JsonProperty("prev_planes")]
        public int[] PrevPlanes {get; set;}

        ///<summary>
        ///Стоимость покупки в кредитах
        ///</summary>
        [JsonProperty("price_credit")]
        public Int64? PriceCredit {get; set;}

        ///<summary>
        ///Стоимость покупки в золоте
        ///</summary>
        [JsonProperty("price_gold")]
        public Int64? PriceGold {get; set;}

        ///<summary>
        ///Локализованное сокращённое название самолёта
        ///</summary>
        [JsonProperty("short_name_i18n")]
        public string ShortNameI18n {get; set;}

        ///<summary>
        ///Тип
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}

        ///<summary>
        ///Экипаж
        ///</summary>
        [JsonProperty("crew")]
        public WowpEncyclopediaPlaneinfoCrew Crew {get; set;}

        ///<summary>
        ///Расчёт характеристик
        ///</summary>
        [JsonProperty("features")]
        public WowpEncyclopediaPlaneinfoFeatures Features {get; set;}

        ///<summary>
        ///Изображения самолёта
        ///</summary>
        [JsonProperty("images")]
        public WowpEncyclopediaPlaneinfoImages Images {get; set;}
    }
    public class WowpEncyclopediaPlaneinfoCrew
    {

        ///<summary>
        ///Количество
        ///</summary>
        [JsonProperty("count")]
        public Int64? Count {get; set;}

        ///<summary>
        ///Специальность члена экипажа
        ///</summary>
        [JsonProperty("role")]
        public string Role {get; set;}

        ///<summary>
        ///Локализованное поле role
        ///</summary>
        [JsonProperty("role_i18n")]
        public string RoleI18n {get; set;}
    }

    public class WowpEncyclopediaPlaneinfoFeatures
    {

        ///<summary>
        ///Среднее время виража
        ///</summary>
        [JsonProperty("average_turn_time")]
        public double AverageTurnTime {get; set;}

        ///<summary>
        ///Управляемость
        ///</summary>
        [JsonProperty("controllability")]
        public Int64? Controllability {get; set;}

        ///<summary>
        ///Скорость пикирования
        ///</summary>
        [JsonProperty("dive_speed")]
        public Int64? DiveSpeed {get; set;}

        ///<summary>
        ///Огневая мощь
        ///</summary>
        [JsonProperty("dps")]
        public Int64? Dps {get; set;}

        ///<summary>
        ///Прочность
        ///</summary>
        [JsonProperty("hp")]
        public Int64? Hp {get; set;}

        ///<summary>
        ///Манёвренность
        ///</summary>
        [JsonProperty("maneuverability")]
        public Int64? Maneuverability {get; set;}

        ///<summary>
        ///Вес
        ///</summary>
        [JsonProperty("mass")]
        public double Mass {get; set;}

        ///<summary>
        ///Максимальная скорость на высоте
        ///</summary>
        [JsonProperty("max_speed")]
        public Int64? MaxSpeed {get; set;}

        ///<summary>
        ///Оптимальная высота
        ///</summary>
        [JsonProperty("optimal_height")]
        public Int64? OptimalHeight {get; set;}

        ///<summary>
        ///Оптимальная скорость
        ///</summary>
        [JsonProperty("optimal_maneuver_speed")]
        public Int64? OptimalManeuverSpeed {get; set;}

        ///<summary>
        ///Скороподъёмность
        ///</summary>
        [JsonProperty("rate_of_climbing")]
        public double RateOfClimbing {get; set;}

        ///<summary>
        ///Скорость крена
        ///</summary>
        [JsonProperty("roll_maneuverability")]
        public Int64? RollManeuverability {get; set;}

        ///<summary>
        ///Количество слотов
        ///</summary>
        [JsonProperty("slots_count")]
        public Int64? SlotsCount {get; set;}

        ///<summary>
        ///Максимальная скорость у земли
        ///</summary>
        [JsonProperty("speed_at_the_ground")]
        public Int64? SpeedAtTheGround {get; set;}

        ///<summary>
        ///Скорость
        ///</summary>
        [JsonProperty("speed_factor")]
        public Int64? SpeedFactor {get; set;}

        ///<summary>
        ///Скорость сваливания
        ///</summary>
        [JsonProperty("stall_speed")]
        public Int64? StallSpeed {get; set;}
    }

    public class WowpEncyclopediaPlaneinfoImages
    {

        ///<summary>
        ///URL к изображению самолёта в размере 408 x 252 пкс
        ///</summary>
        [JsonProperty("large")]
        public string Large {get; set;}

        ///<summary>
        ///URL к изображению самолёта в размере 102 x 63 пкс
        ///</summary>
        [JsonProperty("medium")]
        public string Medium {get; set;}

        ///<summary>
        ///URL к изображению самолёта в размере 51 x 31 пкс
        ///</summary>
        [JsonProperty("small")]
        public string Small {get; set;}
    }



    ///<summary>
    /// Конфигурация
    /// https://ru.wargaming.net/developers/api_reference/wowp/encyclopedia/planemodules/
    ///</summary>
    [Method(Url="api.worldofwarplanes.ru/wowp/encyclopedia/planemodules/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wowp/encyclopedia/planemodules/")]
    public class RequestWowpEncyclopediaPlanemodules:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор самолёта
        ///numeric, list
        ///</summary>
        [JsonProperty("plane_id")]
        [FieldIsMandatory]
        public string PlaneId {get; set;}

        ///<summary>
        ///Конфигурация. Допустимые значения: 
///
///"engine" — двигатель 
///"bomb" — бомба 
///"rocket" — ракета 
///"turret" — турель 
///"gun" — пушка 
///"construction" — конструкция
        ///string
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}
    }
    
    ///<summary>
    ///Конфигурация
    ///</summary>
    public class ResponseWowpEncyclopediaPlanemodules:IResponse
    {

        ///<summary>
        ///Бомба
        ///</summary>
        [JsonProperty("bomb")]
        public WowpEncyclopediaPlanemodulesBomb Bomb {get; set;}

        ///<summary>
        ///Конструкция
        ///</summary>
        [JsonProperty("construction")]
        public WowpEncyclopediaPlanemodulesConstruction Construction {get; set;}

        ///<summary>
        ///Двигатель
        ///</summary>
        [JsonProperty("engine")]
        public WowpEncyclopediaPlanemodulesEngine Engine {get; set;}

        ///<summary>
        ///Пушка
        ///</summary>
        [JsonProperty("gun")]
        public WowpEncyclopediaPlanemodulesGun Gun {get; set;}

        ///<summary>
        ///Ракета
        ///</summary>
        [JsonProperty("rocket")]
        public WowpEncyclopediaPlanemodulesRocket Rocket {get; set;}

        ///<summary>
        ///Турель
        ///</summary>
        [JsonProperty("turret")]
        public WowpEncyclopediaPlanemodulesTurret Turret {get; set;}
    }
    public class WowpEncyclopediaPlanemodulesBomb
    {

        ///<summary>
        ///Идентификатор
        ///</summary>
        [JsonProperty("bomb_id")]
        public Int64? BombId {get; set;}

        ///<summary>
        ///Урон
        ///</summary>
        [JsonProperty("explosion_damage_max")]
        public Int64? ExplosionDamageMax {get; set;}

        ///<summary>
        ///Радиус поражения
        ///</summary>
        [JsonProperty("explosion_radius")]
        public Int64? ExplosionRadius {get; set;}

        ///<summary>
        ///Ссылка на изображение
        ///</summary>
        [JsonProperty("image")]
        public string Image {get; set;}

        ///<summary>
        ///Показывает, является ли модуль базовым
        ///</summary>
        [JsonProperty("is_default")]
        public bool IsDefault {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("level")]
        public Int64? Level {get; set;}

        ///<summary>
        ///Вес
        ///</summary>
        [JsonProperty("mass")]
        public double Mass {get; set;}

        ///<summary>
        ///Название
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Локализованное поле name
        ///</summary>
        [JsonProperty("name_i18n")]
        public string NameI18n {get; set;}

        ///<summary>
        ///Стоимость покупки в кредитах
        ///</summary>
        [JsonProperty("price_credit")]
        public Int64? PriceCredit {get; set;}

        ///<summary>
        ///Стоимость исследования
        ///</summary>
        [JsonProperty("price_xp")]
        public Int64? PriceXp {get; set;}

        ///<summary>
        ///Список совместимых самолётов
        ///</summary>
        [JsonProperty("compatible_vehicles")]
        public int[] CompatibleVehicles {get; set;}
    }

    public class WowpEncyclopediaPlanemodulesConstruction
    {

        ///<summary>
        ///Идентификатор
        ///</summary>
        [JsonProperty("construction_id")]
        public Int64? ConstructionId {get; set;}

        ///<summary>
        ///Прочность
        ///</summary>
        [JsonProperty("hp")]
        public Int64? Hp {get; set;}

        ///<summary>
        ///Ссылка на изображение
        ///</summary>
        [JsonProperty("image")]
        public string Image {get; set;}

        ///<summary>
        ///Показывает, является ли модуль базовым
        ///</summary>
        [JsonProperty("is_default")]
        public bool IsDefault {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("level")]
        public Int64? Level {get; set;}

        ///<summary>
        ///Вес
        ///</summary>
        [JsonProperty("mass")]
        public double Mass {get; set;}

        ///<summary>
        ///Название
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Локализованное поле name
        ///</summary>
        [JsonProperty("name_i18n")]
        public string NameI18n {get; set;}

        ///<summary>
        ///Стоимость покупки в кредитах
        ///</summary>
        [JsonProperty("price_credit")]
        public Int64? PriceCredit {get; set;}

        ///<summary>
        ///Стоимость исследования
        ///</summary>
        [JsonProperty("price_xp")]
        public Int64? PriceXp {get; set;}

        ///<summary>
        ///Список совместимых самолётов
        ///</summary>
        [JsonProperty("compatible_vehicles")]
        public int[] CompatibleVehicles {get; set;}
    }

    public class WowpEncyclopediaPlanemodulesEngine
    {

        ///<summary>
        ///Идентификатор
        ///</summary>
        [JsonProperty("engine_id")]
        public Int64? EngineId {get; set;}

        ///<summary>
        ///Тип
        ///</summary>
        [JsonProperty("equipment_type")]
        public string EquipmentType {get; set;}

        ///<summary>
        ///Локализованное поле equipment_type
        ///</summary>
        [JsonProperty("equipment_type_i18n")]
        public string EquipmentTypeI18n {get; set;}

        ///<summary>
        ///Ссылка на изображение
        ///</summary>
        [JsonProperty("image")]
        public string Image {get; set;}

        ///<summary>
        ///Показывает, является ли модуль базовым
        ///</summary>
        [JsonProperty("is_default")]
        public bool IsDefault {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("level")]
        public Int64? Level {get; set;}

        ///<summary>
        ///Вес
        ///</summary>
        [JsonProperty("mass")]
        public double Mass {get; set;}

        ///<summary>
        ///Название
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Локализованное поле name
        ///</summary>
        [JsonProperty("name_i18n")]
        public string NameI18n {get; set;}

        ///<summary>
        ///Стоимость покупки в кредитах
        ///</summary>
        [JsonProperty("price_credit")]
        public Int64? PriceCredit {get; set;}

        ///<summary>
        ///Стоимость исследования
        ///</summary>
        [JsonProperty("price_xp")]
        public Int64? PriceXp {get; set;}

        ///<summary>
        ///Список совместимых самолётов
        ///</summary>
        [JsonProperty("compatible_vehicles")]
        public int[] CompatibleVehicles {get; set;}

        ///<summary>
        ///Мощность
        ///</summary>
        [JsonProperty("power")]
        public Int64? Power {get; set;}

        ///<summary>
        ///Тяга
        ///</summary>
        [JsonProperty("thrust")]
        public Int64? Thrust {get; set;}
    }

    public class WowpEncyclopediaPlanemodulesGun
    {

        ///<summary>
        ///Начальная скорость снаряда
        ///</summary>
        [JsonProperty("bullet_velocity")]
        public Int64? BulletVelocity {get; set;}

        ///<summary>
        ///Калибр
        ///</summary>
        [JsonProperty("caliber")]
        public double Caliber {get; set;}

        ///<summary>
        ///Урон
        ///</summary>
        [JsonProperty("dps")]
        public Int64? Dps {get; set;}

        ///<summary>
        ///Идентификатор
        ///</summary>
        [JsonProperty("gun_id")]
        public Int64? GunId {get; set;}

        ///<summary>
        ///Ссылка на изображение
        ///</summary>
        [JsonProperty("image")]
        public string Image {get; set;}

        ///<summary>
        ///Показывает, является ли модуль базовым
        ///</summary>
        [JsonProperty("is_default")]
        public bool IsDefault {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("level")]
        public Int64? Level {get; set;}

        ///<summary>
        ///Вес
        ///</summary>
        [JsonProperty("mass")]
        public double Mass {get; set;}

        ///<summary>
        ///Название
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Локализованное поле name
        ///</summary>
        [JsonProperty("name_i18n")]
        public string NameI18n {get; set;}

        ///<summary>
        ///Стоимость покупки в кредитах
        ///</summary>
        [JsonProperty("price_credit")]
        public Int64? PriceCredit {get; set;}

        ///<summary>
        ///Стоимость исследования
        ///</summary>
        [JsonProperty("price_xp")]
        public Int64? PriceXp {get; set;}

        ///<summary>
        ///Скорострельность
        ///</summary>
        [JsonProperty("rpm")]
        public Int64? Rpm {get; set;}

        ///<summary>
        ///Тип
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}

        ///<summary>
        ///Локализованное поле type
        ///</summary>
        [JsonProperty("type_i18n")]
        public string TypeI18n {get; set;}

        ///<summary>
        ///Список совместимых самолётов
        ///</summary>
        [JsonProperty("compatible_vehicles")]
        public int[] CompatibleVehicles {get; set;}
    }

    public class WowpEncyclopediaPlanemodulesRocket
    {

        ///<summary>
        ///Урон
        ///</summary>
        [JsonProperty("explosion_damage_max")]
        public Int64? ExplosionDamageMax {get; set;}

        ///<summary>
        ///Радиус поражения
        ///</summary>
        [JsonProperty("explosion_radius")]
        public Int64? ExplosionRadius {get; set;}

        ///<summary>
        ///Ссылка на изображение
        ///</summary>
        [JsonProperty("image")]
        public string Image {get; set;}

        ///<summary>
        ///Показывает, является ли модуль базовым
        ///</summary>
        [JsonProperty("is_default")]
        public bool IsDefault {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("level")]
        public Int64? Level {get; set;}

        ///<summary>
        ///Вес
        ///</summary>
        [JsonProperty("mass")]
        public double Mass {get; set;}

        ///<summary>
        ///Название
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Локализованное поле name
        ///</summary>
        [JsonProperty("name_i18n")]
        public string NameI18n {get; set;}

        ///<summary>
        ///Стоимость покупки в кредитах
        ///</summary>
        [JsonProperty("price_credit")]
        public Int64? PriceCredit {get; set;}

        ///<summary>
        ///Стоимость исследования
        ///</summary>
        [JsonProperty("price_xp")]
        public Int64? PriceXp {get; set;}

        ///<summary>
        ///Идентификатор
        ///</summary>
        [JsonProperty("rocket_id")]
        public Int64? RocketId {get; set;}

        ///<summary>
        ///Список совместимых самолётов
        ///</summary>
        [JsonProperty("compatible_vehicles")]
        public int[] CompatibleVehicles {get; set;}
    }

    public class WowpEncyclopediaPlanemodulesTurret
    {

        ///<summary>
        ///Начальная скорость снаряда
        ///</summary>
        [JsonProperty("bullet_velocity")]
        public Int64? BulletVelocity {get; set;}

        ///<summary>
        ///Калибр
        ///</summary>
        [JsonProperty("caliber")]
        public double Caliber {get; set;}

        ///<summary>
        ///Урон
        ///</summary>
        [JsonProperty("dps")]
        public Int64? Dps {get; set;}

        ///<summary>
        ///Ссылка на изображение
        ///</summary>
        [JsonProperty("image")]
        public string Image {get; set;}

        ///<summary>
        ///Показывает, является ли модуль базовым
        ///</summary>
        [JsonProperty("is_default")]
        public bool IsDefault {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("level")]
        public Int64? Level {get; set;}

        ///<summary>
        ///Вес
        ///</summary>
        [JsonProperty("mass")]
        public double Mass {get; set;}

        ///<summary>
        ///Название
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Локализованное поле name
        ///</summary>
        [JsonProperty("name_i18n")]
        public string NameI18n {get; set;}

        ///<summary>
        ///Стоимость покупки в кредитах
        ///</summary>
        [JsonProperty("price_credit")]
        public Int64? PriceCredit {get; set;}

        ///<summary>
        ///Стоимость исследования
        ///</summary>
        [JsonProperty("price_xp")]
        public Int64? PriceXp {get; set;}

        ///<summary>
        ///Скорострельность
        ///</summary>
        [JsonProperty("rpm")]
        public Int64? Rpm {get; set;}

        ///<summary>
        ///Идентификатор
        ///</summary>
        [JsonProperty("turret_id")]
        public Int64? TurretId {get; set;}

        ///<summary>
        ///пушка
        ///</summary>
        [JsonProperty("weapon_count")]
        public Int64? WeaponCount {get; set;}

        ///<summary>
        ///Список совместимых самолётов
        ///</summary>
        [JsonProperty("compatible_vehicles")]
        public int[] CompatibleVehicles {get; set;}
    }



    ///<summary>
    /// Развитие
    /// https://ru.wargaming.net/developers/api_reference/wowp/encyclopedia/planeupgrades/
    ///</summary>
    [Method(Url="api.worldofwarplanes.ru/wowp/encyclopedia/planeupgrades/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wowp/encyclopedia/planeupgrades/")]
    public class RequestWowpEncyclopediaPlaneupgrades:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор самолёта
        ///numeric, list
        ///</summary>
        [JsonProperty("plane_id")]
        [FieldIsMandatory]
        public string PlaneId {get; set;}
    }
    
    ///<summary>
    ///Развитие
    ///</summary>
    public class ResponseWowpEncyclopediaPlaneupgrades:IResponse
    {

        ///<summary>
        ///Название слота
        ///</summary>
        [JsonProperty("slot_name")]
        public string SlotName {get; set;}

        ///<summary>
        ///Локализованное поле slot_name
        ///</summary>
        [JsonProperty("slot_name_i18n")]
        public string SlotNameI18n {get; set;}

        ///<summary>
        ///Доступные модули
        ///</summary>
        [JsonProperty("modules")]
        public WowpEncyclopediaPlaneupgradesModules Modules {get; set;}
    }
    public class WowpEncyclopediaPlaneupgradesModules
    {

        ///<summary>
        ///Идентификатор связки слота и модуля
        ///</summary>
        [JsonProperty("bind_id")]
        public Int64? BindId {get; set;}

        ///<summary>
        ///Количество устанавливаемых модулей
        ///</summary>
        [JsonProperty("count")]
        public Int64? Count {get; set;}

        ///<summary>
        ///Идентификаторы несовместимых модулей
        ///</summary>
        [JsonProperty("incompatible_modules")]
        public int[] IncompatibleModules {get; set;}

        ///<summary>
        ///Показывает, является ли модуль базовым
        ///</summary>
        [JsonProperty("is_default")]
        public bool IsDefault {get; set;}

        ///<summary>
        ///Идентификатор модуля
        ///</summary>
        [JsonProperty("module_id")]
        public Int64? ModuleId {get; set;}

        ///<summary>
        ///Название модуля
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Идентификатор самолета, который можно открыть, исследовав этот модуль
        ///</summary>
        [JsonProperty("next_plane_id")]
        public Int64? NextPlaneId {get; set;}

        ///<summary>
        ///Идентификатор родительского модуля
        ///</summary>
        [JsonProperty("parent_id")]
        public Int64? ParentId {get; set;}
    }



    ///<summary>
    /// Расчёт характеристик
    /// https://ru.wargaming.net/developers/api_reference/wowp/encyclopedia/planespecification/
    ///</summary>
    [Method(Url="api.worldofwarplanes.ru/wowp/encyclopedia/planespecification/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wowp/encyclopedia/planespecification/")]
    public class RequestWowpEncyclopediaPlanespecification:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор самолёта
        ///numeric
        ///</summary>
        [JsonProperty("plane_id")]
        [FieldIsMandatory]
        public string PlaneId {get; set;}

        ///<summary>
        ///Идентификатор модуля
        ///numeric, list
        ///</summary>
        [JsonProperty("module_id")]
        public string ModuleId {get; set;}

        ///<summary>
        ///Идентификатор связки слота и модуля
        ///numeric, list
        ///</summary>
        [JsonProperty("bind_id")]
        public string BindId {get; set;}
    }
    
    ///<summary>
    ///Расчёт характеристик
    ///</summary>
    public class ResponseWowpEncyclopediaPlanespecification:IResponse
    {

        ///<summary>
        ///Слоты и модули
        ///</summary>
        [JsonProperty("slots")]
        public WowpEncyclopediaPlanespecificationSlots Slots {get; set;}

        ///<summary>
        ///Характеристики самолёта
        ///</summary>
        [JsonProperty("specification")]
        public WowpEncyclopediaPlanespecificationSpecification Specification {get; set;}
    }
    public class WowpEncyclopediaPlanespecificationSlots
    {

        ///<summary>
        ///Идентификатор связки слота и модуля
        ///</summary>
        [JsonProperty("bind_id")]
        public Int64? BindId {get; set;}

        ///<summary>
        ///Базовый модуль
        ///</summary>
        [JsonProperty("is_default")]
        public bool IsDefault {get; set;}

        ///<summary>
        ///Идентификатор модуля
        ///</summary>
        [JsonProperty("module_id")]
        public Int64? ModuleId {get; set;}

        ///<summary>
        ///Локализованное поле slot_name
        ///</summary>
        [JsonProperty("slot_name_i18n")]
        public string SlotNameI18n {get; set;}
    }

    public class WowpEncyclopediaPlanespecificationSpecification
    {

        ///<summary>
        ///Среднее время виража
        ///</summary>
        [JsonProperty("average_turn_time")]
        public double AverageTurnTime {get; set;}

        ///<summary>
        ///Управляемость
        ///</summary>
        [JsonProperty("controllability")]
        public Int64? Controllability {get; set;}

        ///<summary>
        ///Скорость пикирования
        ///</summary>
        [JsonProperty("dive_speed")]
        public Int64? DiveSpeed {get; set;}

        ///<summary>
        ///Огневая мощь
        ///</summary>
        [JsonProperty("dps")]
        public Int64? Dps {get; set;}

        ///<summary>
        ///Прочность
        ///</summary>
        [JsonProperty("hp")]
        public Int64? Hp {get; set;}

        ///<summary>
        ///Манёвренность
        ///</summary>
        [JsonProperty("maneuverability")]
        public Int64? Maneuverability {get; set;}

        ///<summary>
        ///Вес
        ///</summary>
        [JsonProperty("mass")]
        public double Mass {get; set;}

        ///<summary>
        ///Макс. скорость на высоте
        ///</summary>
        [JsonProperty("max_speed")]
        public Int64? MaxSpeed {get; set;}

        ///<summary>
        ///Оптимальная высота
        ///</summary>
        [JsonProperty("optimal_height")]
        public Int64? OptimalHeight {get; set;}

        ///<summary>
        ///Оптимальная скорость
        ///</summary>
        [JsonProperty("optimal_maneuver_speed")]
        public Int64? OptimalManeuverSpeed {get; set;}

        ///<summary>
        ///Скороподъёмность
        ///</summary>
        [JsonProperty("rate_of_climbing")]
        public double RateOfClimbing {get; set;}

        ///<summary>
        ///Скорость крена
        ///</summary>
        [JsonProperty("roll_maneuverability")]
        public Int64? RollManeuverability {get; set;}

        ///<summary>
        ///Макс. скорость у земли
        ///</summary>
        [JsonProperty("speed_at_the_ground")]
        public Int64? SpeedAtTheGround {get; set;}

        ///<summary>
        ///Скорость
        ///</summary>
        [JsonProperty("speed_factor")]
        public Int64? SpeedFactor {get; set;}

        ///<summary>
        ///Скорость сваливания
        ///</summary>
        [JsonProperty("stall_speed")]
        public Int64? StallSpeed {get; set;}
    }



    ///<summary>
    /// Достижения
    /// https://ru.wargaming.net/developers/api_reference/wowp/encyclopedia/achievements/
    ///</summary>
    [Method(Url="api.worldofwarplanes.ru/wowp/encyclopedia/achievements/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wowp/encyclopedia/achievements/")]
    public class RequestWowpEncyclopediaAchievements:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}
    }
    
    ///<summary>
    ///Достижения
    ///</summary>
    public class ResponseWowpEncyclopediaAchievements:IResponse
    {

        ///<summary>
        ///Описание достижения
        ///</summary>
        [JsonProperty("description")]
        public string Description {get; set;}

        ///<summary>
        ///Ссылка на изображение
        ///</summary>
        [JsonProperty("image")]
        public string Image {get; set;}

        ///<summary>
        ///Название достижения
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Локализованное поле name
        ///</summary>
        [JsonProperty("name_i18n")]
        public string NameI18n {get; set;}

        ///<summary>
        ///Порядок отображения
        ///</summary>
        [JsonProperty("order")]
        public Int64? Order {get; set;}

        ///<summary>
        ///Идентификатор раздела, к которому принадлежит достижение
        ///</summary>
        [JsonProperty("section")]
        public Int64? Section {get; set;}

        ///<summary>
        ///Локализованное поле section
        ///</summary>
        [JsonProperty("section_i18n")]
        public string SectionI18n {get; set;}
    }


    ///<summary>
    /// Информация об Энциклопедии
    /// https://ru.wargaming.net/developers/api_reference/wowp/encyclopedia/info/
    ///</summary>
    [Method(Url="api.worldofwarplanes.ru/wowp/encyclopedia/info/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wowp/encyclopedia/info/")]
    public class RequestWowpEncyclopediaInfo:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}
    }
    
    ///<summary>
    ///Информация об Энциклопедии
    ///</summary>
    public class ResponseWowpEncyclopediaInfo:IResponse
    {

        ///<summary>
        ///Дата обновления информации в Энциклопедии
        ///</summary>
        [JsonProperty("updated_at")]
        public int? UpdatedAt {get; set;}
    }


    ///<summary>
    /// Типы рейтингов
    /// https://ru.wargaming.net/developers/api_reference/wowp/ratings/types/
    ///</summary>
    [Method(Url="api.worldofwarplanes.ru/wowp/ratings/types/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wowp/ratings/types/")]
    public class RequestWowpRatingsTypes:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}
    }
    
    ///<summary>
    ///Типы рейтингов
    ///</summary>
    public class ResponseWowpRatingsTypes:IResponse
    {

        ///<summary>
        ///Категории рейтинга
        ///</summary>
        [JsonProperty("rank_fields")]
        public string[] RankFields {get; set;}

        ///<summary>
        ///Порог вхождения в рейтинг
        ///</summary>
        [JsonProperty("threshold")]
        public Int64? Threshold {get; set;}

        ///<summary>
        ///Период формирования рейтинга
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}
    }


    ///<summary>
    /// Рейтинги игрока
    /// https://ru.wargaming.net/developers/api_reference/wowp/ratings/accounts/
    ///</summary>
    [Method(Url="api.worldofwarplanes.ru/wowp/ratings/accounts/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wowp/ratings/accounts/")]
    public class RequestWowpRatingsAccounts:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Период формирования рейтинга
        ///string
        ///</summary>
        [JsonProperty("type")]
        [FieldIsMandatory]
        public string Type {get; set;}

        ///<summary>
        ///Дата расчёта рейтингов. Не больше, чем 7 дней до текущей даты; по умолчанию - вчера. Дата в формате UNIX timestamp или ISO 8601. Например, 1376542800 или 2013-08-15T00:00:00
        ///timestamp/date
        ///</summary>
        [JsonProperty("date")]
        public string Date {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификаторы аккаунтов игроков
        ///numeric, list
        ///</summary>
        [JsonProperty("account_id")]
        [FieldIsMandatory]
        public string AccountId {get; set;}
    }
    
    ///<summary>
    ///Рейтинги игрока
    ///</summary>
    public class ResponseWowpRatingsAccounts:IResponse
    {

        ///<summary>
        ///Идентификатор аккаунта игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Оставшееся количество боёв до участия в рейтингах
        ///</summary>
        [JsonProperty("battles_to_play")]
        public Int64? BattlesToPlay {get; set;}

        ///<summary>
        ///Количество проведённых боёв
        ///</summary>
        [JsonProperty("battles_count")]
        public WowpRatingsAccountsBattles_count BattlesCount {get; set;}

        ///<summary>
        ///Нанесено урона самолётам противника, в среднем за бой
        ///</summary>
        [JsonProperty("damage_avg")]
        public WowpRatingsAccountsDamage_avg DamageAvg {get; set;}

        ///<summary>
        ///Общий нанесённый урон по авиатехнике
        ///</summary>
        [JsonProperty("damage_dealt")]
        public WowpRatingsAccountsDamage_dealt DamageDealt {get; set;}

        ///<summary>
        ///Уничтожено самолётов, в среднем за бой
        ///</summary>
        [JsonProperty("frags_avg")]
        public WowpRatingsAccountsFrags_avg FragsAvg {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника
        ///</summary>
        [JsonProperty("frags_count")]
        public WowpRatingsAccountsFrags_count FragsCount {get; set;}

        ///<summary>
        ///Личный рейтинг
        ///</summary>
        [JsonProperty("global_rating")]
        public WowpRatingsAccountsGlobal_rating GlobalRating {get; set;}

        ///<summary>
        ///Нанесено урона объектам, в среднем за бой
        ///</summary>
        [JsonProperty("structure_damage_avg")]
        public WowpRatingsAccountsStructure_damage_avg StructureDamageAvg {get; set;}

        ///<summary>
        ///Разрушено объектов, в среднем за бой
        ///</summary>
        [JsonProperty("structure_destroyed_avg")]
        public WowpRatingsAccountsStructure_destroyed_avg StructureDestroyedAvg {get; set;}

        ///<summary>
        ///Общее количество разрушенных объектов
        ///</summary>
        [JsonProperty("structure_destroyed_count")]
        public WowpRatingsAccountsStructure_destroyed_count StructureDestroyedCount {get; set;}

        ///<summary>
        ///Процент выживаемости
        ///</summary>
        [JsonProperty("survived_ratio")]
        public WowpRatingsAccountsSurvived_ratio SurvivedRatio {get; set;}

        ///<summary>
        ///Общий нанесённый урон по объектам
        ///</summary>
        [JsonProperty("total_structure_damage")]
        public WowpRatingsAccountsTotal_structure_damage TotalStructureDamage {get; set;}

        ///<summary>
        ///Процент побед
        ///</summary>
        [JsonProperty("wins_ratio")]
        public WowpRatingsAccountsWins_ratio WinsRatio {get; set;}

        ///<summary>
        ///Суммарный опыт
        ///</summary>
        [JsonProperty("xp_amount")]
        public WowpRatingsAccountsXp_amount XpAmount {get; set;}

        ///<summary>
        ///Средний опыт за бой
        ///</summary>
        [JsonProperty("xp_avg")]
        public WowpRatingsAccountsXp_avg XpAvg {get; set;}

        ///<summary>
        ///Максимальный опыт за бой
        ///</summary>
        [JsonProperty("xp_max")]
        public WowpRatingsAccountsXp_max XpMax {get; set;}
    }
    public class WowpRatingsAccountsBattles_count
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WowpRatingsAccountsDamage_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WowpRatingsAccountsDamage_dealt
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WowpRatingsAccountsFrags_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WowpRatingsAccountsFrags_count
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WowpRatingsAccountsGlobal_rating
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WowpRatingsAccountsStructure_damage_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WowpRatingsAccountsStructure_destroyed_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WowpRatingsAccountsStructure_destroyed_count
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WowpRatingsAccountsSurvived_ratio
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WowpRatingsAccountsTotal_structure_damage
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WowpRatingsAccountsWins_ratio
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WowpRatingsAccountsXp_amount
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WowpRatingsAccountsXp_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WowpRatingsAccountsXp_max
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }



    ///<summary>
    /// Соседние позиции в рейтинге
    /// https://ru.wargaming.net/developers/api_reference/wowp/ratings/neighbors/
    ///</summary>
    [Method(Url="api.worldofwarplanes.ru/wowp/ratings/neighbors/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wowp/ratings/neighbors/")]
    public class RequestWowpRatingsNeighbors:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Период формирования рейтинга
        ///string
        ///</summary>
        [JsonProperty("type")]
        [FieldIsMandatory]
        public string Type {get; set;}

        ///<summary>
        ///Дата расчёта рейтингов. Не больше, чем 7 дней до текущей даты; по умолчанию - вчера. Дата в формате UNIX timestamp или ISO 8601. Например, 1376542800 или 2013-08-15T00:00:00
        ///timestamp/date
        ///</summary>
        [JsonProperty("date")]
        public string Date {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор аккаунта игрока
        ///numeric
        ///</summary>
        [JsonProperty("account_id")]
        [FieldIsMandatory]
        public string AccountId {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Категория рейтинга
        ///string
        ///</summary>
        [JsonProperty("rank_field")]
        [FieldIsMandatory]
        public string RankField {get; set;}

        ///<summary>
        ///Максимальное количество соседних позиций
        ///numeric
        ///</summary>
        [JsonProperty("limit")]
        public string Limit {get; set;}
    }
    
    ///<summary>
    ///Соседние позиции в рейтинге
    ///</summary>
    public class ResponseWowpRatingsNeighbors:IResponse
    {

        ///<summary>
        ///Идентификатор аккаунта игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Оставшееся количество боёв до участия в рейтингах
        ///</summary>
        [JsonProperty("battles_to_play")]
        public Int64? BattlesToPlay {get; set;}

        ///<summary>
        ///Количество проведённых боёв
        ///</summary>
        [JsonProperty("battles_count")]
        public WowpRatingsNeighborsBattles_count BattlesCount {get; set;}

        ///<summary>
        ///Нанесено урона самолётам противника, в среднем за бой
        ///</summary>
        [JsonProperty("damage_avg")]
        public WowpRatingsNeighborsDamage_avg DamageAvg {get; set;}

        ///<summary>
        ///Общий нанесённый урон по авиатехнике
        ///</summary>
        [JsonProperty("damage_dealt")]
        public WowpRatingsNeighborsDamage_dealt DamageDealt {get; set;}

        ///<summary>
        ///Уничтожено самолётов, в среднем за бой
        ///</summary>
        [JsonProperty("frags_avg")]
        public WowpRatingsNeighborsFrags_avg FragsAvg {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника
        ///</summary>
        [JsonProperty("frags_count")]
        public WowpRatingsNeighborsFrags_count FragsCount {get; set;}

        ///<summary>
        ///Личный рейтинг
        ///</summary>
        [JsonProperty("global_rating")]
        public WowpRatingsNeighborsGlobal_rating GlobalRating {get; set;}

        ///<summary>
        ///Нанесено урона объектам, в среднем за бой
        ///</summary>
        [JsonProperty("structure_damage_avg")]
        public WowpRatingsNeighborsStructure_damage_avg StructureDamageAvg {get; set;}

        ///<summary>
        ///Разрушено объектов, в среднем за бой
        ///</summary>
        [JsonProperty("structure_destroyed_avg")]
        public WowpRatingsNeighborsStructure_destroyed_avg StructureDestroyedAvg {get; set;}

        ///<summary>
        ///Общее количество разрушенных объектов
        ///</summary>
        [JsonProperty("structure_destroyed_count")]
        public WowpRatingsNeighborsStructure_destroyed_count StructureDestroyedCount {get; set;}

        ///<summary>
        ///Процент выживаемости
        ///</summary>
        [JsonProperty("survived_ratio")]
        public WowpRatingsNeighborsSurvived_ratio SurvivedRatio {get; set;}

        ///<summary>
        ///Общий нанесённый урон по объектам
        ///</summary>
        [JsonProperty("total_structure_damage")]
        public WowpRatingsNeighborsTotal_structure_damage TotalStructureDamage {get; set;}

        ///<summary>
        ///Процент побед
        ///</summary>
        [JsonProperty("wins_ratio")]
        public WowpRatingsNeighborsWins_ratio WinsRatio {get; set;}

        ///<summary>
        ///Суммарный опыт
        ///</summary>
        [JsonProperty("xp_amount")]
        public WowpRatingsNeighborsXp_amount XpAmount {get; set;}

        ///<summary>
        ///Средний опыт за бой
        ///</summary>
        [JsonProperty("xp_avg")]
        public WowpRatingsNeighborsXp_avg XpAvg {get; set;}

        ///<summary>
        ///Максимальный опыт за бой
        ///</summary>
        [JsonProperty("xp_max")]
        public WowpRatingsNeighborsXp_max XpMax {get; set;}
    }
    public class WowpRatingsNeighborsBattles_count
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WowpRatingsNeighborsDamage_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WowpRatingsNeighborsDamage_dealt
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WowpRatingsNeighborsFrags_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WowpRatingsNeighborsFrags_count
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WowpRatingsNeighborsGlobal_rating
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WowpRatingsNeighborsStructure_damage_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WowpRatingsNeighborsStructure_destroyed_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WowpRatingsNeighborsStructure_destroyed_count
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WowpRatingsNeighborsSurvived_ratio
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WowpRatingsNeighborsTotal_structure_damage
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WowpRatingsNeighborsWins_ratio
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WowpRatingsNeighborsXp_amount
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WowpRatingsNeighborsXp_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WowpRatingsNeighborsXp_max
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }



    ///<summary>
    /// Лучшие игроки
    /// https://ru.wargaming.net/developers/api_reference/wowp/ratings/top/
    ///</summary>
    [Method(Url="api.worldofwarplanes.ru/wowp/ratings/top/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wowp/ratings/top/")]
    public class RequestWowpRatingsTop:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Период формирования рейтинга
        ///string
        ///</summary>
        [JsonProperty("type")]
        [FieldIsMandatory]
        public string Type {get; set;}

        ///<summary>
        ///Дата расчёта рейтингов. Не больше, чем 7 дней до текущей даты; по умолчанию - вчера. Дата в формате UNIX timestamp или ISO 8601. Например, 1376542800 или 2013-08-15T00:00:00
        ///timestamp/date
        ///</summary>
        [JsonProperty("date")]
        public string Date {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Категория рейтинга
        ///string
        ///</summary>
        [JsonProperty("rank_field")]
        [FieldIsMandatory]
        public string RankField {get; set;}

        ///<summary>
        ///Максимальное количество игроков в списке
        ///numeric
        ///</summary>
        [JsonProperty("limit")]
        public string Limit {get; set;}

        ///<summary>
        ///Номер страницы результатов
        ///numeric
        ///</summary>
        [JsonProperty("page_no")]
        public string PageNo {get; set;}
    }
    
    ///<summary>
    ///Лучшие игроки
    ///</summary>
    public class ResponseWowpRatingsTop:IResponse
    {

        ///<summary>
        ///Идентификатор аккаунта игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Оставшееся количество боёв до участия в рейтингах
        ///</summary>
        [JsonProperty("battles_to_play")]
        public Int64? BattlesToPlay {get; set;}

        ///<summary>
        ///Количество проведённых боёв
        ///</summary>
        [JsonProperty("battles_count")]
        public WowpRatingsTopBattles_count BattlesCount {get; set;}

        ///<summary>
        ///Нанесено урона самолётам противника, в среднем за бой
        ///</summary>
        [JsonProperty("damage_avg")]
        public WowpRatingsTopDamage_avg DamageAvg {get; set;}

        ///<summary>
        ///Общий нанесённый урон по авиатехнике
        ///</summary>
        [JsonProperty("damage_dealt")]
        public WowpRatingsTopDamage_dealt DamageDealt {get; set;}

        ///<summary>
        ///Уничтожено самолётов, в среднем за бой
        ///</summary>
        [JsonProperty("frags_avg")]
        public WowpRatingsTopFrags_avg FragsAvg {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника
        ///</summary>
        [JsonProperty("frags_count")]
        public WowpRatingsTopFrags_count FragsCount {get; set;}

        ///<summary>
        ///Личный рейтинг
        ///</summary>
        [JsonProperty("global_rating")]
        public WowpRatingsTopGlobal_rating GlobalRating {get; set;}

        ///<summary>
        ///Нанесено урона объектам, в среднем за бой
        ///</summary>
        [JsonProperty("structure_damage_avg")]
        public WowpRatingsTopStructure_damage_avg StructureDamageAvg {get; set;}

        ///<summary>
        ///Разрушено объектов, в среднем за бой
        ///</summary>
        [JsonProperty("structure_destroyed_avg")]
        public WowpRatingsTopStructure_destroyed_avg StructureDestroyedAvg {get; set;}

        ///<summary>
        ///Общее количество разрушенных объектов
        ///</summary>
        [JsonProperty("structure_destroyed_count")]
        public WowpRatingsTopStructure_destroyed_count StructureDestroyedCount {get; set;}

        ///<summary>
        ///Процент выживаемости
        ///</summary>
        [JsonProperty("survived_ratio")]
        public WowpRatingsTopSurvived_ratio SurvivedRatio {get; set;}

        ///<summary>
        ///Общий нанесённый урон по объектам
        ///</summary>
        [JsonProperty("total_structure_damage")]
        public WowpRatingsTopTotal_structure_damage TotalStructureDamage {get; set;}

        ///<summary>
        ///Процент побед
        ///</summary>
        [JsonProperty("wins_ratio")]
        public WowpRatingsTopWins_ratio WinsRatio {get; set;}

        ///<summary>
        ///Суммарный опыт
        ///</summary>
        [JsonProperty("xp_amount")]
        public WowpRatingsTopXp_amount XpAmount {get; set;}

        ///<summary>
        ///Средний опыт за бой
        ///</summary>
        [JsonProperty("xp_avg")]
        public WowpRatingsTopXp_avg XpAvg {get; set;}

        ///<summary>
        ///Максимальный опыт за бой
        ///</summary>
        [JsonProperty("xp_max")]
        public WowpRatingsTopXp_max XpMax {get; set;}
    }
    public class WowpRatingsTopBattles_count
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WowpRatingsTopDamage_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WowpRatingsTopDamage_dealt
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WowpRatingsTopFrags_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WowpRatingsTopFrags_count
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WowpRatingsTopGlobal_rating
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WowpRatingsTopStructure_damage_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WowpRatingsTopStructure_destroyed_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WowpRatingsTopStructure_destroyed_count
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WowpRatingsTopSurvived_ratio
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WowpRatingsTopTotal_structure_damage
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WowpRatingsTopWins_ratio
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WowpRatingsTopXp_amount
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WowpRatingsTopXp_avg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WowpRatingsTopXp_max
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Изменение позиции в рейтинге
        ///</summary>
        [JsonProperty("rank_delta")]
        public Int64? RankDelta {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }



    ///<summary>
    /// Даты c доступными рейтингами
    /// https://ru.wargaming.net/developers/api_reference/wowp/ratings/dates/
    ///</summary>
    [Method(Url="api.worldofwarplanes.ru/wowp/ratings/dates/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wowp/ratings/dates/")]
    public class RequestWowpRatingsDates:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Период формирования рейтинга
        ///string
        ///</summary>
        [JsonProperty("type")]
        [FieldIsMandatory]
        public string Type {get; set;}

        ///<summary>
        ///Идентификатор аккаунта игрока
        ///numeric, list
        ///</summary>
        [JsonProperty("account_id")]
        public string AccountId {get; set;}
    }
    
    ///<summary>
    ///Даты c доступными рейтингами
    ///</summary>
    public class ResponseWowpRatingsDates:IResponse
    {

        ///<summary>
        ///Даты c доступными рейтингами
        ///</summary>
        [JsonProperty("dates")]
        public int[] Dates {get; set;}
    }


}

namespace WGClient.WorldOfWarships
{
    ///<summary>
    /// Игроки
    /// https://ru.wargaming.net/developers/api_reference/wows/account/list/
    ///</summary>
    [Method(Url="api.worldofwarships.ru/wows/account/list/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wows/account/list/")]
    public class RequestWowsAccountList:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"cs" — Čeština 
///"de" — Deutsch 
///"en" — English 
///"es" — Español 
///"fr" — Français 
///"ja" — 日本語 
///"pl" — Polski 
///"ru" — Русский (используется по умолчанию)
///"th" — ไทย 
///"zh-tw" — 繁體中文
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Тип поиска. Определяет минимальную длину строки поиска и вид поиска. По умолчанию используется значение startswith. Допустимые значения: 
///
///"startswith" — Поиск по первым символам имени игрока. Минимальная длина: 3 символа без учёта регистра. (используется по умолчанию)
///"exact" — Поиск по строгому соответствию имени игрока. Минимальная длина: 1 символ без учёта регистра.
        ///string
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Строка поиска по имени игрока. Вид поиска и минимальная длина строки поиска зависят от параметра type.
///        Максимальная длина: 24 символа.
        ///string
        ///</summary>
        [JsonProperty("search")]
        [FieldIsMandatory]
        public string Search {get; set;}

        ///<summary>
        ///Количество возвращаемых записей (может вернуться меньше записей, но не больше 100). Если переданный лимит превышает 100, тогда автоматически выставляется лимит в 100 (по умолчанию).
        ///numeric
        ///</summary>
        [JsonProperty("limit")]
        public string Limit {get; set;}
    }
    
    ///<summary>
    ///Игроки
    ///</summary>
    public class ResponseWowsAccountList:IResponse
    {

        ///<summary>
        ///Идентификатор аккаунта игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Имя игрока
        ///</summary>
        [JsonProperty("nickname")]
        public string Nickname {get; set;}
    }


    ///<summary>
    /// Персональные данные игрока
    /// https://ru.wargaming.net/developers/api_reference/wows/account/info/
    ///</summary>
    [Method(Url="api.worldofwarships.ru/wows/account/info/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wows/account/info/")]
    public class RequestWowsAccountInfo:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"cs" — Čeština 
///"de" — Deutsch 
///"en" — English 
///"es" — Español 
///"fr" — Français 
///"ja" — 日本語 
///"pl" — Polski 
///"ru" — Русский (используется по умолчанию)
///"th" — ไทย 
///"zh-tw" — 繁體中文
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Ключ доступа к персональным данным пользователя. Имеет срок действия. Для получения ключа доступа необходимо запросить аутентификацию.
        ///string
        ///</summary>
        [JsonProperty("access_token")]
        public string AccessToken {get; set;}

        ///<summary>
        ///Дополнительные поля, которые будут включены в ответ. Допустимые значения: 
///
///private.grouped_contacts
///private.port
///statistics.club
///statistics.pve
///statistics.pve_div2
///statistics.pve_div3
///statistics.pve_solo
///statistics.pvp_div2
///statistics.pvp_div3
///statistics.pvp_solo
///statistics.rank_div2
///statistics.rank_div3
///statistics.rank_solo
        ///string, list
        ///</summary>
        [JsonProperty("extra")]
        public string Extra {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор аккаунта игрока
        ///numeric, list
        ///</summary>
        [JsonProperty("account_id")]
        [FieldIsMandatory]
        public string AccountId {get; set;}
    }
    
    ///<summary>
    ///Персональные данные игрока
    ///</summary>
    public class ResponseWowsAccountInfo:IResponse
    {

        ///<summary>
        ///Идентификатор игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Дата создания аккаунта игрока
        ///</summary>
        [JsonProperty("created_at")]
        public int? CreatedAt {get; set;}

        ///<summary>
        ///Показывает, скрыт ли игровой профиль
        ///</summary>
        [JsonProperty("hidden_profile")]
        public bool HiddenProfile {get; set;}

        ///<summary>
        ///Время последнего боя
        ///</summary>
        [JsonProperty("last_battle_time")]
        public int? LastBattleTime {get; set;}

        ///<summary>
        ///Очки послужного списка
        ///</summary>
        [JsonProperty("leveling_points")]
        public Int64? LevelingPoints {get; set;}

        ///<summary>
        ///Уровень послужного списка
        ///</summary>
        [JsonProperty("leveling_tier")]
        public Int64? LevelingTier {get; set;}

        ///<summary>
        ///Время окончания последней игровой сессии
        ///</summary>
        [JsonProperty("logout_at")]
        public int? LogoutAt {get; set;}

        ///<summary>
        ///Имя игрока
        ///</summary>
        [JsonProperty("nickname")]
        public string Nickname {get; set;}

        ///<summary>
        ///Дата обновления статистики по игроку и кораблям игрока
        ///</summary>
        [JsonProperty("stats_updated_at")]
        public int? StatsUpdatedAt {get; set;}

        ///<summary>
        ///Дата обновления информации об игроке
        ///</summary>
        [JsonProperty("updated_at")]
        public int? UpdatedAt {get; set;}

        ///<summary>
        ///Приватные данные игрока
        ///</summary>
        [JsonProperty("private")]
        public WowsAccountInfoPrivate Private {get; set;}

        ///<summary>
        ///Статистика игрока
        ///</summary>
        [JsonProperty("statistics")]
        public WowsAccountInfoStatistics Statistics {get; set;}
    }
    public class WowsAccountInfoPrivate
    {

        ///<summary>
        ///Общее время в бою до уничтожения в секундах
        ///</summary>
        [JsonProperty("battle_life_time")]
        public Int64? BattleLifeTime {get; set;}

        ///<summary>
        ///Кредиты
        ///</summary>
        [JsonProperty("credits")]
        public Int64? Credits {get; set;}

        ///<summary>
        ///Количество свободных слотов в Порту
        ///</summary>
        [JsonProperty("empty_slots")]
        public Int64? EmptySlots {get; set;}

        ///<summary>
        ///Свободный опыт
        ///</summary>
        [JsonProperty("free_xp")]
        public Int64? FreeXp {get; set;}

        ///<summary>
        ///Золото
        ///</summary>
        [JsonProperty("gold")]
        public Int64? Gold {get; set;}

        ///<summary>
        ///Корабли в Порту.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("port")]
        public int[] Port {get; set;}

        ///<summary>
        ///Срок действия премиум аккаунта
        ///</summary>
        [JsonProperty("premium_expires_at")]
        public Int64? PremiumExpiresAt {get; set;}

        ///<summary>
        ///Количество слотов в Порту
        ///</summary>
        [JsonProperty("slots")]
        public Int64? Slots {get; set;}

        ///<summary>
        ///Группы контактов.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("grouped_contacts")]
        public WowsAccountInfoPrivateGrouped_contacts GroupedContacts {get; set;}
    }
    public class WowsAccountInfoPrivateGrouped_contacts
    {

        ///<summary>
        ///Заблокированные
        ///</summary>
        [JsonProperty("blocked")]
        public int[] Blocked {get; set;}

        ///<summary>
        ///Группы
        ///</summary>
        [JsonProperty("groups")]
        public Dictionary<string,string> Groups {get; set;}

        ///<summary>
        ///Не сгруппированные
        ///</summary>
        [JsonProperty("ungrouped")]
        public int[] Ungrouped {get; set;}
    }


    public class WowsAccountInfoStatistics
    {

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Пройдено миль
        ///</summary>
        [JsonProperty("distance")]
        public Int64? Distance {get; set;}

        ///<summary>
        ///Статистика в Командных боях.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("club")]
        public WowsAccountInfoStatisticsClub Club {get; set;}

        ///<summary>
        ///Статистика игрока в режиме кооперативных боёв.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("pve")]
        public WowsAccountInfoStatisticsPve Pve {get; set;}

        ///<summary>
        ///Статистика игрока в режиме кооперативных боёв в составе отряда из 2 игроков.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("pve_div2")]
        public WowsAccountInfoStatisticsPve_div2 PveDiv2 {get; set;}

        ///<summary>
        ///Статистика игрока в режиме кооперативных боёв в составе отряда из 3 игроков.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("pve_div3")]
        public WowsAccountInfoStatisticsPve_div3 PveDiv3 {get; set;}

        ///<summary>
        ///Статистика игрока в режиме кооперативных боёв не в составе отряда.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("pve_solo")]
        public WowsAccountInfoStatisticsPve_solo PveSolo {get; set;}

        ///<summary>
        ///Статистика игрока в режиме случайных боёв
        ///</summary>
        [JsonProperty("pvp")]
        public WowsAccountInfoStatisticsPvp Pvp {get; set;}

        ///<summary>
        ///Статистика игрока в режиме случайных боёв в составе отряда из 2 игроков.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("pvp_div2")]
        public WowsAccountInfoStatisticsPvp_div2 PvpDiv2 {get; set;}

        ///<summary>
        ///Статистика игрока в режиме случайных боёв в составе отряда из 3 игроков.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("pvp_div3")]
        public WowsAccountInfoStatisticsPvp_div3 PvpDiv3 {get; set;}

        ///<summary>
        ///Статистика игрока в режиме случайных боёв не в составе отряда.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("pvp_solo")]
        public WowsAccountInfoStatisticsPvp_solo PvpSolo {get; set;}

        ///<summary>
        ///Статистика игрока в ранговых боях в составе отряда из 2 игроков.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("rank_div2")]
        public WowsAccountInfoStatisticsRank_div2 RankDiv2 {get; set;}

        ///<summary>
        ///Статистика игрока в ранговых боях в составе отряда из 3 игроков.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("rank_div3")]
        public WowsAccountInfoStatisticsRank_div3 RankDiv3 {get; set;}

        ///<summary>
        ///Статистика игрока в ранговых боях не в составе отряда.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("rank_solo")]
        public WowsAccountInfoStatisticsRank_solo RankSolo {get; set;}
    }
    public class WowsAccountInfoStatisticsClub
    {

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt")]
        public Int64? MaxDamageDealt {get; set;}

        ///<summary>
        ///Корабль, на котором был нанесён максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt_ship_id")]
        public Int64? MaxDamageDealtShipId {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Максимальное количество сбитых самолётов за бой
        ///</summary>
        [JsonProperty("max_planes_killed")]
        public Int64? MaxPlanesKilled {get; set;}

        ///<summary>
        ///Корабль, на котором уничтожено максимальное количество самолётов противника
        ///</summary>
        [JsonProperty("max_planes_killed_ship_id")]
        public Int64? MaxPlanesKilledShipId {get; set;}

        ///<summary>
        ///Максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Корабль, на котором игрок заработал максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp_ship_id")]
        public Int64? MaxXpShipId {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника
        ///</summary>
        [JsonProperty("planes_killed")]
        public Int64? PlanesKilled {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Выжил в боях и победил
        ///</summary>
        [JsonProperty("survived_wins")]
        public Int64? SurvivedWins {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Общий опыт, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}

        ///<summary>
        ///Статистика использования авиации
        ///</summary>
        [JsonProperty("aircraft")]
        public WowsAccountInfoStatisticsClubAircraft Aircraft {get; set;}

        ///<summary>
        ///Статистика стрельбы главным калибром
        ///</summary>
        [JsonProperty("main_battery")]
        public WowsAccountInfoStatisticsClubMain_battery MainBattery {get; set;}

        ///<summary>
        ///Статистика использования тарана
        ///</summary>
        [JsonProperty("ramming")]
        public WowsAccountInfoStatisticsClubRamming Ramming {get; set;}

        ///<summary>
        ///Статистика стрельбы вспомогательным калибром
        ///</summary>
        [JsonProperty("second_battery")]
        public WowsAccountInfoStatisticsClubSecond_battery SecondBattery {get; set;}

        ///<summary>
        ///Статистика стрельбы торпедами
        ///</summary>
        [JsonProperty("torpedoes")]
        public WowsAccountInfoStatisticsClubTorpedoes Torpedoes {get; set;}
    }
    public class WowsAccountInfoStatisticsClubAircraft
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}
    }

    public class WowsAccountInfoStatisticsClubMain_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsAccountInfoStatisticsClubRamming
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}
    }

    public class WowsAccountInfoStatisticsClubSecond_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsAccountInfoStatisticsClubTorpedoes
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }


    public class WowsAccountInfoStatisticsPve
    {

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt")]
        public Int64? MaxDamageDealt {get; set;}

        ///<summary>
        ///Корабль, на котором был нанесён максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt_ship_id")]
        public Int64? MaxDamageDealtShipId {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Максимальное количество сбитых самолётов за бой
        ///</summary>
        [JsonProperty("max_planes_killed")]
        public Int64? MaxPlanesKilled {get; set;}

        ///<summary>
        ///Корабль, на котором уничтожено максимальное количество самолётов противника
        ///</summary>
        [JsonProperty("max_planes_killed_ship_id")]
        public Int64? MaxPlanesKilledShipId {get; set;}

        ///<summary>
        ///Максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Корабль, на котором игрок заработал максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp_ship_id")]
        public Int64? MaxXpShipId {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника
        ///</summary>
        [JsonProperty("planes_killed")]
        public Int64? PlanesKilled {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Выжил в боях и победил
        ///</summary>
        [JsonProperty("survived_wins")]
        public Int64? SurvivedWins {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Общий опыт, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}

        ///<summary>
        ///Статистика использования авиации
        ///</summary>
        [JsonProperty("aircraft")]
        public WowsAccountInfoStatisticsPveAircraft Aircraft {get; set;}

        ///<summary>
        ///Статистика стрельбы главным калибром
        ///</summary>
        [JsonProperty("main_battery")]
        public WowsAccountInfoStatisticsPveMain_battery MainBattery {get; set;}

        ///<summary>
        ///Статистика использования тарана
        ///</summary>
        [JsonProperty("ramming")]
        public WowsAccountInfoStatisticsPveRamming Ramming {get; set;}

        ///<summary>
        ///Статистика стрельбы вспомогательным калибром
        ///</summary>
        [JsonProperty("second_battery")]
        public WowsAccountInfoStatisticsPveSecond_battery SecondBattery {get; set;}

        ///<summary>
        ///Статистика стрельбы торпедами
        ///</summary>
        [JsonProperty("torpedoes")]
        public WowsAccountInfoStatisticsPveTorpedoes Torpedoes {get; set;}
    }
    public class WowsAccountInfoStatisticsPveAircraft
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}
    }

    public class WowsAccountInfoStatisticsPveMain_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsAccountInfoStatisticsPveRamming
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}
    }

    public class WowsAccountInfoStatisticsPveSecond_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsAccountInfoStatisticsPveTorpedoes
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }


    public class WowsAccountInfoStatisticsPve_div2
    {

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt")]
        public Int64? MaxDamageDealt {get; set;}

        ///<summary>
        ///Корабль, на котором был нанесён максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt_ship_id")]
        public Int64? MaxDamageDealtShipId {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Максимальное количество сбитых самолётов за бой
        ///</summary>
        [JsonProperty("max_planes_killed")]
        public Int64? MaxPlanesKilled {get; set;}

        ///<summary>
        ///Корабль, на котором уничтожено максимальное количество самолётов противника
        ///</summary>
        [JsonProperty("max_planes_killed_ship_id")]
        public Int64? MaxPlanesKilledShipId {get; set;}

        ///<summary>
        ///Максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Корабль, на котором игрок заработал максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp_ship_id")]
        public Int64? MaxXpShipId {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника
        ///</summary>
        [JsonProperty("planes_killed")]
        public Int64? PlanesKilled {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Выжил в боях и победил
        ///</summary>
        [JsonProperty("survived_wins")]
        public Int64? SurvivedWins {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Общий опыт, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}

        ///<summary>
        ///Статистика использования авиации
        ///</summary>
        [JsonProperty("aircraft")]
        public WowsAccountInfoStatisticsPve_div2Aircraft Aircraft {get; set;}

        ///<summary>
        ///Статистика стрельбы главным калибром
        ///</summary>
        [JsonProperty("main_battery")]
        public WowsAccountInfoStatisticsPve_div2Main_battery MainBattery {get; set;}

        ///<summary>
        ///Статистика использования тарана
        ///</summary>
        [JsonProperty("ramming")]
        public WowsAccountInfoStatisticsPve_div2Ramming Ramming {get; set;}

        ///<summary>
        ///Статистика стрельбы вспомогательным калибром
        ///</summary>
        [JsonProperty("second_battery")]
        public WowsAccountInfoStatisticsPve_div2Second_battery SecondBattery {get; set;}

        ///<summary>
        ///Статистика стрельбы торпедами
        ///</summary>
        [JsonProperty("torpedoes")]
        public WowsAccountInfoStatisticsPve_div2Torpedoes Torpedoes {get; set;}
    }
    public class WowsAccountInfoStatisticsPve_div2Aircraft
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}
    }

    public class WowsAccountInfoStatisticsPve_div2Main_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsAccountInfoStatisticsPve_div2Ramming
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}
    }

    public class WowsAccountInfoStatisticsPve_div2Second_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsAccountInfoStatisticsPve_div2Torpedoes
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }


    public class WowsAccountInfoStatisticsPve_div3
    {

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt")]
        public Int64? MaxDamageDealt {get; set;}

        ///<summary>
        ///Корабль, на котором был нанесён максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt_ship_id")]
        public Int64? MaxDamageDealtShipId {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Максимальное количество сбитых самолётов за бой
        ///</summary>
        [JsonProperty("max_planes_killed")]
        public Int64? MaxPlanesKilled {get; set;}

        ///<summary>
        ///Корабль, на котором уничтожено максимальное количество самолётов противника
        ///</summary>
        [JsonProperty("max_planes_killed_ship_id")]
        public Int64? MaxPlanesKilledShipId {get; set;}

        ///<summary>
        ///Максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Корабль, на котором игрок заработал максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp_ship_id")]
        public Int64? MaxXpShipId {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника
        ///</summary>
        [JsonProperty("planes_killed")]
        public Int64? PlanesKilled {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Выжил в боях и победил
        ///</summary>
        [JsonProperty("survived_wins")]
        public Int64? SurvivedWins {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Общий опыт, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}

        ///<summary>
        ///Статистика использования авиации
        ///</summary>
        [JsonProperty("aircraft")]
        public WowsAccountInfoStatisticsPve_div3Aircraft Aircraft {get; set;}

        ///<summary>
        ///Статистика стрельбы главным калибром
        ///</summary>
        [JsonProperty("main_battery")]
        public WowsAccountInfoStatisticsPve_div3Main_battery MainBattery {get; set;}

        ///<summary>
        ///Статистика использования тарана
        ///</summary>
        [JsonProperty("ramming")]
        public WowsAccountInfoStatisticsPve_div3Ramming Ramming {get; set;}

        ///<summary>
        ///Статистика стрельбы вспомогательным калибром
        ///</summary>
        [JsonProperty("second_battery")]
        public WowsAccountInfoStatisticsPve_div3Second_battery SecondBattery {get; set;}

        ///<summary>
        ///Статистика стрельбы торпедами
        ///</summary>
        [JsonProperty("torpedoes")]
        public WowsAccountInfoStatisticsPve_div3Torpedoes Torpedoes {get; set;}
    }
    public class WowsAccountInfoStatisticsPve_div3Aircraft
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}
    }

    public class WowsAccountInfoStatisticsPve_div3Main_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsAccountInfoStatisticsPve_div3Ramming
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}
    }

    public class WowsAccountInfoStatisticsPve_div3Second_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsAccountInfoStatisticsPve_div3Torpedoes
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }


    public class WowsAccountInfoStatisticsPve_solo
    {

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt")]
        public Int64? MaxDamageDealt {get; set;}

        ///<summary>
        ///Корабль, на котором был нанесён максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt_ship_id")]
        public Int64? MaxDamageDealtShipId {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Максимальное количество сбитых самолётов за бой
        ///</summary>
        [JsonProperty("max_planes_killed")]
        public Int64? MaxPlanesKilled {get; set;}

        ///<summary>
        ///Корабль, на котором уничтожено максимальное количество самолётов противника
        ///</summary>
        [JsonProperty("max_planes_killed_ship_id")]
        public Int64? MaxPlanesKilledShipId {get; set;}

        ///<summary>
        ///Максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Корабль, на котором игрок заработал максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp_ship_id")]
        public Int64? MaxXpShipId {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника
        ///</summary>
        [JsonProperty("planes_killed")]
        public Int64? PlanesKilled {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Выжил в боях и победил
        ///</summary>
        [JsonProperty("survived_wins")]
        public Int64? SurvivedWins {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Общий опыт, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}

        ///<summary>
        ///Статистика использования авиации
        ///</summary>
        [JsonProperty("aircraft")]
        public WowsAccountInfoStatisticsPve_soloAircraft Aircraft {get; set;}

        ///<summary>
        ///Статистика стрельбы главным калибром
        ///</summary>
        [JsonProperty("main_battery")]
        public WowsAccountInfoStatisticsPve_soloMain_battery MainBattery {get; set;}

        ///<summary>
        ///Статистика использования тарана
        ///</summary>
        [JsonProperty("ramming")]
        public WowsAccountInfoStatisticsPve_soloRamming Ramming {get; set;}

        ///<summary>
        ///Статистика стрельбы вспомогательным калибром
        ///</summary>
        [JsonProperty("second_battery")]
        public WowsAccountInfoStatisticsPve_soloSecond_battery SecondBattery {get; set;}

        ///<summary>
        ///Статистика стрельбы торпедами
        ///</summary>
        [JsonProperty("torpedoes")]
        public WowsAccountInfoStatisticsPve_soloTorpedoes Torpedoes {get; set;}
    }
    public class WowsAccountInfoStatisticsPve_soloAircraft
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}
    }

    public class WowsAccountInfoStatisticsPve_soloMain_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsAccountInfoStatisticsPve_soloRamming
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}
    }

    public class WowsAccountInfoStatisticsPve_soloSecond_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsAccountInfoStatisticsPve_soloTorpedoes
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }


    public class WowsAccountInfoStatisticsPvp
    {

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt")]
        public Int64? MaxDamageDealt {get; set;}

        ///<summary>
        ///Корабль, на котором был нанесён максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt_ship_id")]
        public Int64? MaxDamageDealtShipId {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Максимальное количество сбитых самолётов за бой
        ///</summary>
        [JsonProperty("max_planes_killed")]
        public Int64? MaxPlanesKilled {get; set;}

        ///<summary>
        ///Корабль, на котором уничтожено максимальное количество самолётов противника
        ///</summary>
        [JsonProperty("max_planes_killed_ship_id")]
        public Int64? MaxPlanesKilledShipId {get; set;}

        ///<summary>
        ///Максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Корабль, на котором игрок заработал максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp_ship_id")]
        public Int64? MaxXpShipId {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника
        ///</summary>
        [JsonProperty("planes_killed")]
        public Int64? PlanesKilled {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Выжил в боях и победил
        ///</summary>
        [JsonProperty("survived_wins")]
        public Int64? SurvivedWins {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Общий опыт, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}

        ///<summary>
        ///Статистика использования авиации
        ///</summary>
        [JsonProperty("aircraft")]
        public WowsAccountInfoStatisticsPvpAircraft Aircraft {get; set;}

        ///<summary>
        ///Статистика стрельбы главным калибром
        ///</summary>
        [JsonProperty("main_battery")]
        public WowsAccountInfoStatisticsPvpMain_battery MainBattery {get; set;}

        ///<summary>
        ///Статистика использования тарана
        ///</summary>
        [JsonProperty("ramming")]
        public WowsAccountInfoStatisticsPvpRamming Ramming {get; set;}

        ///<summary>
        ///Статистика стрельбы вспомогательным калибром
        ///</summary>
        [JsonProperty("second_battery")]
        public WowsAccountInfoStatisticsPvpSecond_battery SecondBattery {get; set;}

        ///<summary>
        ///Статистика стрельбы торпедами
        ///</summary>
        [JsonProperty("torpedoes")]
        public WowsAccountInfoStatisticsPvpTorpedoes Torpedoes {get; set;}
    }
    public class WowsAccountInfoStatisticsPvpAircraft
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}
    }

    public class WowsAccountInfoStatisticsPvpMain_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsAccountInfoStatisticsPvpRamming
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}
    }

    public class WowsAccountInfoStatisticsPvpSecond_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsAccountInfoStatisticsPvpTorpedoes
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }


    public class WowsAccountInfoStatisticsPvp_div2
    {

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt")]
        public Int64? MaxDamageDealt {get; set;}

        ///<summary>
        ///Корабль, на котором был нанесён максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt_ship_id")]
        public Int64? MaxDamageDealtShipId {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Максимальное количество сбитых самолётов за бой
        ///</summary>
        [JsonProperty("max_planes_killed")]
        public Int64? MaxPlanesKilled {get; set;}

        ///<summary>
        ///Корабль, на котором уничтожено максимальное количество самолётов противника
        ///</summary>
        [JsonProperty("max_planes_killed_ship_id")]
        public Int64? MaxPlanesKilledShipId {get; set;}

        ///<summary>
        ///Максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Корабль, на котором игрок заработал максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp_ship_id")]
        public Int64? MaxXpShipId {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника
        ///</summary>
        [JsonProperty("planes_killed")]
        public Int64? PlanesKilled {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Выжил в боях и победил
        ///</summary>
        [JsonProperty("survived_wins")]
        public Int64? SurvivedWins {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Общий опыт, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}

        ///<summary>
        ///Статистика использования авиации
        ///</summary>
        [JsonProperty("aircraft")]
        public WowsAccountInfoStatisticsPvp_div2Aircraft Aircraft {get; set;}

        ///<summary>
        ///Статистика стрельбы главным калибром
        ///</summary>
        [JsonProperty("main_battery")]
        public WowsAccountInfoStatisticsPvp_div2Main_battery MainBattery {get; set;}

        ///<summary>
        ///Статистика использования тарана
        ///</summary>
        [JsonProperty("ramming")]
        public WowsAccountInfoStatisticsPvp_div2Ramming Ramming {get; set;}

        ///<summary>
        ///Статистика стрельбы вспомогательным калибром
        ///</summary>
        [JsonProperty("second_battery")]
        public WowsAccountInfoStatisticsPvp_div2Second_battery SecondBattery {get; set;}

        ///<summary>
        ///Статистика стрельбы торпедами
        ///</summary>
        [JsonProperty("torpedoes")]
        public WowsAccountInfoStatisticsPvp_div2Torpedoes Torpedoes {get; set;}
    }
    public class WowsAccountInfoStatisticsPvp_div2Aircraft
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}
    }

    public class WowsAccountInfoStatisticsPvp_div2Main_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsAccountInfoStatisticsPvp_div2Ramming
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}
    }

    public class WowsAccountInfoStatisticsPvp_div2Second_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsAccountInfoStatisticsPvp_div2Torpedoes
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }


    public class WowsAccountInfoStatisticsPvp_div3
    {

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt")]
        public Int64? MaxDamageDealt {get; set;}

        ///<summary>
        ///Корабль, на котором был нанесён максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt_ship_id")]
        public Int64? MaxDamageDealtShipId {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Максимальное количество сбитых самолётов за бой
        ///</summary>
        [JsonProperty("max_planes_killed")]
        public Int64? MaxPlanesKilled {get; set;}

        ///<summary>
        ///Корабль, на котором уничтожено максимальное количество самолётов противника
        ///</summary>
        [JsonProperty("max_planes_killed_ship_id")]
        public Int64? MaxPlanesKilledShipId {get; set;}

        ///<summary>
        ///Максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Корабль, на котором игрок заработал максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp_ship_id")]
        public Int64? MaxXpShipId {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника
        ///</summary>
        [JsonProperty("planes_killed")]
        public Int64? PlanesKilled {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Выжил в боях и победил
        ///</summary>
        [JsonProperty("survived_wins")]
        public Int64? SurvivedWins {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Общий опыт, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}

        ///<summary>
        ///Статистика использования авиации
        ///</summary>
        [JsonProperty("aircraft")]
        public WowsAccountInfoStatisticsPvp_div3Aircraft Aircraft {get; set;}

        ///<summary>
        ///Статистика стрельбы главным калибром
        ///</summary>
        [JsonProperty("main_battery")]
        public WowsAccountInfoStatisticsPvp_div3Main_battery MainBattery {get; set;}

        ///<summary>
        ///Статистика использования тарана
        ///</summary>
        [JsonProperty("ramming")]
        public WowsAccountInfoStatisticsPvp_div3Ramming Ramming {get; set;}

        ///<summary>
        ///Статистика стрельбы вспомогательным калибром
        ///</summary>
        [JsonProperty("second_battery")]
        public WowsAccountInfoStatisticsPvp_div3Second_battery SecondBattery {get; set;}

        ///<summary>
        ///Статистика стрельбы торпедами
        ///</summary>
        [JsonProperty("torpedoes")]
        public WowsAccountInfoStatisticsPvp_div3Torpedoes Torpedoes {get; set;}
    }
    public class WowsAccountInfoStatisticsPvp_div3Aircraft
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}
    }

    public class WowsAccountInfoStatisticsPvp_div3Main_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsAccountInfoStatisticsPvp_div3Ramming
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}
    }

    public class WowsAccountInfoStatisticsPvp_div3Second_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsAccountInfoStatisticsPvp_div3Torpedoes
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }


    public class WowsAccountInfoStatisticsPvp_solo
    {

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt")]
        public Int64? MaxDamageDealt {get; set;}

        ///<summary>
        ///Корабль, на котором был нанесён максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt_ship_id")]
        public Int64? MaxDamageDealtShipId {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Максимальное количество сбитых самолётов за бой
        ///</summary>
        [JsonProperty("max_planes_killed")]
        public Int64? MaxPlanesKilled {get; set;}

        ///<summary>
        ///Корабль, на котором уничтожено максимальное количество самолётов противника
        ///</summary>
        [JsonProperty("max_planes_killed_ship_id")]
        public Int64? MaxPlanesKilledShipId {get; set;}

        ///<summary>
        ///Максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Корабль, на котором игрок заработал максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp_ship_id")]
        public Int64? MaxXpShipId {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника
        ///</summary>
        [JsonProperty("planes_killed")]
        public Int64? PlanesKilled {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Выжил в боях и победил
        ///</summary>
        [JsonProperty("survived_wins")]
        public Int64? SurvivedWins {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Общий опыт, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}

        ///<summary>
        ///Статистика использования авиации
        ///</summary>
        [JsonProperty("aircraft")]
        public WowsAccountInfoStatisticsPvp_soloAircraft Aircraft {get; set;}

        ///<summary>
        ///Статистика стрельбы главным калибром
        ///</summary>
        [JsonProperty("main_battery")]
        public WowsAccountInfoStatisticsPvp_soloMain_battery MainBattery {get; set;}

        ///<summary>
        ///Статистика использования тарана
        ///</summary>
        [JsonProperty("ramming")]
        public WowsAccountInfoStatisticsPvp_soloRamming Ramming {get; set;}

        ///<summary>
        ///Статистика стрельбы вспомогательным калибром
        ///</summary>
        [JsonProperty("second_battery")]
        public WowsAccountInfoStatisticsPvp_soloSecond_battery SecondBattery {get; set;}

        ///<summary>
        ///Статистика стрельбы торпедами
        ///</summary>
        [JsonProperty("torpedoes")]
        public WowsAccountInfoStatisticsPvp_soloTorpedoes Torpedoes {get; set;}
    }
    public class WowsAccountInfoStatisticsPvp_soloAircraft
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}
    }

    public class WowsAccountInfoStatisticsPvp_soloMain_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsAccountInfoStatisticsPvp_soloRamming
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}
    }

    public class WowsAccountInfoStatisticsPvp_soloSecond_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsAccountInfoStatisticsPvp_soloTorpedoes
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }


    public class WowsAccountInfoStatisticsRank_div2
    {

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Количество нанесённых повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt")]
        public Int64? MaxDamageDealt {get; set;}

        ///<summary>
        ///Корабль, на котором был нанесён максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt_ship_id")]
        public Int64? MaxDamageDealtShipId {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Максимальное количество сбитых самолётов за бой
        ///</summary>
        [JsonProperty("max_planes_killed")]
        public Int64? MaxPlanesKilled {get; set;}

        ///<summary>
        ///Корабль, на котором уничтожено максимальное количество самолётов противника
        ///</summary>
        [JsonProperty("max_planes_killed_ship_id")]
        public Int64? MaxPlanesKilledShipId {get; set;}

        ///<summary>
        ///Максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Корабль, на котором игрок заработал максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp_ship_id")]
        public Int64? MaxXpShipId {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника
        ///</summary>
        [JsonProperty("planes_killed")]
        public Int64? PlanesKilled {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Выжил в боях и победил
        ///</summary>
        [JsonProperty("survived_wins")]
        public Int64? SurvivedWins {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Общий опыт, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}

        ///<summary>
        ///Статистика использования авиации
        ///</summary>
        [JsonProperty("aircraft")]
        public WowsAccountInfoStatisticsRank_div2Aircraft Aircraft {get; set;}

        ///<summary>
        ///Статистика стрельбы главным калибром
        ///</summary>
        [JsonProperty("main_battery")]
        public WowsAccountInfoStatisticsRank_div2Main_battery MainBattery {get; set;}

        ///<summary>
        ///Статистика использования тарана
        ///</summary>
        [JsonProperty("ramming")]
        public WowsAccountInfoStatisticsRank_div2Ramming Ramming {get; set;}

        ///<summary>
        ///Статистика стрельбы вспомогательным калибром
        ///</summary>
        [JsonProperty("second_battery")]
        public WowsAccountInfoStatisticsRank_div2Second_battery SecondBattery {get; set;}

        ///<summary>
        ///Статистика стрельбы торпедами
        ///</summary>
        [JsonProperty("torpedoes")]
        public WowsAccountInfoStatisticsRank_div2Torpedoes Torpedoes {get; set;}
    }
    public class WowsAccountInfoStatisticsRank_div2Aircraft
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}
    }

    public class WowsAccountInfoStatisticsRank_div2Main_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsAccountInfoStatisticsRank_div2Ramming
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}
    }

    public class WowsAccountInfoStatisticsRank_div2Second_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsAccountInfoStatisticsRank_div2Torpedoes
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }


    public class WowsAccountInfoStatisticsRank_div3
    {

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Количество нанесённых повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt")]
        public Int64? MaxDamageDealt {get; set;}

        ///<summary>
        ///Корабль, на котором был нанесён максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt_ship_id")]
        public Int64? MaxDamageDealtShipId {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Максимальное количество сбитых самолётов за бой
        ///</summary>
        [JsonProperty("max_planes_killed")]
        public Int64? MaxPlanesKilled {get; set;}

        ///<summary>
        ///Корабль, на котором уничтожено максимальное количество самолётов противника
        ///</summary>
        [JsonProperty("max_planes_killed_ship_id")]
        public Int64? MaxPlanesKilledShipId {get; set;}

        ///<summary>
        ///Максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Корабль, на котором игрок заработал максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp_ship_id")]
        public Int64? MaxXpShipId {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника
        ///</summary>
        [JsonProperty("planes_killed")]
        public Int64? PlanesKilled {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Выжил в боях и победил
        ///</summary>
        [JsonProperty("survived_wins")]
        public Int64? SurvivedWins {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Общий опыт, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}

        ///<summary>
        ///Статистика использования авиации
        ///</summary>
        [JsonProperty("aircraft")]
        public WowsAccountInfoStatisticsRank_div3Aircraft Aircraft {get; set;}

        ///<summary>
        ///Статистика стрельбы главным калибром
        ///</summary>
        [JsonProperty("main_battery")]
        public WowsAccountInfoStatisticsRank_div3Main_battery MainBattery {get; set;}

        ///<summary>
        ///Статистика использования тарана
        ///</summary>
        [JsonProperty("ramming")]
        public WowsAccountInfoStatisticsRank_div3Ramming Ramming {get; set;}

        ///<summary>
        ///Статистика стрельбы вспомогательным калибром
        ///</summary>
        [JsonProperty("second_battery")]
        public WowsAccountInfoStatisticsRank_div3Second_battery SecondBattery {get; set;}

        ///<summary>
        ///Статистика стрельбы торпедами
        ///</summary>
        [JsonProperty("torpedoes")]
        public WowsAccountInfoStatisticsRank_div3Torpedoes Torpedoes {get; set;}
    }
    public class WowsAccountInfoStatisticsRank_div3Aircraft
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}
    }

    public class WowsAccountInfoStatisticsRank_div3Main_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsAccountInfoStatisticsRank_div3Ramming
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}
    }

    public class WowsAccountInfoStatisticsRank_div3Second_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsAccountInfoStatisticsRank_div3Torpedoes
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }


    public class WowsAccountInfoStatisticsRank_solo
    {

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Количество нанесённых повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt")]
        public Int64? MaxDamageDealt {get; set;}

        ///<summary>
        ///Корабль, на котором был нанесён максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt_ship_id")]
        public Int64? MaxDamageDealtShipId {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Максимальное количество сбитых самолётов за бой
        ///</summary>
        [JsonProperty("max_planes_killed")]
        public Int64? MaxPlanesKilled {get; set;}

        ///<summary>
        ///Корабль, на котором уничтожено максимальное количество самолётов противника
        ///</summary>
        [JsonProperty("max_planes_killed_ship_id")]
        public Int64? MaxPlanesKilledShipId {get; set;}

        ///<summary>
        ///Максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Корабль, на котором игрок заработал максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp_ship_id")]
        public Int64? MaxXpShipId {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника
        ///</summary>
        [JsonProperty("planes_killed")]
        public Int64? PlanesKilled {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Выжил в боях и победил
        ///</summary>
        [JsonProperty("survived_wins")]
        public Int64? SurvivedWins {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Общий опыт, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}

        ///<summary>
        ///Статистика использования авиации
        ///</summary>
        [JsonProperty("aircraft")]
        public WowsAccountInfoStatisticsRank_soloAircraft Aircraft {get; set;}

        ///<summary>
        ///Статистика стрельбы главным калибром
        ///</summary>
        [JsonProperty("main_battery")]
        public WowsAccountInfoStatisticsRank_soloMain_battery MainBattery {get; set;}

        ///<summary>
        ///Статистика использования тарана
        ///</summary>
        [JsonProperty("ramming")]
        public WowsAccountInfoStatisticsRank_soloRamming Ramming {get; set;}

        ///<summary>
        ///Статистика стрельбы вспомогательным калибром
        ///</summary>
        [JsonProperty("second_battery")]
        public WowsAccountInfoStatisticsRank_soloSecond_battery SecondBattery {get; set;}

        ///<summary>
        ///Статистика стрельбы торпедами
        ///</summary>
        [JsonProperty("torpedoes")]
        public WowsAccountInfoStatisticsRank_soloTorpedoes Torpedoes {get; set;}
    }
    public class WowsAccountInfoStatisticsRank_soloAircraft
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}
    }

    public class WowsAccountInfoStatisticsRank_soloMain_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsAccountInfoStatisticsRank_soloRamming
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}
    }

    public class WowsAccountInfoStatisticsRank_soloSecond_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsAccountInfoStatisticsRank_soloTorpedoes
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Идентификатор корабля с максимальным показателем потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_ship_id")]
        public Int64? MaxFragsShipId {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }





    ///<summary>
    /// Достижения игрока
    /// https://ru.wargaming.net/developers/api_reference/wows/account/achievements/
    ///</summary>
    [Method(Url="api.worldofwarships.ru/wows/account/achievements/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wows/account/achievements/")]
    public class RequestWowsAccountAchievements:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"cs" — Čeština 
///"de" — Deutsch 
///"en" — English 
///"es" — Español 
///"fr" — Français 
///"ja" — 日本語 
///"pl" — Polski 
///"ru" — Русский (используется по умолчанию)
///"th" — ไทย 
///"zh-tw" — 繁體中文
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Ключ доступа к персональным данным пользователя. Имеет срок действия. Для получения ключа доступа необходимо запросить аутентификацию.
        ///string
        ///</summary>
        [JsonProperty("access_token")]
        public string AccessToken {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор аккаунта игрока
        ///numeric, list
        ///</summary>
        [JsonProperty("account_id")]
        [FieldIsMandatory]
        public string AccountId {get; set;}
    }
    
    ///<summary>
    ///Достижения игрока
    ///</summary>
    public class ResponseWowsAccountAchievements:IResponse
    {

        ///<summary>
        ///Полученные боевые достижения
        ///</summary>
        [JsonProperty("battle")]
        public Dictionary<string,string> Battle {get; set;}
    }


    ///<summary>
    /// Внимание! Метод работает в тестовом режиме.
    /// Статистика игрока по дате
    /// https://ru.wargaming.net/developers/api_reference/wows/account/statsbydate/
    ///</summary>
    [Method(Url="api.worldofwarships.ru/wows/account/statsbydate/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wows/account/statsbydate/")]
    public class RequestWowsAccountStatsbydate:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"cs" — Čeština 
///"de" — Deutsch 
///"en" — English 
///"es" — Español 
///"fr" — Français 
///"ja" — 日本語 
///"pl" — Polski 
///"ru" — Русский (используется по умолчанию)
///"th" — ไทย 
///"zh-tw" — 繁體中文
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Ключ доступа к персональным данным пользователя. Имеет срок действия. Для получения ключа доступа необходимо запросить аутентификацию.
        ///string
        ///</summary>
        [JsonProperty("access_token")]
        public string AccessToken {get; set;}

        ///<summary>
        ///Дополнительные поля, которые будут включены в ответ. Допустимые значения: 
///
///pve
        ///string, list
        ///</summary>
        [JsonProperty("extra")]
        public string Extra {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор аккаунта игрока
        ///numeric
        ///</summary>
        [JsonProperty("account_id")]
        [FieldIsMandatory]
        public string AccountId {get; set;}

        ///<summary>
        ///Список дат, за которые возвращаются срезы статистики. Формат: YYYYMMDD. Максимальный диапазон дат: 28 дней с текущей даты. Срез статистики за вчерашний день возвращается по умолчанию. Максимальное ограничение: 10.
        ///string, list
        ///</summary>
        [JsonProperty("dates")]
        public string Dates {get; set;}
    }
    
    ///<summary>
    ///Статистика игрока по дате
    ///</summary>
    public class ResponseWowsAccountStatsbydate:IResponse
    {

        ///<summary>
        ///Статистика в режиме кооперативных боёв.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("pve")]
        public WowsAccountStatsbydatePve Pve {get; set;}

        ///<summary>
        ///Статистика в режиме случайных боёв
        ///</summary>
        [JsonProperty("pvp")]
        public WowsAccountStatsbydatePvp Pvp {get; set;}
    }
    public class WowsAccountStatsbydatePve
    {

        ///<summary>
        ///Идентификатор аккаунта игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Тип боя
        ///</summary>
        [JsonProperty("battle_type")]
        public string BattleType {get; set;}

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Нанесённый урон
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Дата в формате "%Y%m%d"
        ///</summary>
        [JsonProperty("date")]
        public string Date {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Количество уничтоженной техники
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника
        ///</summary>
        [JsonProperty("planes_killed")]
        public Int64? PlanesKilled {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Общий опыт, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}
    }

    public class WowsAccountStatsbydatePvp
    {

        ///<summary>
        ///Идентификатор аккаунта игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Тип боя
        ///</summary>
        [JsonProperty("battle_type")]
        public string BattleType {get; set;}

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Нанесённый урон
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Дата в формате "%Y%m%d"
        ///</summary>
        [JsonProperty("date")]
        public string Date {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Количество уничтоженной техники
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника
        ///</summary>
        [JsonProperty("planes_killed")]
        public Int64? PlanesKilled {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Общий опыт, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}
    }



    ///<summary>
    /// Информация об энциклопедии
    /// https://ru.wargaming.net/developers/api_reference/wows/encyclopedia/info/
    ///</summary>
    [Method(Url="api.worldofwarships.ru/wows/encyclopedia/info/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wows/encyclopedia/info/")]
    public class RequestWowsEncyclopediaInfo:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"cs" — Čeština 
///"de" — Deutsch 
///"en" — English 
///"es" — Español 
///"fr" — Français 
///"ja" — 日本語 
///"pl" — Polski 
///"ru" — Русский (используется по умолчанию)
///"th" — ไทย 
///"zh-tw" — 繁體中文 
///"tr" — Türkçe 
///"zh-cn" — 中文 
///"pt-br" — Português do Brasil 
///"es-mx" — Español (México)
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}
    }
    
    ///<summary>
    ///Информация об энциклопедии
    ///</summary>
    public class ResponseWowsEncyclopediaInfo:IResponse
    {

        ///<summary>
        ///Версия игрового клиента
        ///</summary>
        [JsonProperty("game_version")]
        public string GameVersion {get; set;}

        ///<summary>
        ///Список поддерживаемых языков в методах энциклопедии
        ///</summary>
        [JsonProperty("languages")]
        public Dictionary<string,string> Languages {get; set;}

        ///<summary>
        ///Доступные типы Модификаций
        ///</summary>
        [JsonProperty("ship_modifications")]
        public Dictionary<string,string> ShipModifications {get; set;}

        ///<summary>
        ///Доступные типы модулей
        ///</summary>
        [JsonProperty("ship_modules")]
        public Dictionary<string,string> ShipModules {get; set;}

        ///<summary>
        ///Доступные нации
        ///</summary>
        [JsonProperty("ship_nations")]
        public Dictionary<string,string> ShipNations {get; set;}

        ///<summary>
        ///Доступные классы кораблей
        ///</summary>
        [JsonProperty("ship_types")]
        public Dictionary<string,string> ShipTypes {get; set;}

        ///<summary>
        ///Время обновления информации о кораблях
        ///</summary>
        [JsonProperty("ships_updated_at")]
        public int? ShipsUpdatedAt {get; set;}

        ///<summary>
        ///Изображения классов кораблей
        ///</summary>
        [JsonProperty("ship_type_images")]
        public WowsEncyclopediaInfoShip_type_images ShipTypeImages {get; set;}
    }
    public class WowsEncyclopediaInfoShip_type_images
    {

        ///<summary>
        ///Изображение класса корабля
        ///</summary>
        [JsonProperty("image")]
        public string Image {get; set;}

        ///<summary>
        ///Значок элитных кораблей
        ///</summary>
        [JsonProperty("image_elite")]
        public string ImageElite {get; set;}

        ///<summary>
        ///Значок премиум кораблей
        ///</summary>
        [JsonProperty("image_premium")]
        public string ImagePremium {get; set;}
    }



    ///<summary>
    /// Корабли
    /// https://ru.wargaming.net/developers/api_reference/wows/encyclopedia/ships/
    ///</summary>
    [Method(Url="api.worldofwarships.ru/wows/encyclopedia/ships/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wows/encyclopedia/ships/")]
    public class RequestWowsEncyclopediaShips:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"cs" — Čeština 
///"de" — Deutsch 
///"en" — English 
///"es" — Español 
///"fr" — Français 
///"ja" — 日本語 
///"pl" — Polski 
///"ru" — Русский (используется по умолчанию)
///"th" — ไทย 
///"zh-tw" — 繁體中文 
///"tr" — Türkçe 
///"zh-cn" — 中文 
///"pt-br" — Português do Brasil 
///"es-mx" — Español (México)
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Идентификатор корабля
        ///numeric, list
        ///</summary>
        [JsonProperty("ship_id")]
        public string ShipId {get; set;}

        ///<summary>
        ///Нация
        ///string, list
        ///</summary>
        [JsonProperty("nation")]
        public string Nation {get; set;}

        ///<summary>
        ///Класс корабля
        ///string, list
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}
    }
    
    ///<summary>
    ///Корабли
    ///</summary>
    public class ResponseWowsEncyclopediaShips:IResponse
    {

        ///<summary>
        ///Описание корабля
        ///</summary>
        [JsonProperty("description")]
        public string Description {get; set;}

        ///<summary>
        ///Показывает, является ли корабль премиум кораблём
        ///</summary>
        [JsonProperty("is_premium")]
        public bool IsPremium {get; set;}

        ///<summary>
        ///Количество слотов модернизаций
        ///</summary>
        [JsonProperty("mod_slots")]
        public Int64? ModSlots {get; set;}

        ///<summary>
        ///Название корабля
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Нация
        ///</summary>
        [JsonProperty("nation")]
        public string Nation {get; set;}

        ///<summary>
        ///Список доступных для исследования кораблей в виде пар
        ///</summary>
        [JsonProperty("next_ships")]
        public Dictionary<string,string> NextShips {get; set;}

        ///<summary>
        ///Стоимость покупки в кредитах
        ///</summary>
        [JsonProperty("price_credit")]
        public Int64? PriceCredit {get; set;}

        ///<summary>
        ///Стоимость покупки в золоте
        ///</summary>
        [JsonProperty("price_gold")]
        public Int64? PriceGold {get; set;}

        ///<summary>
        ///Идентификатор корабля
        ///</summary>
        [JsonProperty("ship_id")]
        public Int64? ShipId {get; set;}

        ///<summary>
        ///Строковый идентификатор корабля
        ///</summary>
        [JsonProperty("ship_id_str")]
        public string ShipIdStr {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("tier")]
        public Int64? Tier {get; set;}

        ///<summary>
        ///Класс корабля
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}

        ///<summary>
        ///Список совместимых Модификаций
        ///</summary>
        [JsonProperty("upgrades")]
        public int[] Upgrades {get; set;}

        ///<summary>
        ///Характеристики базовой комплектации
        ///</summary>
        [JsonProperty("default_profile")]
        public WowsEncyclopediaShipsDefault_profile DefaultProfile {get; set;}

        ///<summary>
        ///Изображения корабля
        ///</summary>
        [JsonProperty("images")]
        public WowsEncyclopediaShipsImages Images {get; set;}

        ///<summary>
        ///Список совместимых модулей
        ///</summary>
        [JsonProperty("modules")]
        public WowsEncyclopediaShipsModules Modules {get; set;}

        ///<summary>
        ///Информация об исследовании модулей
        ///</summary>
        [JsonProperty("modules_tree")]
        public WowsEncyclopediaShipsModules_tree ModulesTree {get; set;}
    }
    public class WowsEncyclopediaShipsDefault_profile
    {

        ///<summary>
        ///Орудия противовоздушной обороны. Если модуль отсутствует на корабле, полю присваивается значение null.
        ///</summary>
        [JsonProperty("anti_aircraft")]
        public WowsEncyclopediaShipsDefault_profileAnti_aircraft AntiAircraft {get; set;}

        ///<summary>
        ///Живучесть базовой комплектации
        ///</summary>
        [JsonProperty("armour")]
        public WowsEncyclopediaShipsDefault_profileArmour Armour {get; set;}

        ///<summary>
        ///Главный калибр. Если модуль отсутствует на корабле, полю присваивается значение null.
        ///</summary>
        [JsonProperty("artillery")]
        public WowsEncyclopediaShipsDefault_profileArtillery Artillery {get; set;}

        ///<summary>
        ///Вспомогательный калибр. Если модуль отсутствует на корабле, полю присваивается значение null.
        ///</summary>
        [JsonProperty("atbas")]
        public WowsEncyclopediaShipsDefault_profileAtbas Atbas {get; set;}

        ///<summary>
        ///Маскировка базовой комплектации
        ///</summary>
        [JsonProperty("concealment")]
        public WowsEncyclopediaShipsDefault_profileConcealment Concealment {get; set;}

        ///<summary>
        ///Пикирующие бомбардировшики. Если модуль отсутствует на корабле, полю присваивается значение null.
        ///</summary>
        [JsonProperty("dive_bomber")]
        public WowsEncyclopediaShipsDefault_profileDive_bomber DiveBomber {get; set;}

        ///<summary>
        ///Двигатель
        ///</summary>
        [JsonProperty("engine")]
        public WowsEncyclopediaShipsDefault_profileEngine Engine {get; set;}

        ///<summary>
        ///Истребители. Если модуль отсутствует на корабле, полю присваивается значение null.
        ///</summary>
        [JsonProperty("fighters")]
        public WowsEncyclopediaShipsDefault_profileFighters Fighters {get; set;}

        ///<summary>
        ///Система управления огнём. Если модуль отсутствует на корабле, полю присваивается значение null.
        ///</summary>
        [JsonProperty("fire_control")]
        public WowsEncyclopediaShipsDefault_profileFire_control FireControl {get; set;}

        ///<summary>
        ///Полётный контроль. Если модуль отсутствует на корабле, полю присваивается значение null.
        ///</summary>
        [JsonProperty("flight_control")]
        public WowsEncyclopediaShipsDefault_profileFlight_control FlightControl {get; set;}

        ///<summary>
        ///Корпус
        ///</summary>
        [JsonProperty("hull")]
        public WowsEncyclopediaShipsDefault_profileHull Hull {get; set;}

        ///<summary>
        ///Манёвренность базовой комплектации
        ///</summary>
        [JsonProperty("mobility")]
        public WowsEncyclopediaShipsDefault_profileMobility Mobility {get; set;}

        ///<summary>
        ///Торпедоносцы. Если модуль отсутствует на корабле, полю присваивается значение null.
        ///</summary>
        [JsonProperty("torpedo_bomber")]
        public WowsEncyclopediaShipsDefault_profileTorpedo_bomber TorpedoBomber {get; set;}

        ///<summary>
        ///Торпедный аппарат. Если модуль отсутствует на корабле, полю присваивается значение null.
        ///</summary>
        [JsonProperty("torpedoes")]
        public WowsEncyclopediaShipsDefault_profileTorpedoes Torpedoes {get; set;}

        ///<summary>
        ///Мощность вооружения базовой комплектации
        ///</summary>
        [JsonProperty("weaponry")]
        public WowsEncyclopediaShipsDefault_profileWeaponry Weaponry {get; set;}
    }
    public class WowsEncyclopediaShipsDefault_profileAnti_aircraft
    {

        ///<summary>
        ///Эффективность ПВО
        ///</summary>
        [JsonProperty("defense")]
        public Int64? Defense {get; set;}

        ///<summary>
        ///Слоты орудий
        ///</summary>
        [JsonProperty("slots")]
        public WowsEncyclopediaShipsDefault_profileAnti_aircraftSlots Slots {get; set;}
    }
    public class WowsEncyclopediaShipsDefault_profileAnti_aircraftSlots
    {

        ///<summary>
        ///Средний урон в секунду
        ///</summary>
        [JsonProperty("avg_damage")]
        public Int64? AvgDamage {get; set;}

        ///<summary>
        ///Калибр
        ///</summary>
        [JsonProperty("caliber")]
        public Int64? Caliber {get; set;}

        ///<summary>
        ///Дальность стрельбы (км)
        ///</summary>
        [JsonProperty("distance")]
        public double Distance {get; set;}

        ///<summary>
        ///Количество орудий
        ///</summary>
        [JsonProperty("guns")]
        public Int64? Guns {get; set;}

        ///<summary>
        ///Название орудия
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}
    }


    public class WowsEncyclopediaShipsDefault_profileArmour
    {

        ///<summary>
        ///Боеспособность
        ///</summary>
        [JsonProperty("health")]
        public Int64? Health {get; set;}

        ///<summary>
        ///Показатель защищённости (%)
        ///</summary>
        [JsonProperty("total")]
        public Int64? Total {get; set;}

        ///<summary>
        ///Орудийный каземат
        ///</summary>
        [JsonProperty("casemate")]
        public WowsEncyclopediaShipsDefault_profileArmourCasemate Casemate {get; set;}

        ///<summary>
        ///Цитадель
        ///</summary>
        [JsonProperty("citadel")]
        public WowsEncyclopediaShipsDefault_profileArmourCitadel Citadel {get; set;}

        ///<summary>
        ///Броневая палуба
        ///</summary>
        [JsonProperty("deck")]
        public WowsEncyclopediaShipsDefault_profileArmourDeck Deck {get; set;}

        ///<summary>
        ///Носовая и кормовая оконечности
        ///</summary>
        [JsonProperty("extremities")]
        public WowsEncyclopediaShipsDefault_profileArmourExtremities Extremities {get; set;}

        ///<summary>
        ///Бронирование
        ///</summary>
        [JsonProperty("range")]
        public WowsEncyclopediaShipsDefault_profileArmourRange Range {get; set;}
    }
    public class WowsEncyclopediaShipsDefault_profileArmourCasemate
    {

        ///<summary>
        ///Максимальное значение
        ///</summary>
        [JsonProperty("max")]
        public Int64? Max {get; set;}

        ///<summary>
        ///Минимальное значение
        ///</summary>
        [JsonProperty("min")]
        public Int64? Min {get; set;}
    }

    public class WowsEncyclopediaShipsDefault_profileArmourCitadel
    {

        ///<summary>
        ///Максимальное значение
        ///</summary>
        [JsonProperty("max")]
        public Int64? Max {get; set;}

        ///<summary>
        ///Минимальное значение
        ///</summary>
        [JsonProperty("min")]
        public Int64? Min {get; set;}
    }

    public class WowsEncyclopediaShipsDefault_profileArmourDeck
    {

        ///<summary>
        ///Максимальное значение
        ///</summary>
        [JsonProperty("max")]
        public Int64? Max {get; set;}

        ///<summary>
        ///Минимальное значение
        ///</summary>
        [JsonProperty("min")]
        public Int64? Min {get; set;}
    }

    public class WowsEncyclopediaShipsDefault_profileArmourExtremities
    {

        ///<summary>
        ///Максимальное значение
        ///</summary>
        [JsonProperty("max")]
        public Int64? Max {get; set;}

        ///<summary>
        ///Минимальное значение
        ///</summary>
        [JsonProperty("min")]
        public Int64? Min {get; set;}
    }

    public class WowsEncyclopediaShipsDefault_profileArmourRange
    {

        ///<summary>
        ///Максимальное значение
        ///</summary>
        [JsonProperty("max")]
        public Int64? Max {get; set;}

        ///<summary>
        ///Минимальное значение
        ///</summary>
        [JsonProperty("min")]
        public Int64? Min {get; set;}
    }


    public class WowsEncyclopediaShipsDefault_profileArtillery
    {

        ///<summary>
        ///Идентификатор орудия
        ///</summary>
        [JsonProperty("artillery_id")]
        public Int64? ArtilleryId {get; set;}

        ///<summary>
        ///Строковый идентификатор орудия
        ///</summary>
        [JsonProperty("artillery_id_str")]
        public string ArtilleryIdStr {get; set;}

        ///<summary>
        ///Дальность стрельбы
        ///</summary>
        [JsonProperty("distance")]
        public double Distance {get; set;}

        ///<summary>
        ///Скорострельность (выстр / мин)
        ///</summary>
        [JsonProperty("gun_rate")]
        public double GunRate {get; set;}

        ///<summary>
        ///Максимальное рассеивание (м)
        ///</summary>
        [JsonProperty("max_dispersion")]
        public Int64? MaxDispersion {get; set;}

        ///<summary>
        ///Время поворота на 180 градусов (с)
        ///</summary>
        [JsonProperty("rotation_time")]
        public double RotationTime {get; set;}

        ///<summary>
        ///Снаряды
        ///</summary>
        [JsonProperty("shells")]
        public WowsEncyclopediaShipsDefault_profileArtilleryShells Shells {get; set;}

        ///<summary>
        ///Слоты орудий
        ///</summary>
        [JsonProperty("slots")]
        public WowsEncyclopediaShipsDefault_profileArtillerySlots Slots {get; set;}
    }
    public class WowsEncyclopediaShipsDefault_profileArtilleryShells
    {

        ///<summary>
        ///Вероятность пожара при попадании в цель снарядом (%)
        ///</summary>
        [JsonProperty("burn_probability")]
        public double BurnProbability {get; set;}

        ///<summary>
        ///Максимальный урон
        ///</summary>
        [JsonProperty("damage")]
        public Int64? Damage {get; set;}

        ///<summary>
        ///Название снаряда
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Тип снаряда
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}
    }

    public class WowsEncyclopediaShipsDefault_profileArtillerySlots
    {

        ///<summary>
        ///Количество стволов в слоте
        ///</summary>
        [JsonProperty("barrels")]
        public Int64? Barrels {get; set;}

        ///<summary>
        ///Количество башен главного калибра
        ///</summary>
        [JsonProperty("guns")]
        public Int64? Guns {get; set;}

        ///<summary>
        ///Название
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}
    }


    public class WowsEncyclopediaShipsDefault_profileAtbas
    {

        ///<summary>
        ///Дальность стрельбы
        ///</summary>
        [JsonProperty("distance")]
        public double Distance {get; set;}

        ///<summary>
        ///Слоты орудий
        ///</summary>
        [JsonProperty("slots")]
        public WowsEncyclopediaShipsDefault_profileAtbasSlots Slots {get; set;}
    }
    public class WowsEncyclopediaShipsDefault_profileAtbasSlots
    {

        ///<summary>
        ///Вероятность пожара при попадании в цель снарядом (%)
        ///</summary>
        [JsonProperty("burn_probability")]
        public double BurnProbability {get; set;}

        ///<summary>
        ///Максимальный урон
        ///</summary>
        [JsonProperty("damage")]
        public Int64? Damage {get; set;}

        ///<summary>
        ///Скорострельность (выстр / мин)
        ///</summary>
        [JsonProperty("gun_rate")]
        public double GunRate {get; set;}

        ///<summary>
        ///Название снаряда
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Тип снаряда
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}
    }


    public class WowsEncyclopediaShipsDefault_profileConcealment
    {

        ///<summary>
        ///Дальность видимости с самолётов
        ///</summary>
        [JsonProperty("detect_distance_by_plane")]
        public double DetectDistanceByPlane {get; set;}

        ///<summary>
        ///Дальность видимости с кораблей
        ///</summary>
        [JsonProperty("detect_distance_by_ship")]
        public double DetectDistanceByShip {get; set;}

        ///<summary>
        ///Показатель маскировки (%)
        ///</summary>
        [JsonProperty("total")]
        public Int64? Total {get; set;}
    }

    public class WowsEncyclopediaShipsDefault_profileDive_bomber
    {

        ///<summary>
        ///Вероятность пожара при попадании в цель бомбой (%)
        ///</summary>
        [JsonProperty("bomb_burn_probability")]
        public double BombBurnProbability {get; set;}

        ///<summary>
        ///Максимальный урон бомбой
        ///</summary>
        [JsonProperty("bomb_damage")]
        public Int64? BombDamage {get; set;}

        ///<summary>
        ///Название бомбы
        ///</summary>
        [JsonProperty("bomb_name")]
        public string BombName {get; set;}

        ///<summary>
        ///Крейсерская скорость (узлы)
        ///</summary>
        [JsonProperty("cruise_speed")]
        public Int64? CruiseSpeed {get; set;}

        ///<summary>
        ///Идентификатор пикирующих бомбардировщиков
        ///</summary>
        [JsonProperty("dive_bomber_id")]
        public Int64? DiveBomberId {get; set;}

        ///<summary>
        ///Строковый идентификатор пикирующих бомбардировщиков
        ///</summary>
        [JsonProperty("dive_bomber_id_str")]
        public string DiveBomberIdStr {get; set;}

        ///<summary>
        ///Максимальный урон бомбой
        ///</summary>
        [JsonProperty("max_damage")]
        public Int64? MaxDamage {get; set;}

        ///<summary>
        ///Живучесть
        ///</summary>
        [JsonProperty("max_health")]
        public Int64? MaxHealth {get; set;}

        ///<summary>
        ///Название эскадрильи
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Время подготовки к взлёту
        ///</summary>
        [JsonProperty("prepare_time")]
        public Int64? PrepareTime {get; set;}

        ///<summary>
        ///Количество эскадрилий
        ///</summary>
        [JsonProperty("squadrons")]
        public Int64? Squadrons {get; set;}

        ///<summary>
        ///Точность
        ///</summary>
        [JsonProperty("accuracy")]
        public WowsEncyclopediaShipsDefault_profileDive_bomberAccuracy Accuracy {get; set;}

        ///<summary>
        ///Количество самолётов в одной эскадрилье
        ///</summary>
        [JsonProperty("count_in_squadron")]
        public WowsEncyclopediaShipsDefault_profileDive_bomberCount_in_squadron CountInSquadron {get; set;}
    }
    public class WowsEncyclopediaShipsDefault_profileDive_bomberAccuracy
    {

        ///<summary>
        ///Максимальное значение
        ///</summary>
        [JsonProperty("max")]
        public double Max {get; set;}

        ///<summary>
        ///Минимальное значение
        ///</summary>
        [JsonProperty("min")]
        public double Min {get; set;}
    }

    public class WowsEncyclopediaShipsDefault_profileDive_bomberCount_in_squadron
    {

        ///<summary>
        ///Максимальное значение
        ///</summary>
        [JsonProperty("max")]
        public Int64? Max {get; set;}

        ///<summary>
        ///Минимальное значение
        ///</summary>
        [JsonProperty("min")]
        public Int64? Min {get; set;}
    }


    public class WowsEncyclopediaShipsDefault_profileEngine
    {

        ///<summary>
        ///Идентификатор двигателя
        ///</summary>
        [JsonProperty("engine_id")]
        public Int64? EngineId {get; set;}

        ///<summary>
        ///Строковый идентификатор двигателя
        ///</summary>
        [JsonProperty("engine_id_str")]
        public string EngineIdStr {get; set;}

        ///<summary>
        ///Максимальная скорость хода (узлы)
        ///</summary>
        [JsonProperty("max_speed")]
        public double MaxSpeed {get; set;}
    }

    public class WowsEncyclopediaShipsDefault_profileFighters
    {

        ///<summary>
        ///Средний урон в секунду
        ///</summary>
        [JsonProperty("avg_damage")]
        public Int64? AvgDamage {get; set;}

        ///<summary>
        ///Крейсерская скорость (узлы)
        ///</summary>
        [JsonProperty("cruise_speed")]
        public Int64? CruiseSpeed {get; set;}

        ///<summary>
        ///Идентификатор истребителей
        ///</summary>
        [JsonProperty("fighters_id")]
        public Int64? FightersId {get; set;}

        ///<summary>
        ///Строковый идентификатор истребителей
        ///</summary>
        [JsonProperty("fighters_id_str")]
        public string FightersIdStr {get; set;}

        ///<summary>
        ///Боекомплект
        ///</summary>
        [JsonProperty("max_ammo")]
        public Int64? MaxAmmo {get; set;}

        ///<summary>
        ///Живучесть
        ///</summary>
        [JsonProperty("max_health")]
        public Int64? MaxHealth {get; set;}

        ///<summary>
        ///Название эскадрильи
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Время подготовки к взлёту
        ///</summary>
        [JsonProperty("prepare_time")]
        public Int64? PrepareTime {get; set;}

        ///<summary>
        ///Количество эскадрилий
        ///</summary>
        [JsonProperty("squadrons")]
        public Int64? Squadrons {get; set;}

        ///<summary>
        ///Количество самолётов в одной эскадрилье
        ///</summary>
        [JsonProperty("count_in_squadron")]
        public WowsEncyclopediaShipsDefault_profileFightersCount_in_squadron CountInSquadron {get; set;}
    }
    public class WowsEncyclopediaShipsDefault_profileFightersCount_in_squadron
    {

        ///<summary>
        ///Максимальное значение
        ///</summary>
        [JsonProperty("max")]
        public Int64? Max {get; set;}

        ///<summary>
        ///Минимальное значение
        ///</summary>
        [JsonProperty("min")]
        public Int64? Min {get; set;}
    }


    public class WowsEncyclopediaShipsDefault_profileFire_control
    {

        ///<summary>
        ///Дальность стрельбы
        ///</summary>
        [JsonProperty("distance")]
        public double Distance {get; set;}

        ///<summary>
        ///Увеличение дальности стрельбы (%)
        ///</summary>
        [JsonProperty("distance_increase")]
        public Int64? DistanceIncrease {get; set;}

        ///<summary>
        ///Идентификатор системы управления огнём
        ///</summary>
        [JsonProperty("fire_control_id")]
        public Int64? FireControlId {get; set;}

        ///<summary>
        ///Строковый идентификатор системы управления огнём
        ///</summary>
        [JsonProperty("fire_control_id_str")]
        public string FireControlIdStr {get; set;}
    }

    public class WowsEncyclopediaShipsDefault_profileFlight_control
    {

        ///<summary>
        ///Количество эскадрилий бомбардировщиков
        ///</summary>
        [JsonProperty("bomber_squadrons")]
        public Int64? BomberSquadrons {get; set;}

        ///<summary>
        ///Количество эскадрилий истребителей
        ///</summary>
        [JsonProperty("fighter_squadrons")]
        public Int64? FighterSquadrons {get; set;}

        ///<summary>
        ///Идентификатор полётного контроля
        ///</summary>
        [JsonProperty("flight_control_id")]
        public Int64? FlightControlId {get; set;}

        ///<summary>
        ///Строковый идентификатор полётного контроля
        ///</summary>
        [JsonProperty("flight_control_id_str")]
        public string FlightControlIdStr {get; set;}

        ///<summary>
        ///Количество эскадрилий торпедоносцев
        ///</summary>
        [JsonProperty("torpedo_squadrons")]
        public Int64? TorpedoSquadrons {get; set;}
    }

    public class WowsEncyclopediaShipsDefault_profileHull
    {

        ///<summary>
        ///Точки ПВО
        ///</summary>
        [JsonProperty("anti_aircraft_barrels")]
        public Int64? AntiAircraftBarrels {get; set;}

        ///<summary>
        ///Количество башен главного калибра
        ///</summary>
        [JsonProperty("artillery_barrels")]
        public Int64? ArtilleryBarrels {get; set;}

        ///<summary>
        ///Башни вспомогательного калибра
        ///</summary>
        [JsonProperty("atba_barrels")]
        public Int64? AtbaBarrels {get; set;}

        ///<summary>
        ///Боеспособность
        ///</summary>
        [JsonProperty("health")]
        public Int64? Health {get; set;}

        ///<summary>
        ///Идентификатор корпуса
        ///</summary>
        [JsonProperty("hull_id")]
        public Int64? HullId {get; set;}

        ///<summary>
        ///Строковый идентификатор корпуса
        ///</summary>
        [JsonProperty("hull_id_str")]
        public string HullIdStr {get; set;}

        ///<summary>
        ///Вместимость ангара
        ///</summary>
        [JsonProperty("planes_amount")]
        public Int64? PlanesAmount {get; set;}

        ///<summary>
        ///Торпедные аппараты
        ///</summary>
        [JsonProperty("torpedoes_barrels")]
        public Int64? TorpedoesBarrels {get; set;}

        ///<summary>
        ///Бронирование (мм)
        ///</summary>
        [JsonProperty("range")]
        public WowsEncyclopediaShipsDefault_profileHullRange Range {get; set;}
    }
    public class WowsEncyclopediaShipsDefault_profileHullRange
    {

        ///<summary>
        ///Максимальное значение
        ///</summary>
        [JsonProperty("max")]
        public Int64? Max {get; set;}

        ///<summary>
        ///Минимальное значение
        ///</summary>
        [JsonProperty("min")]
        public Int64? Min {get; set;}
    }


    public class WowsEncyclopediaShipsDefault_profileMobility
    {

        ///<summary>
        ///Максимальная скорость (узлы)
        ///</summary>
        [JsonProperty("max_speed")]
        public double MaxSpeed {get; set;}

        ///<summary>
        ///Время перекладки руля (с)
        ///</summary>
        [JsonProperty("rudder_time")]
        public double RudderTime {get; set;}

        ///<summary>
        ///Показатель манёвренности (%)
        ///</summary>
        [JsonProperty("total")]
        public Int64? Total {get; set;}

        ///<summary>
        ///Радиус циркуляции (м)
        ///</summary>
        [JsonProperty("turning_radius")]
        public Int64? TurningRadius {get; set;}
    }

    public class WowsEncyclopediaShipsDefault_profileTorpedo_bomber
    {

        ///<summary>
        ///Крейсерская скорость (узлы)
        ///</summary>
        [JsonProperty("cruise_speed")]
        public Int64? CruiseSpeed {get; set;}

        ///<summary>
        ///Максимальный урон бомбой
        ///</summary>
        [JsonProperty("max_damage")]
        public Int64? MaxDamage {get; set;}

        ///<summary>
        ///Живучесть
        ///</summary>
        [JsonProperty("max_health")]
        public Int64? MaxHealth {get; set;}

        ///<summary>
        ///Название эскадрильи
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Время подготовки к взлёту
        ///</summary>
        [JsonProperty("prepare_time")]
        public Int64? PrepareTime {get; set;}

        ///<summary>
        ///Количество эскадрилий
        ///</summary>
        [JsonProperty("squadrons")]
        public Int64? Squadrons {get; set;}

        ///<summary>
        ///Идентификатор торпедоносцев
        ///</summary>
        [JsonProperty("torpedo_bomber_id")]
        public Int64? TorpedoBomberId {get; set;}

        ///<summary>
        ///Строковый идентификатор торпедоносцев
        ///</summary>
        [JsonProperty("torpedo_bomber_id_str")]
        public string TorpedoBomberIdStr {get; set;}

        ///<summary>
        ///Максимальный урон торпедой
        ///</summary>
        [JsonProperty("torpedo_damage")]
        public Int64? TorpedoDamage {get; set;}

        ///<summary>
        ///Дальность стрельбы
        ///</summary>
        [JsonProperty("torpedo_distance")]
        public double TorpedoDistance {get; set;}

        ///<summary>
        ///Максимальная скорость (узлы)
        ///</summary>
        [JsonProperty("torpedo_max_speed")]
        public Int64? TorpedoMaxSpeed {get; set;}

        ///<summary>
        ///Название торпеды
        ///</summary>
        [JsonProperty("torpedo_name")]
        public string TorpedoName {get; set;}

        ///<summary>
        ///Количество самолётов в одной эскадрилье
        ///</summary>
        [JsonProperty("count_in_squadron")]
        public WowsEncyclopediaShipsDefault_profileTorpedo_bomberCount_in_squadron CountInSquadron {get; set;}
    }
    public class WowsEncyclopediaShipsDefault_profileTorpedo_bomberCount_in_squadron
    {

        ///<summary>
        ///Максимальное значение
        ///</summary>
        [JsonProperty("max")]
        public Int64? Max {get; set;}

        ///<summary>
        ///Минимальное значение
        ///</summary>
        [JsonProperty("min")]
        public Int64? Min {get; set;}
    }


    public class WowsEncyclopediaShipsDefault_profileTorpedoes
    {

        ///<summary>
        ///Дальность стрельбы
        ///</summary>
        [JsonProperty("distance")]
        public double Distance {get; set;}

        ///<summary>
        ///Максимальный урон
        ///</summary>
        [JsonProperty("max_damage")]
        public Int64? MaxDamage {get; set;}

        ///<summary>
        ///Время перезарядки (с)
        ///</summary>
        [JsonProperty("reload_time")]
        public Int64? ReloadTime {get; set;}

        ///<summary>
        ///Время поворота на 180 градусов (с)
        ///</summary>
        [JsonProperty("rotation_time")]
        public double RotationTime {get; set;}

        ///<summary>
        ///Торпеда
        ///</summary>
        [JsonProperty("torpedo_name")]
        public string TorpedoName {get; set;}

        ///<summary>
        ///Скорость хода торпед (узлы)
        ///</summary>
        [JsonProperty("torpedo_speed")]
        public Int64? TorpedoSpeed {get; set;}

        ///<summary>
        ///Идентификатор торпедного аппарата
        ///</summary>
        [JsonProperty("torpedoes_id")]
        public Int64? TorpedoesId {get; set;}

        ///<summary>
        ///Строковый идентификатор торпедного аппарата
        ///</summary>
        [JsonProperty("torpedoes_id_str")]
        public string TorpedoesIdStr {get; set;}

        ///<summary>
        ///Слоты торпедных аппаратов
        ///</summary>
        [JsonProperty("slots")]
        public WowsEncyclopediaShipsDefault_profileTorpedoesSlots Slots {get; set;}
    }
    public class WowsEncyclopediaShipsDefault_profileTorpedoesSlots
    {

        ///<summary>
        ///Количество труб в торпедном аппарате
        ///</summary>
        [JsonProperty("barrels")]
        public Int64? Barrels {get; set;}

        ///<summary>
        ///Калибр
        ///</summary>
        [JsonProperty("caliber")]
        public Int64? Caliber {get; set;}

        ///<summary>
        ///Торпедные аппараты
        ///</summary>
        [JsonProperty("guns")]
        public Int64? Guns {get; set;}

        ///<summary>
        ///Название
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}
    }


    public class WowsEncyclopediaShipsDefault_profileWeaponry
    {

        ///<summary>
        ///Авиации (%)
        ///</summary>
        [JsonProperty("aircraft")]
        public Int64? Aircraft {get; set;}

        ///<summary>
        ///ПВО (%)
        ///</summary>
        [JsonProperty("anti_aircraft")]
        public Int64? AntiAircraft {get; set;}

        ///<summary>
        ///Артиллерии (%)
        ///</summary>
        [JsonProperty("artillery")]
        public Int64? Artillery {get; set;}

        ///<summary>
        ///Торпед (%)
        ///</summary>
        [JsonProperty("torpedoes")]
        public Int64? Torpedoes {get; set;}
    }


    public class WowsEncyclopediaShipsImages
    {

        ///<summary>
        ///URL к изображению-контуру корабля в размере 186 x 48 пкс
        ///</summary>
        [JsonProperty("contour")]
        public string Contour {get; set;}

        ///<summary>
        ///URL к изображению корабля в размере 870 x 512 пкс
        ///</summary>
        [JsonProperty("large")]
        public string Large {get; set;}

        ///<summary>
        ///URL к изображению корабля в размере 435 x 256 пкс
        ///</summary>
        [JsonProperty("medium")]
        public string Medium {get; set;}

        ///<summary>
        ///URL к изображению корабля в размере 214 x 126 пкс
        ///</summary>
        [JsonProperty("small")]
        public string Small {get; set;}
    }

    public class WowsEncyclopediaShipsModules
    {

        ///<summary>
        ///Главный калибр. Если модуль отсутствует на корабле, полю присваивается значение null.
        ///</summary>
        [JsonProperty("artillery")]
        public int[] Artillery {get; set;}

        ///<summary>
        ///Пикирующие бомбардировшики. Если модуль отсутствует на корабле, полю присваивается значение null.
        ///</summary>
        [JsonProperty("dive_bomber")]
        public int[] DiveBomber {get; set;}

        ///<summary>
        ///Двигатели
        ///</summary>
        [JsonProperty("engine")]
        public int[] Engine {get; set;}

        ///<summary>
        ///Истребители. Если модуль отсутствует на корабле, полю присваивается значение null.
        ///</summary>
        [JsonProperty("fighter")]
        public int[] Fighter {get; set;}

        ///<summary>
        ///Система управления огнём. Если модуль отсутствует на корабле, полю присваивается значение null.
        ///</summary>
        [JsonProperty("fire_control")]
        public int[] FireControl {get; set;}

        ///<summary>
        ///Полётный контроль. Если модуль отсутствует на корабле, полю присваивается значение null.
        ///</summary>
        [JsonProperty("flight_control")]
        public int[] FlightControl {get; set;}

        ///<summary>
        ///Корпус
        ///</summary>
        [JsonProperty("hull")]
        public int[] Hull {get; set;}

        ///<summary>
        ///Торпедоносцы. Если модуль отсутствует на корабле, полю присваивается значение null.
        ///</summary>
        [JsonProperty("torpedo_bomber")]
        public int[] TorpedoBomber {get; set;}

        ///<summary>
        ///Торпедный аппарат. Если модуль отсутствует на корабле, полю присваивается значение null.
        ///</summary>
        [JsonProperty("torpedoes")]
        public int[] Torpedoes {get; set;}
    }

    public class WowsEncyclopediaShipsModules_tree
    {

        ///<summary>
        ///Показывает, является ли модуль базовым
        ///</summary>
        [JsonProperty("is_default")]
        public bool IsDefault {get; set;}

        ///<summary>
        ///Идентификатор модуля
        ///</summary>
        [JsonProperty("module_id")]
        public Int64? ModuleId {get; set;}

        ///<summary>
        ///Строковый идентификатор модуля
        ///</summary>
        [JsonProperty("module_id_str")]
        public string ModuleIdStr {get; set;}

        ///<summary>
        ///Название модуля
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Список идентификаторов модулей, доступных после исследования модуля
        ///</summary>
        [JsonProperty("next_modules")]
        public int[] NextModules {get; set;}

        ///<summary>
        ///Список идентификаторов техники доступной после исследования модуля
        ///</summary>
        [JsonProperty("next_ships")]
        public int[] NextShips {get; set;}

        ///<summary>
        ///Стоимость в кредитах
        ///</summary>
        [JsonProperty("price_credit")]
        public Int64? PriceCredit {get; set;}

        ///<summary>
        ///Стоимость исследования
        ///</summary>
        [JsonProperty("price_xp")]
        public Int64? PriceXp {get; set;}

        ///<summary>
        ///Тип модуля
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}
    }



    ///<summary>
    /// Достижения
    /// https://ru.wargaming.net/developers/api_reference/wows/encyclopedia/achievements/
    ///</summary>
    [Method(Url="api.worldofwarships.ru/wows/encyclopedia/achievements/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wows/encyclopedia/achievements/")]
    public class RequestWowsEncyclopediaAchievements:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"cs" — Čeština 
///"de" — Deutsch 
///"en" — English 
///"es" — Español 
///"fr" — Français 
///"ja" — 日本語 
///"pl" — Polski 
///"ru" — Русский (используется по умолчанию)
///"th" — ไทย 
///"zh-tw" — 繁體中文 
///"tr" — Türkçe 
///"zh-cn" — 中文 
///"pt-br" — Português do Brasil 
///"es-mx" — Español (México)
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}
    }
    
    ///<summary>
    ///Достижения
    ///</summary>
    public class ResponseWowsEncyclopediaAchievements:IResponse
    {

        ///<summary>
        ///Боевые достижения
        ///</summary>
        [JsonProperty("battle")]
        public WowsEncyclopediaAchievementsBattle Battle {get; set;}
    }
    public class WowsEncyclopediaAchievementsBattle
    {

        ///<summary>
        ///Идентификатор достижения
        ///</summary>
        [JsonProperty("achievement_id")]
        public string AchievementId {get; set;}

        ///<summary>
        ///Показывает сколько раз можно получить достижение за бой
        ///</summary>
        [JsonProperty("count_per_battle")]
        public string CountPerBattle {get; set;}

        ///<summary>
        ///Описание достижения
        ///</summary>
        [JsonProperty("description")]
        public string Description {get; set;}

        ///<summary>
        ///Ссылка на изображение
        ///</summary>
        [JsonProperty("image")]
        public string Image {get; set;}

        ///<summary>
        ///Показывает, есть ли прогресс по достижению
        ///</summary>
        [JsonProperty("is_progress")]
        public Int64? IsProgress {get; set;}

        ///<summary>
        ///Максимальный прогресс
        ///</summary>
        [JsonProperty("max_progress")]
        public Int64? MaxProgress {get; set;}

        ///<summary>
        ///Название достижения
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Показывает, даётся ли награда за достижение
        ///</summary>
        [JsonProperty("reward")]
        public bool Reward {get; set;}

        ///<summary>
        ///Подтип достижения
        ///</summary>
        [JsonProperty("sub_type")]
        public string SubType {get; set;}

        ///<summary>
        ///Тип достижения
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}
    }



    ///<summary>
    /// Характеристики корабля
    /// https://ru.wargaming.net/developers/api_reference/wows/encyclopedia/shipprofile/
    ///</summary>
    [Method(Url="api.worldofwarships.ru/wows/encyclopedia/shipprofile/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wows/encyclopedia/shipprofile/")]
    public class RequestWowsEncyclopediaShipprofile:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"cs" — Čeština 
///"de" — Deutsch 
///"en" — English 
///"es" — Español 
///"fr" — Français 
///"ja" — 日本語 
///"pl" — Polski 
///"ru" — Русский (используется по умолчанию)
///"th" — ไทย 
///"zh-tw" — 繁體中文 
///"tr" — Türkçe 
///"zh-cn" — 中文 
///"pt-br" — Português do Brasil 
///"es-mx" — Español (México)
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор корабля
        ///numeric
        ///</summary>
        [JsonProperty("ship_id")]
        [FieldIsMandatory]
        public string ShipId {get; set;}

        ///<summary>
        ///Идентификатор орудия главного калибра. Если модуль не указан, используется модуль базовой комплектации.
        ///numeric
        ///</summary>
        [JsonProperty("artillery_id")]
        public string ArtilleryId {get; set;}

        ///<summary>
        ///Идентификатор торпедного аппарата. Если модуль не указан, используется модуль базовой комплектации.
        ///numeric
        ///</summary>
        [JsonProperty("torpedoes_id")]
        public string TorpedoesId {get; set;}

        ///<summary>
        ///Идентификатор системы управления огнём. Если модуль не указан, используется модуль базовой комплектации.
        ///numeric
        ///</summary>
        [JsonProperty("fire_control_id")]
        public string FireControlId {get; set;}

        ///<summary>
        ///Идентификатор системы управления полётами. Если модуль не указан, используется модуль базовой комплектации.
        ///numeric
        ///</summary>
        [JsonProperty("flight_control_id")]
        public string FlightControlId {get; set;}

        ///<summary>
        ///Идентификатор корпуса. Если модуль не указан, используется модуль базовой комплектации.
        ///numeric
        ///</summary>
        [JsonProperty("hull_id")]
        public string HullId {get; set;}

        ///<summary>
        ///Идентификатор двигателя. Если модуль не указан, используется модуль базовой комплектации.
        ///numeric
        ///</summary>
        [JsonProperty("engine_id")]
        public string EngineId {get; set;}

        ///<summary>
        ///Идентификатор истребителей. Если модуль не указан, используется модуль базовой комплектации.
        ///numeric
        ///</summary>
        [JsonProperty("fighter_id")]
        public string FighterId {get; set;}

        ///<summary>
        ///Идентификатор пикирующих бомбардировщиков. Если модуль не указан, используется модуль базовой комплектации.
        ///numeric
        ///</summary>
        [JsonProperty("dive_bomber_id")]
        public string DiveBomberId {get; set;}

        ///<summary>
        ///Идентификатор торпедоносцев. Если модуль не указан, используется модуль базовой комплектации.
        ///numeric
        ///</summary>
        [JsonProperty("torpedo_bomber_id")]
        public string TorpedoBomberId {get; set;}
    }
    
    ///<summary>
    ///Характеристики корабля
    ///</summary>
    public class ResponseWowsEncyclopediaShipprofile:IResponse
    {

        ///<summary>
        ///Орудия противовоздушной обороны. Если модуль отсутствует на корабле, полю присваивается значение null.
        ///</summary>
        [JsonProperty("anti_aircraft")]
        public WowsEncyclopediaShipprofileAnti_aircraft AntiAircraft {get; set;}

        ///<summary>
        ///Живучесть базовой комплектации
        ///</summary>
        [JsonProperty("armour")]
        public WowsEncyclopediaShipprofileArmour Armour {get; set;}

        ///<summary>
        ///Главный калибр. Если модуль отсутствует на корабле, полю присваивается значение null.
        ///</summary>
        [JsonProperty("artillery")]
        public WowsEncyclopediaShipprofileArtillery Artillery {get; set;}

        ///<summary>
        ///Вспомогательный калибр. Если модуль отсутствует на корабле, полю присваивается значение null.
        ///</summary>
        [JsonProperty("atbas")]
        public WowsEncyclopediaShipprofileAtbas Atbas {get; set;}

        ///<summary>
        ///Маскировка базовой комплектации
        ///</summary>
        [JsonProperty("concealment")]
        public WowsEncyclopediaShipprofileConcealment Concealment {get; set;}

        ///<summary>
        ///Пикирующие бомбардировшики. Если модуль отсутствует на корабле, полю присваивается значение null.
        ///</summary>
        [JsonProperty("dive_bomber")]
        public WowsEncyclopediaShipprofileDive_bomber DiveBomber {get; set;}

        ///<summary>
        ///Двигатель
        ///</summary>
        [JsonProperty("engine")]
        public WowsEncyclopediaShipprofileEngine Engine {get; set;}

        ///<summary>
        ///Истребители. Если модуль отсутствует на корабле, полю присваивается значение null.
        ///</summary>
        [JsonProperty("fighters")]
        public WowsEncyclopediaShipprofileFighters Fighters {get; set;}

        ///<summary>
        ///Система управления огнём. Если модуль отсутствует на корабле, полю присваивается значение null.
        ///</summary>
        [JsonProperty("fire_control")]
        public WowsEncyclopediaShipprofileFire_control FireControl {get; set;}

        ///<summary>
        ///Полётный контроль. Если модуль отсутствует на корабле, полю присваивается значение null.
        ///</summary>
        [JsonProperty("flight_control")]
        public WowsEncyclopediaShipprofileFlight_control FlightControl {get; set;}

        ///<summary>
        ///Корпус
        ///</summary>
        [JsonProperty("hull")]
        public WowsEncyclopediaShipprofileHull Hull {get; set;}

        ///<summary>
        ///Манёвренность базовой комплектации
        ///</summary>
        [JsonProperty("mobility")]
        public WowsEncyclopediaShipprofileMobility Mobility {get; set;}

        ///<summary>
        ///Торпедоносцы. Если модуль отсутствует на корабле, полю присваивается значение null.
        ///</summary>
        [JsonProperty("torpedo_bomber")]
        public WowsEncyclopediaShipprofileTorpedo_bomber TorpedoBomber {get; set;}

        ///<summary>
        ///Торпедный аппарат. Если модуль отсутствует на корабле, полю присваивается значение null.
        ///</summary>
        [JsonProperty("torpedoes")]
        public WowsEncyclopediaShipprofileTorpedoes Torpedoes {get; set;}

        ///<summary>
        ///Мощность вооружения базовой комплектации
        ///</summary>
        [JsonProperty("weaponry")]
        public WowsEncyclopediaShipprofileWeaponry Weaponry {get; set;}
    }
    public class WowsEncyclopediaShipprofileAnti_aircraft
    {

        ///<summary>
        ///Эффективность ПВО
        ///</summary>
        [JsonProperty("defense")]
        public Int64? Defense {get; set;}

        ///<summary>
        ///Слоты орудий
        ///</summary>
        [JsonProperty("slots")]
        public WowsEncyclopediaShipprofileAnti_aircraftSlots Slots {get; set;}
    }
    public class WowsEncyclopediaShipprofileAnti_aircraftSlots
    {

        ///<summary>
        ///Средний урон в секунду
        ///</summary>
        [JsonProperty("avg_damage")]
        public Int64? AvgDamage {get; set;}

        ///<summary>
        ///Калибр
        ///</summary>
        [JsonProperty("caliber")]
        public Int64? Caliber {get; set;}

        ///<summary>
        ///Дальность стрельбы (км)
        ///</summary>
        [JsonProperty("distance")]
        public double Distance {get; set;}

        ///<summary>
        ///Количество орудий
        ///</summary>
        [JsonProperty("guns")]
        public Int64? Guns {get; set;}

        ///<summary>
        ///Название орудия
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}
    }


    public class WowsEncyclopediaShipprofileArmour
    {

        ///<summary>
        ///Боеспособность
        ///</summary>
        [JsonProperty("health")]
        public Int64? Health {get; set;}

        ///<summary>
        ///Показатель защищённости (%)
        ///</summary>
        [JsonProperty("total")]
        public Int64? Total {get; set;}

        ///<summary>
        ///Орудийный каземат
        ///</summary>
        [JsonProperty("casemate")]
        public WowsEncyclopediaShipprofileArmourCasemate Casemate {get; set;}

        ///<summary>
        ///Цитадель
        ///</summary>
        [JsonProperty("citadel")]
        public WowsEncyclopediaShipprofileArmourCitadel Citadel {get; set;}

        ///<summary>
        ///Броневая палуба
        ///</summary>
        [JsonProperty("deck")]
        public WowsEncyclopediaShipprofileArmourDeck Deck {get; set;}

        ///<summary>
        ///Носовая и кормовая оконечности
        ///</summary>
        [JsonProperty("extremities")]
        public WowsEncyclopediaShipprofileArmourExtremities Extremities {get; set;}

        ///<summary>
        ///Бронирование
        ///</summary>
        [JsonProperty("range")]
        public WowsEncyclopediaShipprofileArmourRange Range {get; set;}
    }
    public class WowsEncyclopediaShipprofileArmourCasemate
    {

        ///<summary>
        ///Максимальное значение
        ///</summary>
        [JsonProperty("max")]
        public Int64? Max {get; set;}

        ///<summary>
        ///Минимальное значение
        ///</summary>
        [JsonProperty("min")]
        public Int64? Min {get; set;}
    }

    public class WowsEncyclopediaShipprofileArmourCitadel
    {

        ///<summary>
        ///Максимальное значение
        ///</summary>
        [JsonProperty("max")]
        public Int64? Max {get; set;}

        ///<summary>
        ///Минимальное значение
        ///</summary>
        [JsonProperty("min")]
        public Int64? Min {get; set;}
    }

    public class WowsEncyclopediaShipprofileArmourDeck
    {

        ///<summary>
        ///Максимальное значение
        ///</summary>
        [JsonProperty("max")]
        public Int64? Max {get; set;}

        ///<summary>
        ///Минимальное значение
        ///</summary>
        [JsonProperty("min")]
        public Int64? Min {get; set;}
    }

    public class WowsEncyclopediaShipprofileArmourExtremities
    {

        ///<summary>
        ///Максимальное значение
        ///</summary>
        [JsonProperty("max")]
        public Int64? Max {get; set;}

        ///<summary>
        ///Минимальное значение
        ///</summary>
        [JsonProperty("min")]
        public Int64? Min {get; set;}
    }

    public class WowsEncyclopediaShipprofileArmourRange
    {

        ///<summary>
        ///Максимальное значение
        ///</summary>
        [JsonProperty("max")]
        public Int64? Max {get; set;}

        ///<summary>
        ///Минимальное значение
        ///</summary>
        [JsonProperty("min")]
        public Int64? Min {get; set;}
    }


    public class WowsEncyclopediaShipprofileArtillery
    {

        ///<summary>
        ///Идентификатор орудия
        ///</summary>
        [JsonProperty("artillery_id")]
        public Int64? ArtilleryId {get; set;}

        ///<summary>
        ///Строковый идентификатор орудия
        ///</summary>
        [JsonProperty("artillery_id_str")]
        public string ArtilleryIdStr {get; set;}

        ///<summary>
        ///Дальность стрельбы
        ///</summary>
        [JsonProperty("distance")]
        public double Distance {get; set;}

        ///<summary>
        ///Скорострельность (выстр / мин)
        ///</summary>
        [JsonProperty("gun_rate")]
        public double GunRate {get; set;}

        ///<summary>
        ///Максимальное рассеивание (м)
        ///</summary>
        [JsonProperty("max_dispersion")]
        public Int64? MaxDispersion {get; set;}

        ///<summary>
        ///Время поворота на 180 градусов (с)
        ///</summary>
        [JsonProperty("rotation_time")]
        public double RotationTime {get; set;}

        ///<summary>
        ///Снаряды
        ///</summary>
        [JsonProperty("shells")]
        public WowsEncyclopediaShipprofileArtilleryShells Shells {get; set;}

        ///<summary>
        ///Слоты орудий
        ///</summary>
        [JsonProperty("slots")]
        public WowsEncyclopediaShipprofileArtillerySlots Slots {get; set;}
    }
    public class WowsEncyclopediaShipprofileArtilleryShells
    {

        ///<summary>
        ///Вероятность пожара при попадании в цель снарядом (%)
        ///</summary>
        [JsonProperty("burn_probability")]
        public double BurnProbability {get; set;}

        ///<summary>
        ///Максимальный урон
        ///</summary>
        [JsonProperty("damage")]
        public Int64? Damage {get; set;}

        ///<summary>
        ///Название снаряда
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Тип снаряда
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}
    }

    public class WowsEncyclopediaShipprofileArtillerySlots
    {

        ///<summary>
        ///Количество стволов в слоте
        ///</summary>
        [JsonProperty("barrels")]
        public Int64? Barrels {get; set;}

        ///<summary>
        ///Количество башен главного калибра
        ///</summary>
        [JsonProperty("guns")]
        public Int64? Guns {get; set;}

        ///<summary>
        ///Название
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}
    }


    public class WowsEncyclopediaShipprofileAtbas
    {

        ///<summary>
        ///Дальность стрельбы
        ///</summary>
        [JsonProperty("distance")]
        public double Distance {get; set;}

        ///<summary>
        ///Слоты орудий
        ///</summary>
        [JsonProperty("slots")]
        public WowsEncyclopediaShipprofileAtbasSlots Slots {get; set;}
    }
    public class WowsEncyclopediaShipprofileAtbasSlots
    {

        ///<summary>
        ///Вероятность пожара при попадании в цель снарядом (%)
        ///</summary>
        [JsonProperty("burn_probability")]
        public double BurnProbability {get; set;}

        ///<summary>
        ///Максимальный урон
        ///</summary>
        [JsonProperty("damage")]
        public Int64? Damage {get; set;}

        ///<summary>
        ///Скорострельность (выстр / мин)
        ///</summary>
        [JsonProperty("gun_rate")]
        public double GunRate {get; set;}

        ///<summary>
        ///Название снаряда
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Тип снаряда
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}
    }


    public class WowsEncyclopediaShipprofileConcealment
    {

        ///<summary>
        ///Дальность видимости с самолётов
        ///</summary>
        [JsonProperty("detect_distance_by_plane")]
        public double DetectDistanceByPlane {get; set;}

        ///<summary>
        ///Дальность видимости с кораблей
        ///</summary>
        [JsonProperty("detect_distance_by_ship")]
        public double DetectDistanceByShip {get; set;}

        ///<summary>
        ///Показатель маскировки (%)
        ///</summary>
        [JsonProperty("total")]
        public Int64? Total {get; set;}
    }

    public class WowsEncyclopediaShipprofileDive_bomber
    {

        ///<summary>
        ///Вероятность пожара при попадании в цель бомбой (%)
        ///</summary>
        [JsonProperty("bomb_burn_probability")]
        public double BombBurnProbability {get; set;}

        ///<summary>
        ///Максимальный урон бомбой
        ///</summary>
        [JsonProperty("bomb_damage")]
        public Int64? BombDamage {get; set;}

        ///<summary>
        ///Название бомбы
        ///</summary>
        [JsonProperty("bomb_name")]
        public string BombName {get; set;}

        ///<summary>
        ///Крейсерская скорость (узлы)
        ///</summary>
        [JsonProperty("cruise_speed")]
        public Int64? CruiseSpeed {get; set;}

        ///<summary>
        ///Идентификатор пикирующих бомбардировщиков
        ///</summary>
        [JsonProperty("dive_bomber_id")]
        public Int64? DiveBomberId {get; set;}

        ///<summary>
        ///Строковый идентификатор пикирующих бомбардировщиков
        ///</summary>
        [JsonProperty("dive_bomber_id_str")]
        public string DiveBomberIdStr {get; set;}

        ///<summary>
        ///Максимальный урон бомбой
        ///</summary>
        [JsonProperty("max_damage")]
        public Int64? MaxDamage {get; set;}

        ///<summary>
        ///Живучесть
        ///</summary>
        [JsonProperty("max_health")]
        public Int64? MaxHealth {get; set;}

        ///<summary>
        ///Название эскадрильи
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Время подготовки к взлёту
        ///</summary>
        [JsonProperty("prepare_time")]
        public Int64? PrepareTime {get; set;}

        ///<summary>
        ///Количество эскадрилий
        ///</summary>
        [JsonProperty("squadrons")]
        public Int64? Squadrons {get; set;}

        ///<summary>
        ///Точность
        ///</summary>
        [JsonProperty("accuracy")]
        public WowsEncyclopediaShipprofileDive_bomberAccuracy Accuracy {get; set;}

        ///<summary>
        ///Количество самолётов в одной эскадрилье
        ///</summary>
        [JsonProperty("count_in_squadron")]
        public WowsEncyclopediaShipprofileDive_bomberCount_in_squadron CountInSquadron {get; set;}
    }
    public class WowsEncyclopediaShipprofileDive_bomberAccuracy
    {

        ///<summary>
        ///Максимальное значение
        ///</summary>
        [JsonProperty("max")]
        public double Max {get; set;}

        ///<summary>
        ///Минимальное значение
        ///</summary>
        [JsonProperty("min")]
        public double Min {get; set;}
    }

    public class WowsEncyclopediaShipprofileDive_bomberCount_in_squadron
    {

        ///<summary>
        ///Максимальное значение
        ///</summary>
        [JsonProperty("max")]
        public Int64? Max {get; set;}

        ///<summary>
        ///Минимальное значение
        ///</summary>
        [JsonProperty("min")]
        public Int64? Min {get; set;}
    }


    public class WowsEncyclopediaShipprofileEngine
    {

        ///<summary>
        ///Идентификатор двигателя
        ///</summary>
        [JsonProperty("engine_id")]
        public Int64? EngineId {get; set;}

        ///<summary>
        ///Строковый идентификатор двигателя
        ///</summary>
        [JsonProperty("engine_id_str")]
        public string EngineIdStr {get; set;}

        ///<summary>
        ///Максимальная скорость хода (узлы)
        ///</summary>
        [JsonProperty("max_speed")]
        public double MaxSpeed {get; set;}
    }

    public class WowsEncyclopediaShipprofileFighters
    {

        ///<summary>
        ///Средний урон в секунду
        ///</summary>
        [JsonProperty("avg_damage")]
        public Int64? AvgDamage {get; set;}

        ///<summary>
        ///Крейсерская скорость (узлы)
        ///</summary>
        [JsonProperty("cruise_speed")]
        public Int64? CruiseSpeed {get; set;}

        ///<summary>
        ///Идентификатор истребителей
        ///</summary>
        [JsonProperty("fighters_id")]
        public Int64? FightersId {get; set;}

        ///<summary>
        ///Строковый идентификатор истребителей
        ///</summary>
        [JsonProperty("fighters_id_str")]
        public string FightersIdStr {get; set;}

        ///<summary>
        ///Боекомплект
        ///</summary>
        [JsonProperty("max_ammo")]
        public Int64? MaxAmmo {get; set;}

        ///<summary>
        ///Живучесть
        ///</summary>
        [JsonProperty("max_health")]
        public Int64? MaxHealth {get; set;}

        ///<summary>
        ///Название эскадрильи
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Время подготовки к взлёту
        ///</summary>
        [JsonProperty("prepare_time")]
        public Int64? PrepareTime {get; set;}

        ///<summary>
        ///Количество эскадрилий
        ///</summary>
        [JsonProperty("squadrons")]
        public Int64? Squadrons {get; set;}

        ///<summary>
        ///Количество самолётов в одной эскадрилье
        ///</summary>
        [JsonProperty("count_in_squadron")]
        public WowsEncyclopediaShipprofileFightersCount_in_squadron CountInSquadron {get; set;}
    }
    public class WowsEncyclopediaShipprofileFightersCount_in_squadron
    {

        ///<summary>
        ///Максимальное значение
        ///</summary>
        [JsonProperty("max")]
        public Int64? Max {get; set;}

        ///<summary>
        ///Минимальное значение
        ///</summary>
        [JsonProperty("min")]
        public Int64? Min {get; set;}
    }


    public class WowsEncyclopediaShipprofileFire_control
    {

        ///<summary>
        ///Дальность стрельбы
        ///</summary>
        [JsonProperty("distance")]
        public double Distance {get; set;}

        ///<summary>
        ///Увеличение дальности стрельбы (%)
        ///</summary>
        [JsonProperty("distance_increase")]
        public Int64? DistanceIncrease {get; set;}

        ///<summary>
        ///Идентификатор системы управления огнём
        ///</summary>
        [JsonProperty("fire_control_id")]
        public Int64? FireControlId {get; set;}

        ///<summary>
        ///Строковый идентификатор системы управления огнём
        ///</summary>
        [JsonProperty("fire_control_id_str")]
        public string FireControlIdStr {get; set;}
    }

    public class WowsEncyclopediaShipprofileFlight_control
    {

        ///<summary>
        ///Количество эскадрилий бомбардировщиков
        ///</summary>
        [JsonProperty("bomber_squadrons")]
        public Int64? BomberSquadrons {get; set;}

        ///<summary>
        ///Количество эскадрилий истребителей
        ///</summary>
        [JsonProperty("fighter_squadrons")]
        public Int64? FighterSquadrons {get; set;}

        ///<summary>
        ///Идентификатор полётного контроля
        ///</summary>
        [JsonProperty("flight_control_id")]
        public Int64? FlightControlId {get; set;}

        ///<summary>
        ///Строковый идентификатор полётного контроля
        ///</summary>
        [JsonProperty("flight_control_id_str")]
        public string FlightControlIdStr {get; set;}

        ///<summary>
        ///Количество эскадрилий торпедоносцев
        ///</summary>
        [JsonProperty("torpedo_squadrons")]
        public Int64? TorpedoSquadrons {get; set;}
    }

    public class WowsEncyclopediaShipprofileHull
    {

        ///<summary>
        ///Точки ПВО
        ///</summary>
        [JsonProperty("anti_aircraft_barrels")]
        public Int64? AntiAircraftBarrels {get; set;}

        ///<summary>
        ///Количество башен главного калибра
        ///</summary>
        [JsonProperty("artillery_barrels")]
        public Int64? ArtilleryBarrels {get; set;}

        ///<summary>
        ///Башни вспомогательного калибра
        ///</summary>
        [JsonProperty("atba_barrels")]
        public Int64? AtbaBarrels {get; set;}

        ///<summary>
        ///Боеспособность
        ///</summary>
        [JsonProperty("health")]
        public Int64? Health {get; set;}

        ///<summary>
        ///Идентификатор корпуса
        ///</summary>
        [JsonProperty("hull_id")]
        public Int64? HullId {get; set;}

        ///<summary>
        ///Строковый идентификатор корпуса
        ///</summary>
        [JsonProperty("hull_id_str")]
        public string HullIdStr {get; set;}

        ///<summary>
        ///Вместимость ангара
        ///</summary>
        [JsonProperty("planes_amount")]
        public Int64? PlanesAmount {get; set;}

        ///<summary>
        ///Торпедные аппараты
        ///</summary>
        [JsonProperty("torpedoes_barrels")]
        public Int64? TorpedoesBarrels {get; set;}

        ///<summary>
        ///Бронирование (мм)
        ///</summary>
        [JsonProperty("range")]
        public WowsEncyclopediaShipprofileHullRange Range {get; set;}
    }
    public class WowsEncyclopediaShipprofileHullRange
    {

        ///<summary>
        ///Максимальное значение
        ///</summary>
        [JsonProperty("max")]
        public Int64? Max {get; set;}

        ///<summary>
        ///Минимальное значение
        ///</summary>
        [JsonProperty("min")]
        public Int64? Min {get; set;}
    }


    public class WowsEncyclopediaShipprofileMobility
    {

        ///<summary>
        ///Максимальная скорость (узлы)
        ///</summary>
        [JsonProperty("max_speed")]
        public double MaxSpeed {get; set;}

        ///<summary>
        ///Время перекладки руля (с)
        ///</summary>
        [JsonProperty("rudder_time")]
        public double RudderTime {get; set;}

        ///<summary>
        ///Показатель манёвренности (%)
        ///</summary>
        [JsonProperty("total")]
        public Int64? Total {get; set;}

        ///<summary>
        ///Радиус циркуляции (м)
        ///</summary>
        [JsonProperty("turning_radius")]
        public Int64? TurningRadius {get; set;}
    }

    public class WowsEncyclopediaShipprofileTorpedo_bomber
    {

        ///<summary>
        ///Крейсерская скорость (узлы)
        ///</summary>
        [JsonProperty("cruise_speed")]
        public Int64? CruiseSpeed {get; set;}

        ///<summary>
        ///Максимальный урон бомбой
        ///</summary>
        [JsonProperty("max_damage")]
        public Int64? MaxDamage {get; set;}

        ///<summary>
        ///Живучесть
        ///</summary>
        [JsonProperty("max_health")]
        public Int64? MaxHealth {get; set;}

        ///<summary>
        ///Название эскадрильи
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Время подготовки к взлёту
        ///</summary>
        [JsonProperty("prepare_time")]
        public Int64? PrepareTime {get; set;}

        ///<summary>
        ///Количество эскадрилий
        ///</summary>
        [JsonProperty("squadrons")]
        public Int64? Squadrons {get; set;}

        ///<summary>
        ///Идентификатор торпедоносцев
        ///</summary>
        [JsonProperty("torpedo_bomber_id")]
        public Int64? TorpedoBomberId {get; set;}

        ///<summary>
        ///Строковый идентификатор торпедоносцев
        ///</summary>
        [JsonProperty("torpedo_bomber_id_str")]
        public string TorpedoBomberIdStr {get; set;}

        ///<summary>
        ///Максимальный урон торпедой
        ///</summary>
        [JsonProperty("torpedo_damage")]
        public Int64? TorpedoDamage {get; set;}

        ///<summary>
        ///Дальность стрельбы
        ///</summary>
        [JsonProperty("torpedo_distance")]
        public double TorpedoDistance {get; set;}

        ///<summary>
        ///Максимальная скорость (узлы)
        ///</summary>
        [JsonProperty("torpedo_max_speed")]
        public Int64? TorpedoMaxSpeed {get; set;}

        ///<summary>
        ///Название торпеды
        ///</summary>
        [JsonProperty("torpedo_name")]
        public string TorpedoName {get; set;}

        ///<summary>
        ///Количество самолётов в одной эскадрилье
        ///</summary>
        [JsonProperty("count_in_squadron")]
        public WowsEncyclopediaShipprofileTorpedo_bomberCount_in_squadron CountInSquadron {get; set;}
    }
    public class WowsEncyclopediaShipprofileTorpedo_bomberCount_in_squadron
    {

        ///<summary>
        ///Максимальное значение
        ///</summary>
        [JsonProperty("max")]
        public Int64? Max {get; set;}

        ///<summary>
        ///Минимальное значение
        ///</summary>
        [JsonProperty("min")]
        public Int64? Min {get; set;}
    }


    public class WowsEncyclopediaShipprofileTorpedoes
    {

        ///<summary>
        ///Дальность стрельбы
        ///</summary>
        [JsonProperty("distance")]
        public double Distance {get; set;}

        ///<summary>
        ///Максимальный урон
        ///</summary>
        [JsonProperty("max_damage")]
        public Int64? MaxDamage {get; set;}

        ///<summary>
        ///Время перезарядки (с)
        ///</summary>
        [JsonProperty("reload_time")]
        public Int64? ReloadTime {get; set;}

        ///<summary>
        ///Время поворота на 180 градусов (с)
        ///</summary>
        [JsonProperty("rotation_time")]
        public double RotationTime {get; set;}

        ///<summary>
        ///Торпеда
        ///</summary>
        [JsonProperty("torpedo_name")]
        public string TorpedoName {get; set;}

        ///<summary>
        ///Скорость хода торпед (узлы)
        ///</summary>
        [JsonProperty("torpedo_speed")]
        public Int64? TorpedoSpeed {get; set;}

        ///<summary>
        ///Идентификатор торпедного аппарата
        ///</summary>
        [JsonProperty("torpedoes_id")]
        public Int64? TorpedoesId {get; set;}

        ///<summary>
        ///Строковый идентификатор торпедного аппарата
        ///</summary>
        [JsonProperty("torpedoes_id_str")]
        public string TorpedoesIdStr {get; set;}

        ///<summary>
        ///Слоты торпедных аппаратов
        ///</summary>
        [JsonProperty("slots")]
        public WowsEncyclopediaShipprofileTorpedoesSlots Slots {get; set;}
    }
    public class WowsEncyclopediaShipprofileTorpedoesSlots
    {

        ///<summary>
        ///Количество труб в торпедном аппарате
        ///</summary>
        [JsonProperty("barrels")]
        public Int64? Barrels {get; set;}

        ///<summary>
        ///Калибр
        ///</summary>
        [JsonProperty("caliber")]
        public Int64? Caliber {get; set;}

        ///<summary>
        ///Торпедные аппараты
        ///</summary>
        [JsonProperty("guns")]
        public Int64? Guns {get; set;}

        ///<summary>
        ///Название
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}
    }


    public class WowsEncyclopediaShipprofileWeaponry
    {

        ///<summary>
        ///Авиации (%)
        ///</summary>
        [JsonProperty("aircraft")]
        public Int64? Aircraft {get; set;}

        ///<summary>
        ///ПВО (%)
        ///</summary>
        [JsonProperty("anti_aircraft")]
        public Int64? AntiAircraft {get; set;}

        ///<summary>
        ///Артиллерии (%)
        ///</summary>
        [JsonProperty("artillery")]
        public Int64? Artillery {get; set;}

        ///<summary>
        ///Торпед (%)
        ///</summary>
        [JsonProperty("torpedoes")]
        public Int64? Torpedoes {get; set;}
    }



    ///<summary>
    /// Модули
    /// https://ru.wargaming.net/developers/api_reference/wows/encyclopedia/modules/
    ///</summary>
    [Method(Url="api.worldofwarships.ru/wows/encyclopedia/modules/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wows/encyclopedia/modules/")]
    public class RequestWowsEncyclopediaModules:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"cs" — Čeština 
///"de" — Deutsch 
///"en" — English 
///"es" — Español 
///"fr" — Français 
///"ja" — 日本語 
///"pl" — Polski 
///"ru" — Русский (используется по умолчанию)
///"th" — ไทย 
///"zh-tw" — 繁體中文 
///"tr" — Türkçe 
///"zh-cn" — 中文 
///"pt-br" — Português do Brasil 
///"es-mx" — Español (México)
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Идентификатор модуля
        ///numeric
        ///</summary>
        [JsonProperty("module_id")]
        public string ModuleId {get; set;}

        ///<summary>
        ///Тип модуля
        ///string
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}
    }
    
    ///<summary>
    ///Модули
    ///</summary>
    public class ResponseWowsEncyclopediaModules:IResponse
    {

        ///<summary>
        ///Ссылка на изображение
        ///</summary>
        [JsonProperty("image")]
        public string Image {get; set;}

        ///<summary>
        ///Идентификатор модуля
        ///</summary>
        [JsonProperty("module_id")]
        public Int64? ModuleId {get; set;}

        ///<summary>
        ///Строковый идентификатор модуля
        ///</summary>
        [JsonProperty("module_id_str")]
        public string ModuleIdStr {get; set;}

        ///<summary>
        ///Название модуля
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Стоимость в кредитах
        ///</summary>
        [JsonProperty("price_credit")]
        public Int64? PriceCredit {get; set;}

        ///<summary>
        ///Тег
        ///</summary>
        [JsonProperty("tag")]
        public string Tag {get; set;}

        ///<summary>
        ///Тип модуля
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}

        ///<summary>
        ///Характеристики модуля, значения связанные с типом модуля
        ///</summary>
        [JsonProperty("profile")]
        public WowsEncyclopediaModulesProfile Profile {get; set;}
    }
    public class WowsEncyclopediaModulesProfile
    {

        ///<summary>
        ///Главный калибр
        ///</summary>
        [JsonProperty("artillery")]
        public WowsEncyclopediaModulesProfileArtillery Artillery {get; set;}

        ///<summary>
        ///Пикирующие бомбардировщики
        ///</summary>
        [JsonProperty("dive_bomber")]
        public WowsEncyclopediaModulesProfileDive_bomber DiveBomber {get; set;}

        ///<summary>
        ///Двигатель
        ///</summary>
        [JsonProperty("engine")]
        public WowsEncyclopediaModulesProfileEngine Engine {get; set;}

        ///<summary>
        ///Истребители
        ///</summary>
        [JsonProperty("fighter")]
        public WowsEncyclopediaModulesProfileFighter Fighter {get; set;}

        ///<summary>
        ///Система управления огнём
        ///</summary>
        [JsonProperty("fire_control")]
        public WowsEncyclopediaModulesProfileFire_control FireControl {get; set;}

        ///<summary>
        ///Полётный контроль
        ///</summary>
        [JsonProperty("flight_control")]
        public WowsEncyclopediaModulesProfileFlight_control FlightControl {get; set;}

        ///<summary>
        ///Корпус
        ///</summary>
        [JsonProperty("hull")]
        public WowsEncyclopediaModulesProfileHull Hull {get; set;}

        ///<summary>
        ///Торпедоносцы
        ///</summary>
        [JsonProperty("torpedo_bomber")]
        public WowsEncyclopediaModulesProfileTorpedo_bomber TorpedoBomber {get; set;}

        ///<summary>
        ///Торпедные аппараты
        ///</summary>
        [JsonProperty("torpedoes")]
        public WowsEncyclopediaModulesProfileTorpedoes Torpedoes {get; set;}
    }
    public class WowsEncyclopediaModulesProfileArtillery
    {

        ///<summary>
        ///Скорострельность (выстр / мин)
        ///</summary>
        [JsonProperty("gun_rate")]
        public double GunRate {get; set;}

        ///<summary>
        ///Максимальный урон бронебойным снарядом
        ///</summary>
        [JsonProperty("max_damage_AP")]
        public Int64? MaxDamageAP {get; set;}

        ///<summary>
        ///Максимальный урон осколочно-фугасным снарядом
        ///</summary>
        [JsonProperty("max_damage_HE")]
        public Int64? MaxDamageHE {get; set;}

        ///<summary>
        ///Время поворота на 180 градусов (с)
        ///</summary>
        [JsonProperty("rotation_time")]
        public double RotationTime {get; set;}
    }

    public class WowsEncyclopediaModulesProfileDive_bomber
    {

        ///<summary>
        ///Вероятность пожара при попадании в цель бомбой (%)
        ///</summary>
        [JsonProperty("bomb_burn_probability")]
        public double BombBurnProbability {get; set;}

        ///<summary>
        ///Крейсерская скорость (узлы)
        ///</summary>
        [JsonProperty("cruise_speed")]
        public Int64? CruiseSpeed {get; set;}

        ///<summary>
        ///Максимальный урон бомбой
        ///</summary>
        [JsonProperty("max_damage")]
        public Int64? MaxDamage {get; set;}

        ///<summary>
        ///Живучесть
        ///</summary>
        [JsonProperty("max_health")]
        public Int64? MaxHealth {get; set;}

        ///<summary>
        ///Точность
        ///</summary>
        [JsonProperty("accuracy")]
        public WowsEncyclopediaModulesProfileDive_bomberAccuracy Accuracy {get; set;}
    }
    public class WowsEncyclopediaModulesProfileDive_bomberAccuracy
    {

        ///<summary>
        ///Максимальное значение
        ///</summary>
        [JsonProperty("max")]
        public double Max {get; set;}

        ///<summary>
        ///Минимальное значение
        ///</summary>
        [JsonProperty("min")]
        public double Min {get; set;}
    }


    public class WowsEncyclopediaModulesProfileEngine
    {

        ///<summary>
        ///Максимальная скорость хода (узлы)
        ///</summary>
        [JsonProperty("max_speed")]
        public double MaxSpeed {get; set;}
    }

    public class WowsEncyclopediaModulesProfileFighter
    {

        ///<summary>
        ///Средний урон в секунду
        ///</summary>
        [JsonProperty("avg_damage")]
        public Int64? AvgDamage {get; set;}

        ///<summary>
        ///Крейсерская скорость (узлы)
        ///</summary>
        [JsonProperty("cruise_speed")]
        public Int64? CruiseSpeed {get; set;}

        ///<summary>
        ///Боекомплект
        ///</summary>
        [JsonProperty("max_ammo")]
        public Int64? MaxAmmo {get; set;}

        ///<summary>
        ///Живучесть
        ///</summary>
        [JsonProperty("max_health")]
        public Int64? MaxHealth {get; set;}
    }

    public class WowsEncyclopediaModulesProfileFire_control
    {

        ///<summary>
        ///Дальность стрельбы
        ///</summary>
        [JsonProperty("distance")]
        public double Distance {get; set;}

        ///<summary>
        ///Увеличение дальности стрельбы (%)
        ///</summary>
        [JsonProperty("distance_increase")]
        public Int64? DistanceIncrease {get; set;}
    }

    public class WowsEncyclopediaModulesProfileFlight_control
    {

        ///<summary>
        ///Количество эскадрилий бомбардировщиков
        ///</summary>
        [JsonProperty("bomber_squadrons")]
        public Int64? BomberSquadrons {get; set;}

        ///<summary>
        ///Количество эскадрилий истребителей
        ///</summary>
        [JsonProperty("fighter_squadrons")]
        public Int64? FighterSquadrons {get; set;}

        ///<summary>
        ///Количество эскадрилий торпедоносцев
        ///</summary>
        [JsonProperty("torpedo_squadrons")]
        public Int64? TorpedoSquadrons {get; set;}
    }

    public class WowsEncyclopediaModulesProfileHull
    {

        ///<summary>
        ///Точки ПВО
        ///</summary>
        [JsonProperty("anti_aircraft_barrels")]
        public Int64? AntiAircraftBarrels {get; set;}

        ///<summary>
        ///Количество башен главного калибра
        ///</summary>
        [JsonProperty("artillery_barrels")]
        public Int64? ArtilleryBarrels {get; set;}

        ///<summary>
        ///Башни вспомогательного калибра
        ///</summary>
        [JsonProperty("atba_barrels")]
        public Int64? AtbaBarrels {get; set;}

        ///<summary>
        ///Боеспособность
        ///</summary>
        [JsonProperty("health")]
        public Int64? Health {get; set;}

        ///<summary>
        ///Вместимость ангара
        ///</summary>
        [JsonProperty("planes_amount")]
        public Int64? PlanesAmount {get; set;}

        ///<summary>
        ///Торпедные аппараты
        ///</summary>
        [JsonProperty("torpedoes_barrels")]
        public Int64? TorpedoesBarrels {get; set;}

        ///<summary>
        ///Бронирование (мм)
        ///</summary>
        [JsonProperty("range")]
        public WowsEncyclopediaModulesProfileHullRange Range {get; set;}
    }
    public class WowsEncyclopediaModulesProfileHullRange
    {

        ///<summary>
        ///Максимальное значение
        ///</summary>
        [JsonProperty("max")]
        public Int64? Max {get; set;}

        ///<summary>
        ///Минимальное значение
        ///</summary>
        [JsonProperty("min")]
        public Int64? Min {get; set;}
    }


    public class WowsEncyclopediaModulesProfileTorpedo_bomber
    {

        ///<summary>
        ///Крейсерская скорость (узлы)
        ///</summary>
        [JsonProperty("cruise_speed")]
        public Int64? CruiseSpeed {get; set;}

        ///<summary>
        ///Дальность стрельбы
        ///</summary>
        [JsonProperty("distance")]
        public double Distance {get; set;}

        ///<summary>
        ///Максимальный урон бомбой
        ///</summary>
        [JsonProperty("max_damage")]
        public Int64? MaxDamage {get; set;}

        ///<summary>
        ///Живучесть
        ///</summary>
        [JsonProperty("max_health")]
        public Int64? MaxHealth {get; set;}

        ///<summary>
        ///Максимальный урон торпедой
        ///</summary>
        [JsonProperty("torpedo_damage")]
        public Int64? TorpedoDamage {get; set;}

        ///<summary>
        ///Максимальная скорость (узлы)
        ///</summary>
        [JsonProperty("torpedo_max_speed")]
        public Int64? TorpedoMaxSpeed {get; set;}

        ///<summary>
        ///Название торпеды
        ///</summary>
        [JsonProperty("torpedo_name")]
        public string TorpedoName {get; set;}
    }

    public class WowsEncyclopediaModulesProfileTorpedoes
    {

        ///<summary>
        ///Дальность стрельбы
        ///</summary>
        [JsonProperty("distance")]
        public double Distance {get; set;}

        ///<summary>
        ///Максимальный урон
        ///</summary>
        [JsonProperty("max_damage")]
        public Int64? MaxDamage {get; set;}

        ///<summary>
        ///Время перезарядки (с)
        ///</summary>
        [JsonProperty("shot_speed")]
        public double ShotSpeed {get; set;}

        ///<summary>
        ///Скорость хода торпед (узлы)
        ///</summary>
        [JsonProperty("torpedo_speed")]
        public Int64? TorpedoSpeed {get; set;}
    }




    ///<summary>
    /// Элементы внешнего вида
    /// https://ru.wargaming.net/developers/api_reference/wows/encyclopedia/exterior/
    ///</summary>
    [Method(Url="api.worldofwarships.ru/wows/encyclopedia/exterior/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wows/encyclopedia/exterior/")]
    public class RequestWowsEncyclopediaExterior:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"cs" — Čeština 
///"de" — Deutsch 
///"en" — English 
///"es" — Español 
///"fr" — Français 
///"ja" — 日本語 
///"pl" — Polski 
///"ru" — Русский (используется по умолчанию)
///"th" — ไทย 
///"zh-tw" — 繁體中文 
///"tr" — Türkçe 
///"zh-cn" — 中文 
///"pt-br" — Português do Brasil 
///"es-mx" — Español (México)
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Идентификатор модуля
        ///numeric
        ///</summary>
        [JsonProperty("exterior_id")]
        public string ExteriorId {get; set;}

        ///<summary>
        ///Тип модуля
        ///string
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}
    }
    
    ///<summary>
    ///Элементы внешнего вида
    ///</summary>
    public class ResponseWowsEncyclopediaExterior:IResponse
    {

        ///<summary>
        ///Описание элемента внешнего вида
        ///</summary>
        [JsonProperty("description")]
        public string Description {get; set;}

        ///<summary>
        ///Идентификатор элемента внешнего вида
        ///</summary>
        [JsonProperty("exterior_id")]
        public Int64? ExteriorId {get; set;}

        ///<summary>
        ///Название элемента внешнего вида
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Стоимость элемента внешнего вида в кредитах
        ///</summary>
        [JsonProperty("price_credit")]
        public Int64? PriceCredit {get; set;}

        ///<summary>
        ///Стоимость элемента внешнего вида в дублонах
        ///</summary>
        [JsonProperty("price_gold")]
        public Int64? PriceGold {get; set;}

        ///<summary>
        ///Тип элемента внешнего вида
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}

        ///<summary>
        ///Значки элементов внешнего вида
        ///</summary>
        [JsonProperty("image")]
        public WowsEncyclopediaExteriorImage Image {get; set;}

        ///<summary>
        ///Параметры элемента внешнего вида. Только параметры, на которые влияет элемент внешнего вида, возвращаются в ответе.
        ///</summary>
        [JsonProperty("ttc_coef")]
        public WowsEncyclopediaExteriorTtc_coef TtcCoef {get; set;}
    }
    public class WowsEncyclopediaExteriorImage
    {

        ///<summary>
        ///URL к малому значку элемента внешнего вида
        ///</summary>
        [JsonProperty("small")]
        public string Small {get; set;}
    }

    public class WowsEncyclopediaExteriorTtc_coef
    {

        ///<summary>
        ///Точность стрельбы
        ///</summary>
        [JsonProperty("accuracy_coef")]
        public double AccuracyCoef {get; set;}

        ///<summary>
        ///Вероятность взрыва погреба боеприпасов
        ///</summary>
        [JsonProperty("ammo_detonation_chance_coef")]
        public double AmmoDetonationChanceCoef {get; set;}

        ///<summary>
        ///Время тушения пожара
        ///</summary>
        [JsonProperty("burning_time_coef")]
        public double BurningTimeCoef {get; set;}

        ///<summary>
        ///Кредитов, заработанных за бой
        ///</summary>
        [JsonProperty("credits_coef")]
        public double CreditsCoef {get; set;}

        ///<summary>
        ///Заметность для самолётов противника
        ///</summary>
        [JsonProperty("detect_distance_by_plane_coef")]
        public double DetectDistanceByPlaneCoef {get; set;}

        ///<summary>
        ///Заметность для кораблей противника
        ///</summary>
        [JsonProperty("detect_distance_coef")]
        public double DetectDistanceCoef {get; set;}

        ///<summary>
        ///Максимальная дальность стрельбы
        ///</summary>
        [JsonProperty("distance_coef")]
        public double DistanceCoef {get; set;}

        ///<summary>
        ///Точность стрельбы противника, ведущего огонь по вашему кораблю
        ///</summary>
        [JsonProperty("enemy_accuracy_coef")]
        public double EnemyAccuracyCoef {get; set;}

        ///<summary>
        ///Время устранения затоплений
        ///</summary>
        [JsonProperty("flooding_time_coef")]
        public double FloodingTimeCoef {get; set;}

        ///<summary>
        ///Cкорость восстановления боеспособности с использованием снаряжения «Ремонтная команда»
        ///</summary>
        [JsonProperty("health_regeneration_speed")]
        public double HealthRegenerationSpeed {get; set;}

        ///<summary>
        ///Урон, нанесённый тараном
        ///</summary>
        [JsonProperty("ram_damage_caused_coef")]
        public double RamDamageCausedCoef {get; set;}

        ///<summary>
        ///Получаемый урон при таране противника
        ///</summary>
        [JsonProperty("ram_damage_received_coef")]
        public double RamDamageReceivedCoef {get; set;}

        ///<summary>
        ///Время перезарядки
        ///</summary>
        [JsonProperty("reload_time_coef")]
        public double ReloadTimeCoef {get; set;}

        ///<summary>
        ///Стоимость ремонта корабля после боя
        ///</summary>
        [JsonProperty("repair_cost_coef")]
        public double RepairCostCoef {get; set;}

        ///<summary>
        ///Максимальная скорость
        ///</summary>
        [JsonProperty("speed_coef")]
        public double SpeedCoef {get; set;}

        ///<summary>
        ///Опыт, заработанный за бой
        ///</summary>
        [JsonProperty("xp_coef")]
        public double XpCoef {get; set;}
    }



    ///<summary>
    /// Модернизации
    /// https://ru.wargaming.net/developers/api_reference/wows/encyclopedia/upgrades/
    ///</summary>
    [Method(Url="api.worldofwarships.ru/wows/encyclopedia/upgrades/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wows/encyclopedia/upgrades/")]
    public class RequestWowsEncyclopediaUpgrades:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"cs" — Čeština 
///"de" — Deutsch 
///"en" — English 
///"es" — Español 
///"fr" — Français 
///"ja" — 日本語 
///"pl" — Polski 
///"ru" — Русский (используется по умолчанию)
///"th" — ไทย 
///"zh-tw" — 繁體中文 
///"tr" — Türkçe 
///"zh-cn" — 中文 
///"pt-br" — Português do Brasil 
///"es-mx" — Español (México)
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Идентификатор модернизации
        ///numeric, list
        ///</summary>
        [JsonProperty("upgrade_id")]
        public string UpgradeId {get; set;}
    }
    
    ///<summary>
    ///Модернизации
    ///</summary>
    public class ResponseWowsEncyclopediaUpgrades:IResponse
    {

        ///<summary>
        ///Описание
        ///</summary>
        [JsonProperty("description")]
        public string Description {get; set;}

        ///<summary>
        ///Ссылка на изображение
        ///</summary>
        [JsonProperty("image")]
        public string Image {get; set;}

        ///<summary>
        ///Название
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Стоимость в кредитах
        ///</summary>
        [JsonProperty("price_credit")]
        public Int64? PriceCredit {get; set;}

        ///<summary>
        ///Тег
        ///</summary>
        [JsonProperty("tag")]
        public string Tag {get; set;}

        ///<summary>
        ///Тип модернизации
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}

        ///<summary>
        ///Идентификатор модернизации
        ///</summary>
        [JsonProperty("upgrade_id")]
        public Int64? UpgradeId {get; set;}

        ///<summary>
        ///Характеристики модернизации, значения связанные с типом модернизации
        ///</summary>
        [JsonProperty("profile")]
        public WowsEncyclopediaUpgradesProfile Profile {get; set;}
    }
    public class WowsEncyclopediaUpgradesProfile
    {

        ///<summary>
        ///ПВО
        ///</summary>
        [JsonProperty("anti_aircraft")]
        public WowsEncyclopediaUpgradesProfileAnti_aircraft AntiAircraft {get; set;}

        ///<summary>
        ///Орудия главного калибра
        ///</summary>
        [JsonProperty("artillery")]
        public WowsEncyclopediaUpgradesProfileArtillery Artillery {get; set;}

        ///<summary>
        ///Противоминный калибр
        ///</summary>
        [JsonProperty("atba")]
        public WowsEncyclopediaUpgradesProfileAtba Atba {get; set;}

        ///<summary>
        ///Система маскировки
        ///</summary>
        [JsonProperty("concealment")]
        public WowsEncyclopediaUpgradesProfileConcealment Concealment {get; set;}

        ///<summary>
        ///Система борьбы за живучесть
        ///</summary>
        [JsonProperty("damage_control")]
        public WowsEncyclopediaUpgradesProfileDamage_control DamageControl {get; set;}

        ///<summary>
        ///Энергетическая установка
        ///</summary>
        [JsonProperty("engine")]
        public WowsEncyclopediaUpgradesProfileEngine Engine {get; set;}

        ///<summary>
        ///Система управления огнём
        ///</summary>
        [JsonProperty("fire_control")]
        public WowsEncyclopediaUpgradesProfileFire_control FireControl {get; set;}

        ///<summary>
        ///Полётный контроль
        ///</summary>
        [JsonProperty("flight_control")]
        public WowsEncyclopediaUpgradesProfileFlight_control FlightControl {get; set;}

        ///<summary>
        ///Авиагруппы
        ///</summary>
        [JsonProperty("planes")]
        public WowsEncyclopediaUpgradesProfilePlanes Planes {get; set;}

        ///<summary>
        ///Система обнаружения
        ///</summary>
        [JsonProperty("spotting")]
        public WowsEncyclopediaUpgradesProfileSpotting Spotting {get; set;}

        ///<summary>
        ///Рулевые машины
        ///</summary>
        [JsonProperty("steering")]
        public WowsEncyclopediaUpgradesProfileSteering Steering {get; set;}

        ///<summary>
        ///Торпедные аппараты
        ///</summary>
        [JsonProperty("torpedoes")]
        public WowsEncyclopediaUpgradesProfileTorpedoes Torpedoes {get; set;}
    }
    public class WowsEncyclopediaUpgradesProfileAnti_aircraft
    {

        ///<summary>
        ///Коэффициент увеличения дальности стрельбы
        ///</summary>
        [JsonProperty("distance_coef")]
        public double DistanceCoef {get; set;}

        ///<summary>
        ///Коэффициент увеличения эффективности вооружения
        ///</summary>
        [JsonProperty("efficiency_coef")]
        public double EfficiencyCoef {get; set;}

        ///<summary>
        ///Коэффициент увеличения живучести установок ПВО
        ///</summary>
        [JsonProperty("health_coef")]
        public double HealthCoef {get; set;}
    }

    public class WowsEncyclopediaUpgradesProfileArtillery
    {

        ///<summary>
        ///Коэффициент уменьшения вероятности критического повреждения погреба боеприпасов
        ///</summary>
        [JsonProperty("ammo_critical_damage_chance_coef")]
        public double AmmoCriticalDamageChanceCoef {get; set;}

        ///<summary>
        ///Коэффициент уменьшения вероятности взрыва погреба боеприпасов
        ///</summary>
        [JsonProperty("ammo_detonation_chance_coef")]
        public double AmmoDetonationChanceCoef {get; set;}

        ///<summary>
        ///Коэффициент уменьшения времени ремонта погреба боеприпасов
        ///</summary>
        [JsonProperty("ammo_repair_time_coef")]
        public double AmmoRepairTimeCoef {get; set;}

        ///<summary>
        ///Коэффициент уменьшения вероятности критического повреждения главного калибра
        ///</summary>
        [JsonProperty("critical_damage_chance_coef")]
        public double CriticalDamageChanceCoef {get; set;}

        ///<summary>
        ///Коэффициент уменьшения времени перезарядки главного калибра
        ///</summary>
        [JsonProperty("reload_time_coef")]
        public double ReloadTimeCoef {get; set;}

        ///<summary>
        ///Коэффициент уменьшения времени ремонта главного калибра
        ///</summary>
        [JsonProperty("repair_time_coef")]
        public double RepairTimeCoef {get; set;}

        ///<summary>
        ///Коэффициент уменьшения скорости поворота башен главного калибра
        ///</summary>
        [JsonProperty("rotation_time_coef")]
        public double RotationTimeCoef {get; set;}
    }

    public class WowsEncyclopediaUpgradesProfileAtba
    {

        ///<summary>
        ///Коэффициент увеличения точности стрельбы
        ///</summary>
        [JsonProperty("accuracy_coef")]
        public double AccuracyCoef {get; set;}

        ///<summary>
        ///Коэффициент увеличения дальности стрельбы
        ///</summary>
        [JsonProperty("distance_coef")]
        public double DistanceCoef {get; set;}

        ///<summary>
        ///Коэффициент увеличения живучести установок ПМК
        ///</summary>
        [JsonProperty("health_coef")]
        public double HealthCoef {get; set;}

        ///<summary>
        ///Коэффициент уменьшения времени перезарядки
        ///</summary>
        [JsonProperty("reload_time_coef")]
        public double ReloadTimeCoef {get; set;}
    }

    public class WowsEncyclopediaUpgradesProfileConcealment
    {

        ///<summary>
        ///Коэффициент уменьшения заметности
        ///</summary>
        [JsonProperty("detect_distance_coef")]
        public double DetectDistanceCoef {get; set;}
    }

    public class WowsEncyclopediaUpgradesProfileDamage_control
    {

        ///<summary>
        ///Коэффициент уменьшения времени тушения пожара
        ///</summary>
        [JsonProperty("burning_time_coef")]
        public double BurningTimeCoef {get; set;}

        ///<summary>
        ///Коэффициент уменьшения вероятности пожара
        ///</summary>
        [JsonProperty("fire_starting_chance_coef")]
        public double FireStartingChanceCoef {get; set;}

        ///<summary>
        ///Коэффициент уменьшения вероятности затопления
        ///</summary>
        [JsonProperty("flood_starting_chance_coef")]
        public double FloodStartingChanceCoef {get; set;}

        ///<summary>
        ///Коэффициент уменьшения времени устранения затопления
        ///</summary>
        [JsonProperty("flooding_time_coef")]
        public double FloodingTimeCoef {get; set;}
    }

    public class WowsEncyclopediaUpgradesProfileEngine
    {

        ///<summary>
        ///Коэффициент уменьшения вероятности критического повреждения
        ///</summary>
        [JsonProperty("critical_damage_chance_coef")]
        public double CriticalDamageChanceCoef {get; set;}

        ///<summary>
        ///Коэффициент уменьшения времени набора максимальной скорости назад
        ///</summary>
        [JsonProperty("max_backward_power_coef")]
        public double MaxBackwardPowerCoef {get; set;}

        ///<summary>
        ///Коэффициент уменьшения времени набора максимальной скорости вперёд
        ///</summary>
        [JsonProperty("max_forward_power_coef")]
        public double MaxForwardPowerCoef {get; set;}

        ///<summary>
        ///Коэффициент уменьшения времени ремонта
        ///</summary>
        [JsonProperty("repair_time_coef")]
        public double RepairTimeCoef {get; set;}
    }

    public class WowsEncyclopediaUpgradesProfileFire_control
    {

        ///<summary>
        ///Коэффициент увеличения точности стрельбы
        ///</summary>
        [JsonProperty("accuracy_coef")]
        public double AccuracyCoef {get; set;}

        ///<summary>
        ///Коэффициент увеличения дальности стрельбы
        ///</summary>
        [JsonProperty("distance_coef")]
        public double DistanceCoef {get; set;}
    }

    public class WowsEncyclopediaUpgradesProfileFlight_control
    {

        ///<summary>
        ///Коэффициент уменьшения времени подготовки самолётов
        ///</summary>
        [JsonProperty("prepare_time_coef")]
        public double PrepareTimeCoef {get; set;}

        ///<summary>
        ///Коэффициент увеличения скорости самолётов
        ///</summary>
        [JsonProperty("speed_coef")]
        public double SpeedCoef {get; set;}
    }

    public class WowsEncyclopediaUpgradesProfilePlanes
    {

        ///<summary>
        ///Коэффициент увеличения живучести бомбардировщиков
        ///</summary>
        [JsonProperty("bomber_health_coef")]
        public double BomberHealthCoef {get; set;}

        ///<summary>
        ///Коэффициент увеличения эффективности стрелкового вооружения
        ///</summary>
        [JsonProperty("efficiency_coef")]
        public double EfficiencyCoef {get; set;}

        ///<summary>
        ///Коэффициент увеличения живучести истребителей
        ///</summary>
        [JsonProperty("fighter_health_coef")]
        public double FighterHealthCoef {get; set;}
    }

    public class WowsEncyclopediaUpgradesProfileSpotting
    {

        ///<summary>
        ///Коэффициент увеличения дальности обнаружения
        ///</summary>
        [JsonProperty("spot_distance_coef")]
        public double SpotDistanceCoef {get; set;}
    }

    public class WowsEncyclopediaUpgradesProfileSteering
    {

        ///<summary>
        ///Коэффициент уменьшения вероятности критического повреждения
        ///</summary>
        [JsonProperty("critical_damage_chance_coef")]
        public double CriticalDamageChanceCoef {get; set;}

        ///<summary>
        ///Коэффициент уменьшения времени ремонта
        ///</summary>
        [JsonProperty("repair_time_coef")]
        public double RepairTimeCoef {get; set;}

        ///<summary>
        ///Коэффициент уменьшения времени перекладки рулей с борта на борт
        ///</summary>
        [JsonProperty("rudder_time_coef")]
        public double RudderTimeCoef {get; set;}
    }

    public class WowsEncyclopediaUpgradesProfileTorpedoes
    {

        ///<summary>
        ///Коэффициент уменьшения вероятности критического повреждения
        ///</summary>
        [JsonProperty("critical_damage_chance_coef")]
        public double CriticalDamageChanceCoef {get; set;}

        ///<summary>
        ///Коэффициент уменьшения времени перезарядки
        ///</summary>
        [JsonProperty("reload_time_coef")]
        public double ReloadTimeCoef {get; set;}

        ///<summary>
        ///Коэффициент уменьшения времени ремонта
        ///</summary>
        [JsonProperty("repair_time_coef")]
        public double RepairTimeCoef {get; set;}

        ///<summary>
        ///Коэффициент увеличения скорости поворота
        ///</summary>
        [JsonProperty("rotation_time_coef")]
        public double RotationTimeCoef {get; set;}
    }




    ///<summary>
    /// Информация об уровнях послужного списка
    /// https://ru.wargaming.net/developers/api_reference/wows/encyclopedia/accountlevels/
    ///</summary>
    [Method(Url="api.worldofwarships.ru/wows/encyclopedia/accountlevels/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wows/encyclopedia/accountlevels/")]
    public class RequestWowsEncyclopediaAccountlevels:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}
    }
    
    ///<summary>
    ///Информация об уровнях послужного списка
    ///</summary>
    public class ResponseWowsEncyclopediaAccountlevels:IResponse
    {

        ///<summary>
        ///URL к значку уровня послужного списка
        ///</summary>
        [JsonProperty("image")]
        public string Image {get; set;}

        ///<summary>
        ///Очки для достижения уровня послужного списка
        ///</summary>
        [JsonProperty("points")]
        public Int64? Points {get; set;}

        ///<summary>
        ///Уровень послужного списка
        ///</summary>
        [JsonProperty("tier")]
        public Int64? Tier {get; set;}
    }


    ///<summary>
    /// Командиры
    /// https://ru.wargaming.net/developers/api_reference/wows/encyclopedia/crews/
    ///</summary>
    [Method(Url="api.worldofwarships.ru/wows/encyclopedia/crews/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wows/encyclopedia/crews/")]
    public class RequestWowsEncyclopediaCrews:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"cs" — Čeština 
///"de" — Deutsch 
///"en" — English 
///"es" — Español 
///"fr" — Français 
///"ja" — 日本語 
///"pl" — Polski 
///"ru" — Русский (используется по умолчанию)
///"th" — ไทย 
///"zh-tw" — 繁體中文 
///"tr" — Türkçe 
///"zh-cn" — 中文 
///"pt-br" — Português do Brasil 
///"es-mx" — Español (México)
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Идентификатор Командующего
        ///numeric, list
        ///</summary>
        [JsonProperty("commander_id")]
        public string CommanderId {get; set;}
    }
    
    ///<summary>
    ///Командиры
    ///</summary>
    public class ResponseWowsEncyclopediaCrews:IResponse
    {

        ///<summary>
        ///Стоимость базовой подготовки
        ///</summary>
        [JsonProperty("base_training_hire_price")]
        public Int64? BaseTrainingHirePrice {get; set;}

        ///<summary>
        ///Уровень базовой подготовки
        ///</summary>
        [JsonProperty("base_training_level")]
        public Int64? BaseTrainingLevel {get; set;}

        ///<summary>
        ///Имена командиров
        ///</summary>
        [JsonProperty("first_names")]
        public string[] FirstNames {get; set;}

        ///<summary>
        ///Стоимость переподготовки в дублонах
        ///</summary>
        [JsonProperty("gold_retraining_price")]
        public Int64? GoldRetrainingPrice {get; set;}

        ///<summary>
        ///Стоимость подготовки в дублонах
        ///</summary>
        [JsonProperty("gold_training_hire_price")]
        public Int64? GoldTrainingHirePrice {get; set;}

        ///<summary>
        ///Уровень развития командира, покупаемый за дублоны
        ///</summary>
        [JsonProperty("gold_training_level")]
        public Int64? GoldTrainingLevel {get; set;}

        ///<summary>
        ///Список изображений для уровней развития командира.
///
///1 - изображение командира для уровней 1-7
///8 - изображение командира для уровней 8-13
///14 - изображение командира для уровней 14-20
        ///</summary>
        [JsonProperty("icons")]
        public Dictionary<string,string> Icons {get; set;}

        ///<summary>
        ///Показывает, сохраняется ли изученный навык
        ///</summary>
        [JsonProperty("is_retrainable")]
        public bool IsRetrainable {get; set;}

        ///<summary>
        ///Фамилии командиров
        ///</summary>
        [JsonProperty("last_names")]
        public string[] LastNames {get; set;}

        ///<summary>
        ///Стоимость переподготовки в кредитах
        ///</summary>
        [JsonProperty("money_retraining_price")]
        public Int64? MoneyRetrainingPrice {get; set;}

        ///<summary>
        ///Стоимость подготовки в кредитах
        ///</summary>
        [JsonProperty("money_training_hire_price")]
        public Int64? MoneyTrainingHirePrice {get; set;}

        ///<summary>
        ///Уровень развития командира, покупаемый за дублоны
        ///</summary>
        [JsonProperty("money_training_level")]
        public Int64? MoneyTrainingLevel {get; set;}

        ///<summary>
        ///Нация
        ///</summary>
        [JsonProperty("nation")]
        public string Nation {get; set;}
    }


    ///<summary>
    /// Навыки командира
    /// https://ru.wargaming.net/developers/api_reference/wows/encyclopedia/crewskills/
    ///</summary>
    [Method(Url="api.worldofwarships.ru/wows/encyclopedia/crewskills/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wows/encyclopedia/crewskills/")]
    public class RequestWowsEncyclopediaCrewskills:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"cs" — Čeština 
///"de" — Deutsch 
///"en" — English 
///"es" — Español 
///"fr" — Français 
///"ja" — 日本語 
///"pl" — Polski 
///"ru" — Русский (используется по умолчанию)
///"th" — ไทย 
///"zh-tw" — 繁體中文 
///"tr" — Türkçe 
///"zh-cn" — 中文 
///"pt-br" — Português do Brasil 
///"es-mx" — Español (México)
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Идентификатор навыка
        ///numeric, list
        ///</summary>
        [JsonProperty("skill_id")]
        public string SkillId {get; set;}
    }
    
    ///<summary>
    ///Навыки командира
    ///</summary>
    public class ResponseWowsEncyclopediaCrewskills:IResponse
    {

        ///<summary>
        ///Ссылка на значок навыка
        ///</summary>
        [JsonProperty("icon")]
        public string Icon {get; set;}

        ///<summary>
        ///Название
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Уровень
        ///</summary>
        [JsonProperty("tier")]
        public Int64? Tier {get; set;}

        ///<summary>
        ///Навыки
        ///</summary>
        [JsonProperty("perks")]
        public WowsEncyclopediaCrewskillsPerks Perks {get; set;}
    }
    public class WowsEncyclopediaCrewskillsPerks
    {

        ///<summary>
        ///Описание
        ///</summary>
        [JsonProperty("description")]
        public string Description {get; set;}

        ///<summary>
        ///Идентификатор навыка
        ///</summary>
        [JsonProperty("perk_id")]
        public Int64? PerkId {get; set;}
    }



    ///<summary>
    /// Ранги командиров
    /// https://ru.wargaming.net/developers/api_reference/wows/encyclopedia/crewranks/
    ///</summary>
    [Method(Url="api.worldofwarships.ru/wows/encyclopedia/crewranks/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wows/encyclopedia/crewranks/")]
    public class RequestWowsEncyclopediaCrewranks:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"cs" — Čeština 
///"de" — Deutsch 
///"en" — English 
///"es" — Español 
///"fr" — Français 
///"ja" — 日本語 
///"pl" — Polski 
///"ru" — Русский (используется по умолчанию)
///"th" — ไทย 
///"zh-tw" — 繁體中文 
///"tr" — Türkçe 
///"zh-cn" — 中文 
///"pt-br" — Português do Brasil 
///"es-mx" — Español (México)
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Нация
        ///string
        ///</summary>
        [JsonProperty("nation")]
        public string Nation {get; set;}
    }
    
    ///<summary>
    ///Ранги командиров
    ///</summary>
    public class ResponseWowsEncyclopediaCrewranks:IResponse
    {

        ///<summary>
        ///Опыт
        ///</summary>
        [JsonProperty("experience")]
        public Int64? Experience {get; set;}

        ///<summary>
        ///Название ранга
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Ранг
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}
    }


    ///<summary>
    /// Типы боёв
    /// https://ru.wargaming.net/developers/api_reference/wows/encyclopedia/battletypes/
    ///</summary>
    [Method(Url="api.worldofwarships.ru/wows/encyclopedia/battletypes/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wows/encyclopedia/battletypes/")]
    public class RequestWowsEncyclopediaBattletypes:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"cs" — Čeština 
///"de" — Deutsch 
///"en" — English 
///"es" — Español 
///"fr" — Français 
///"ja" — 日本語 
///"pl" — Polski 
///"ru" — Русский (используется по умолчанию)
///"th" — ไทย 
///"zh-tw" — 繁體中文 
///"tr" — Türkçe 
///"zh-cn" — 中文 
///"pt-br" — Português do Brasil 
///"es-mx" — Español (México)
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}
    }
    
    ///<summary>
    ///Типы боёв
    ///</summary>
    public class ResponseWowsEncyclopediaBattletypes:IResponse
    {

        ///<summary>
        ///Описание типа боя
        ///</summary>
        [JsonProperty("description")]
        public string Description {get; set;}

        ///<summary>
        ///Ссылка на изображение
        ///</summary>
        [JsonProperty("image")]
        public string Image {get; set;}

        ///<summary>
        ///Название типа боя
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Тег типа боя
        ///</summary>
        [JsonProperty("tag")]
        public string Tag {get; set;}
    }


    ///<summary>
    /// Статистика по кораблям игрока
    /// https://ru.wargaming.net/developers/api_reference/wows/ships/stats/
    ///</summary>
    [Method(Url="api.worldofwarships.ru/wows/ships/stats/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wows/ships/stats/")]
    public class RequestWowsShipsStats:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"cs" — Čeština 
///"de" — Deutsch 
///"en" — English 
///"es" — Español 
///"fr" — Français 
///"ja" — 日本語 
///"pl" — Polski 
///"ru" — Русский (используется по умолчанию)
///"th" — ไทย 
///"zh-tw" — 繁體中文
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Ключ доступа к персональным данным пользователя. Имеет срок действия. Для получения ключа доступа необходимо запросить аутентификацию.
        ///string
        ///</summary>
        [JsonProperty("access_token")]
        public string AccessToken {get; set;}

        ///<summary>
        ///Дополнительные поля, которые будут включены в ответ. Допустимые значения: 
///
///club
///pve
///pve_div2
///pve_div3
///pve_solo
///pvp_div2
///pvp_div3
///pvp_solo
///rank_div2
///rank_div3
///rank_solo
        ///string, list
        ///</summary>
        [JsonProperty("extra")]
        public string Extra {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор аккаунта игрока
        ///numeric
        ///</summary>
        [JsonProperty("account_id")]
        [FieldIsMandatory]
        public string AccountId {get; set;}

        ///<summary>
        ///Идентификатор корабля игрока
        ///numeric, list
        ///</summary>
        [JsonProperty("ship_id")]
        public string ShipId {get; set;}

        ///<summary>
        ///Фильтрация по присутствию кораблей в порту. Если параметр не указан, возвращаются все корабли. Параметр обрабатывается только при наличии валидного access_token для указанного account_id. Допустимые значения: 
///
///"1" — Возвращать корабли из Порта. 
///"0" — Возвращать корабли, которых уже нет в Порту.
        ///string
        ///</summary>
        [JsonProperty("in_garage")]
        public string InGarage {get; set;}
    }
    
    ///<summary>
    ///Статистика по кораблям игрока
    ///</summary>
    public class ResponseWowsShipsStats:IResponse
    {

        ///<summary>
        ///Идентификатор игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Пройдено миль
        ///</summary>
        [JsonProperty("distance")]
        public Int64? Distance {get; set;}

        ///<summary>
        ///Время последнего боя
        ///</summary>
        [JsonProperty("last_battle_time")]
        public int? LastBattleTime {get; set;}

        ///<summary>
        ///Идентификатор корабля
        ///</summary>
        [JsonProperty("ship_id")]
        public Int64? ShipId {get; set;}

        ///<summary>
        ///Дата обновления информации о кораблях
        ///</summary>
        [JsonProperty("updated_at")]
        public int? UpdatedAt {get; set;}

        ///<summary>
        ///Статистика в Командных боях.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("club")]
        public WowsShipsStatsClub Club {get; set;}

        ///<summary>
        ///Приватные данные кораблей игрока
        ///</summary>
        [JsonProperty("private")]
        public WowsShipsStatsPrivate Private {get; set;}

        ///<summary>
        ///Статистика игрока в режиме кооперативных боёв.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("pve")]
        public WowsShipsStatsPve Pve {get; set;}

        ///<summary>
        ///Статистика игрока в режиме кооперативных боёв в составе отряда из 2 игроков.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("pve_div2")]
        public WowsShipsStatsPve_div2 PveDiv2 {get; set;}

        ///<summary>
        ///Статистика игрока в режиме кооперативных боёв в составе отряда из 3 игроков.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("pve_div3")]
        public WowsShipsStatsPve_div3 PveDiv3 {get; set;}

        ///<summary>
        ///Статистика игрока в режиме кооперативных боёв не в составе отряда.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("pve_solo")]
        public WowsShipsStatsPve_solo PveSolo {get; set;}

        ///<summary>
        ///Статистика игрока в режиме случайных боёв
        ///</summary>
        [JsonProperty("pvp")]
        public WowsShipsStatsPvp Pvp {get; set;}

        ///<summary>
        ///Статистика игрока в режиме случайных боёв в составе отряда из 2 игроков.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("pvp_div2")]
        public WowsShipsStatsPvp_div2 PvpDiv2 {get; set;}

        ///<summary>
        ///Статистика игрока в режиме случайных боёв в составе отряда из 3 игроков.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("pvp_div3")]
        public WowsShipsStatsPvp_div3 PvpDiv3 {get; set;}

        ///<summary>
        ///Статистика игрока в режиме случайных боёв не в составе отряда.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("pvp_solo")]
        public WowsShipsStatsPvp_solo PvpSolo {get; set;}

        ///<summary>
        ///Статистика игрока в ранговых боях в составе отряда из 2 игроков.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("rank_div2")]
        public WowsShipsStatsRank_div2 RankDiv2 {get; set;}

        ///<summary>
        ///Статистика игрока в ранговых боях в составе отряда из 3 игроков.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("rank_div3")]
        public WowsShipsStatsRank_div3 RankDiv3 {get; set;}

        ///<summary>
        ///Статистика игрока в ранговых боях не в составе отряда.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("rank_solo")]
        public WowsShipsStatsRank_solo RankSolo {get; set;}
    }
    public class WowsShipsStatsClub
    {

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt")]
        public Int64? MaxDamageDealt {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Максимальное количество сбитых самолётов за бой
        ///</summary>
        [JsonProperty("max_planes_killed")]
        public Int64? MaxPlanesKilled {get; set;}

        ///<summary>
        ///Максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника
        ///</summary>
        [JsonProperty("planes_killed")]
        public Int64? PlanesKilled {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Выжил в боях и победил
        ///</summary>
        [JsonProperty("survived_wins")]
        public Int64? SurvivedWins {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Общий опыт, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}

        ///<summary>
        ///Статистика использования авиации
        ///</summary>
        [JsonProperty("aircraft")]
        public WowsShipsStatsClubAircraft Aircraft {get; set;}

        ///<summary>
        ///Статистика стрельбы главным калибром
        ///</summary>
        [JsonProperty("main_battery")]
        public WowsShipsStatsClubMain_battery MainBattery {get; set;}

        ///<summary>
        ///Статистика использования тарана
        ///</summary>
        [JsonProperty("ramming")]
        public WowsShipsStatsClubRamming Ramming {get; set;}

        ///<summary>
        ///Статистика стрельбы вспомогательным калибром
        ///</summary>
        [JsonProperty("second_battery")]
        public WowsShipsStatsClubSecond_battery SecondBattery {get; set;}

        ///<summary>
        ///Статистика стрельбы торпедами
        ///</summary>
        [JsonProperty("torpedoes")]
        public WowsShipsStatsClubTorpedoes Torpedoes {get; set;}
    }
    public class WowsShipsStatsClubAircraft
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}
    }

    public class WowsShipsStatsClubMain_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsShipsStatsClubRamming
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}
    }

    public class WowsShipsStatsClubSecond_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsShipsStatsClubTorpedoes
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }


    public class WowsShipsStatsPrivate
    {

        ///<summary>
        ///Общее время в бою до уничтожения в секундах
        ///</summary>
        [JsonProperty("battle_life_time")]
        public Int64? BattleLifeTime {get; set;}

        ///<summary>
        ///Присутствие кораблей в Порту
        ///</summary>
        [JsonProperty("in_garage")]
        public bool InGarage {get; set;}
    }

    public class WowsShipsStatsPve
    {

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt")]
        public Int64? MaxDamageDealt {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Максимальное количество сбитых самолётов за бой
        ///</summary>
        [JsonProperty("max_planes_killed")]
        public Int64? MaxPlanesKilled {get; set;}

        ///<summary>
        ///Максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника
        ///</summary>
        [JsonProperty("planes_killed")]
        public Int64? PlanesKilled {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Выжил в боях и победил
        ///</summary>
        [JsonProperty("survived_wins")]
        public Int64? SurvivedWins {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Общий опыт, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}

        ///<summary>
        ///Статистика использования авиации
        ///</summary>
        [JsonProperty("aircraft")]
        public WowsShipsStatsPveAircraft Aircraft {get; set;}

        ///<summary>
        ///Статистика стрельбы главным калибром
        ///</summary>
        [JsonProperty("main_battery")]
        public WowsShipsStatsPveMain_battery MainBattery {get; set;}

        ///<summary>
        ///Статистика использования тарана
        ///</summary>
        [JsonProperty("ramming")]
        public WowsShipsStatsPveRamming Ramming {get; set;}

        ///<summary>
        ///Статистика стрельбы вспомогательным калибром
        ///</summary>
        [JsonProperty("second_battery")]
        public WowsShipsStatsPveSecond_battery SecondBattery {get; set;}

        ///<summary>
        ///Статистика стрельбы торпедами
        ///</summary>
        [JsonProperty("torpedoes")]
        public WowsShipsStatsPveTorpedoes Torpedoes {get; set;}
    }
    public class WowsShipsStatsPveAircraft
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}
    }

    public class WowsShipsStatsPveMain_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsShipsStatsPveRamming
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}
    }

    public class WowsShipsStatsPveSecond_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsShipsStatsPveTorpedoes
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }


    public class WowsShipsStatsPve_div2
    {

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt")]
        public Int64? MaxDamageDealt {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Максимальное количество сбитых самолётов за бой
        ///</summary>
        [JsonProperty("max_planes_killed")]
        public Int64? MaxPlanesKilled {get; set;}

        ///<summary>
        ///Максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника
        ///</summary>
        [JsonProperty("planes_killed")]
        public Int64? PlanesKilled {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Выжил в боях и победил
        ///</summary>
        [JsonProperty("survived_wins")]
        public Int64? SurvivedWins {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Общий опыт, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}

        ///<summary>
        ///Статистика использования авиации
        ///</summary>
        [JsonProperty("aircraft")]
        public WowsShipsStatsPve_div2Aircraft Aircraft {get; set;}

        ///<summary>
        ///Статистика стрельбы главным калибром
        ///</summary>
        [JsonProperty("main_battery")]
        public WowsShipsStatsPve_div2Main_battery MainBattery {get; set;}

        ///<summary>
        ///Статистика использования тарана
        ///</summary>
        [JsonProperty("ramming")]
        public WowsShipsStatsPve_div2Ramming Ramming {get; set;}

        ///<summary>
        ///Статистика стрельбы вспомогательным калибром
        ///</summary>
        [JsonProperty("second_battery")]
        public WowsShipsStatsPve_div2Second_battery SecondBattery {get; set;}

        ///<summary>
        ///Статистика стрельбы торпедами
        ///</summary>
        [JsonProperty("torpedoes")]
        public WowsShipsStatsPve_div2Torpedoes Torpedoes {get; set;}
    }
    public class WowsShipsStatsPve_div2Aircraft
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}
    }

    public class WowsShipsStatsPve_div2Main_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsShipsStatsPve_div2Ramming
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}
    }

    public class WowsShipsStatsPve_div2Second_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsShipsStatsPve_div2Torpedoes
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }


    public class WowsShipsStatsPve_div3
    {

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt")]
        public Int64? MaxDamageDealt {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Максимальное количество сбитых самолётов за бой
        ///</summary>
        [JsonProperty("max_planes_killed")]
        public Int64? MaxPlanesKilled {get; set;}

        ///<summary>
        ///Максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника
        ///</summary>
        [JsonProperty("planes_killed")]
        public Int64? PlanesKilled {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Выжил в боях и победил
        ///</summary>
        [JsonProperty("survived_wins")]
        public Int64? SurvivedWins {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Общий опыт, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}

        ///<summary>
        ///Статистика использования авиации
        ///</summary>
        [JsonProperty("aircraft")]
        public WowsShipsStatsPve_div3Aircraft Aircraft {get; set;}

        ///<summary>
        ///Статистика стрельбы главным калибром
        ///</summary>
        [JsonProperty("main_battery")]
        public WowsShipsStatsPve_div3Main_battery MainBattery {get; set;}

        ///<summary>
        ///Статистика использования тарана
        ///</summary>
        [JsonProperty("ramming")]
        public WowsShipsStatsPve_div3Ramming Ramming {get; set;}

        ///<summary>
        ///Статистика стрельбы вспомогательным калибром
        ///</summary>
        [JsonProperty("second_battery")]
        public WowsShipsStatsPve_div3Second_battery SecondBattery {get; set;}

        ///<summary>
        ///Статистика стрельбы торпедами
        ///</summary>
        [JsonProperty("torpedoes")]
        public WowsShipsStatsPve_div3Torpedoes Torpedoes {get; set;}
    }
    public class WowsShipsStatsPve_div3Aircraft
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}
    }

    public class WowsShipsStatsPve_div3Main_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsShipsStatsPve_div3Ramming
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}
    }

    public class WowsShipsStatsPve_div3Second_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsShipsStatsPve_div3Torpedoes
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }


    public class WowsShipsStatsPve_solo
    {

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt")]
        public Int64? MaxDamageDealt {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Максимальное количество сбитых самолётов за бой
        ///</summary>
        [JsonProperty("max_planes_killed")]
        public Int64? MaxPlanesKilled {get; set;}

        ///<summary>
        ///Максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника
        ///</summary>
        [JsonProperty("planes_killed")]
        public Int64? PlanesKilled {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Выжил в боях и победил
        ///</summary>
        [JsonProperty("survived_wins")]
        public Int64? SurvivedWins {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Общий опыт, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}

        ///<summary>
        ///Статистика использования авиации
        ///</summary>
        [JsonProperty("aircraft")]
        public WowsShipsStatsPve_soloAircraft Aircraft {get; set;}

        ///<summary>
        ///Статистика стрельбы главным калибром
        ///</summary>
        [JsonProperty("main_battery")]
        public WowsShipsStatsPve_soloMain_battery MainBattery {get; set;}

        ///<summary>
        ///Статистика использования тарана
        ///</summary>
        [JsonProperty("ramming")]
        public WowsShipsStatsPve_soloRamming Ramming {get; set;}

        ///<summary>
        ///Статистика стрельбы вспомогательным калибром
        ///</summary>
        [JsonProperty("second_battery")]
        public WowsShipsStatsPve_soloSecond_battery SecondBattery {get; set;}

        ///<summary>
        ///Статистика стрельбы торпедами
        ///</summary>
        [JsonProperty("torpedoes")]
        public WowsShipsStatsPve_soloTorpedoes Torpedoes {get; set;}
    }
    public class WowsShipsStatsPve_soloAircraft
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}
    }

    public class WowsShipsStatsPve_soloMain_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsShipsStatsPve_soloRamming
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}
    }

    public class WowsShipsStatsPve_soloSecond_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsShipsStatsPve_soloTorpedoes
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }


    public class WowsShipsStatsPvp
    {

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt")]
        public Int64? MaxDamageDealt {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Максимальное количество сбитых самолётов за бой
        ///</summary>
        [JsonProperty("max_planes_killed")]
        public Int64? MaxPlanesKilled {get; set;}

        ///<summary>
        ///Максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника
        ///</summary>
        [JsonProperty("planes_killed")]
        public Int64? PlanesKilled {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Выжил в боях и победил
        ///</summary>
        [JsonProperty("survived_wins")]
        public Int64? SurvivedWins {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Общий опыт, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}

        ///<summary>
        ///Статистика использования авиации
        ///</summary>
        [JsonProperty("aircraft")]
        public WowsShipsStatsPvpAircraft Aircraft {get; set;}

        ///<summary>
        ///Статистика стрельбы главным калибром
        ///</summary>
        [JsonProperty("main_battery")]
        public WowsShipsStatsPvpMain_battery MainBattery {get; set;}

        ///<summary>
        ///Статистика использования тарана
        ///</summary>
        [JsonProperty("ramming")]
        public WowsShipsStatsPvpRamming Ramming {get; set;}

        ///<summary>
        ///Статистика стрельбы вспомогательным калибром
        ///</summary>
        [JsonProperty("second_battery")]
        public WowsShipsStatsPvpSecond_battery SecondBattery {get; set;}

        ///<summary>
        ///Статистика стрельбы торпедами
        ///</summary>
        [JsonProperty("torpedoes")]
        public WowsShipsStatsPvpTorpedoes Torpedoes {get; set;}
    }
    public class WowsShipsStatsPvpAircraft
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}
    }

    public class WowsShipsStatsPvpMain_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsShipsStatsPvpRamming
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}
    }

    public class WowsShipsStatsPvpSecond_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsShipsStatsPvpTorpedoes
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }


    public class WowsShipsStatsPvp_div2
    {

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt")]
        public Int64? MaxDamageDealt {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Максимальное количество сбитых самолётов за бой
        ///</summary>
        [JsonProperty("max_planes_killed")]
        public Int64? MaxPlanesKilled {get; set;}

        ///<summary>
        ///Максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника
        ///</summary>
        [JsonProperty("planes_killed")]
        public Int64? PlanesKilled {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Выжил в боях и победил
        ///</summary>
        [JsonProperty("survived_wins")]
        public Int64? SurvivedWins {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Общий опыт, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}

        ///<summary>
        ///Статистика использования авиации
        ///</summary>
        [JsonProperty("aircraft")]
        public WowsShipsStatsPvp_div2Aircraft Aircraft {get; set;}

        ///<summary>
        ///Статистика стрельбы главным калибром
        ///</summary>
        [JsonProperty("main_battery")]
        public WowsShipsStatsPvp_div2Main_battery MainBattery {get; set;}

        ///<summary>
        ///Статистика использования тарана
        ///</summary>
        [JsonProperty("ramming")]
        public WowsShipsStatsPvp_div2Ramming Ramming {get; set;}

        ///<summary>
        ///Статистика стрельбы вспомогательным калибром
        ///</summary>
        [JsonProperty("second_battery")]
        public WowsShipsStatsPvp_div2Second_battery SecondBattery {get; set;}

        ///<summary>
        ///Статистика стрельбы торпедами
        ///</summary>
        [JsonProperty("torpedoes")]
        public WowsShipsStatsPvp_div2Torpedoes Torpedoes {get; set;}
    }
    public class WowsShipsStatsPvp_div2Aircraft
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}
    }

    public class WowsShipsStatsPvp_div2Main_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsShipsStatsPvp_div2Ramming
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}
    }

    public class WowsShipsStatsPvp_div2Second_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsShipsStatsPvp_div2Torpedoes
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }


    public class WowsShipsStatsPvp_div3
    {

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt")]
        public Int64? MaxDamageDealt {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Максимальное количество сбитых самолётов за бой
        ///</summary>
        [JsonProperty("max_planes_killed")]
        public Int64? MaxPlanesKilled {get; set;}

        ///<summary>
        ///Максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника
        ///</summary>
        [JsonProperty("planes_killed")]
        public Int64? PlanesKilled {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Выжил в боях и победил
        ///</summary>
        [JsonProperty("survived_wins")]
        public Int64? SurvivedWins {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Общий опыт, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}

        ///<summary>
        ///Статистика использования авиации
        ///</summary>
        [JsonProperty("aircraft")]
        public WowsShipsStatsPvp_div3Aircraft Aircraft {get; set;}

        ///<summary>
        ///Статистика стрельбы главным калибром
        ///</summary>
        [JsonProperty("main_battery")]
        public WowsShipsStatsPvp_div3Main_battery MainBattery {get; set;}

        ///<summary>
        ///Статистика использования тарана
        ///</summary>
        [JsonProperty("ramming")]
        public WowsShipsStatsPvp_div3Ramming Ramming {get; set;}

        ///<summary>
        ///Статистика стрельбы вспомогательным калибром
        ///</summary>
        [JsonProperty("second_battery")]
        public WowsShipsStatsPvp_div3Second_battery SecondBattery {get; set;}

        ///<summary>
        ///Статистика стрельбы торпедами
        ///</summary>
        [JsonProperty("torpedoes")]
        public WowsShipsStatsPvp_div3Torpedoes Torpedoes {get; set;}
    }
    public class WowsShipsStatsPvp_div3Aircraft
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}
    }

    public class WowsShipsStatsPvp_div3Main_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsShipsStatsPvp_div3Ramming
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}
    }

    public class WowsShipsStatsPvp_div3Second_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsShipsStatsPvp_div3Torpedoes
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }


    public class WowsShipsStatsPvp_solo
    {

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("capture_points")]
        public Int64? CapturePoints {get; set;}

        ///<summary>
        ///Количество нанесённых повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dropped_capture_points")]
        public Int64? DroppedCapturePoints {get; set;}

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt")]
        public Int64? MaxDamageDealt {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Максимальное количество сбитых самолётов за бой
        ///</summary>
        [JsonProperty("max_planes_killed")]
        public Int64? MaxPlanesKilled {get; set;}

        ///<summary>
        ///Максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника
        ///</summary>
        [JsonProperty("planes_killed")]
        public Int64? PlanesKilled {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Выжил в боях и победил
        ///</summary>
        [JsonProperty("survived_wins")]
        public Int64? SurvivedWins {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Общий опыт, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}

        ///<summary>
        ///Статистика использования авиации
        ///</summary>
        [JsonProperty("aircraft")]
        public WowsShipsStatsPvp_soloAircraft Aircraft {get; set;}

        ///<summary>
        ///Статистика стрельбы главным калибром
        ///</summary>
        [JsonProperty("main_battery")]
        public WowsShipsStatsPvp_soloMain_battery MainBattery {get; set;}

        ///<summary>
        ///Статистика использования тарана
        ///</summary>
        [JsonProperty("ramming")]
        public WowsShipsStatsPvp_soloRamming Ramming {get; set;}

        ///<summary>
        ///Статистика стрельбы вспомогательным калибром
        ///</summary>
        [JsonProperty("second_battery")]
        public WowsShipsStatsPvp_soloSecond_battery SecondBattery {get; set;}

        ///<summary>
        ///Статистика стрельбы торпедами
        ///</summary>
        [JsonProperty("torpedoes")]
        public WowsShipsStatsPvp_soloTorpedoes Torpedoes {get; set;}
    }
    public class WowsShipsStatsPvp_soloAircraft
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}
    }

    public class WowsShipsStatsPvp_soloMain_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsShipsStatsPvp_soloRamming
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}
    }

    public class WowsShipsStatsPvp_soloSecond_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsShipsStatsPvp_soloTorpedoes
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }


    public class WowsShipsStatsRank_div2
    {

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Количество нанесённых повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt")]
        public Int64? MaxDamageDealt {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Максимальное количество сбитых самолётов за бой
        ///</summary>
        [JsonProperty("max_planes_killed")]
        public Int64? MaxPlanesKilled {get; set;}

        ///<summary>
        ///Максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника
        ///</summary>
        [JsonProperty("planes_killed")]
        public Int64? PlanesKilled {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Выжил в боях и победил
        ///</summary>
        [JsonProperty("survived_wins")]
        public Int64? SurvivedWins {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Общий опыт, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}

        ///<summary>
        ///Статистика использования авиации
        ///</summary>
        [JsonProperty("aircraft")]
        public WowsShipsStatsRank_div2Aircraft Aircraft {get; set;}

        ///<summary>
        ///Статистика стрельбы главным калибром
        ///</summary>
        [JsonProperty("main_battery")]
        public WowsShipsStatsRank_div2Main_battery MainBattery {get; set;}

        ///<summary>
        ///Статистика использования тарана
        ///</summary>
        [JsonProperty("ramming")]
        public WowsShipsStatsRank_div2Ramming Ramming {get; set;}

        ///<summary>
        ///Статистика стрельбы вспомогательным калибром
        ///</summary>
        [JsonProperty("second_battery")]
        public WowsShipsStatsRank_div2Second_battery SecondBattery {get; set;}

        ///<summary>
        ///Статистика стрельбы торпедами
        ///</summary>
        [JsonProperty("torpedoes")]
        public WowsShipsStatsRank_div2Torpedoes Torpedoes {get; set;}
    }
    public class WowsShipsStatsRank_div2Aircraft
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}
    }

    public class WowsShipsStatsRank_div2Main_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsShipsStatsRank_div2Ramming
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}
    }

    public class WowsShipsStatsRank_div2Second_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsShipsStatsRank_div2Torpedoes
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }


    public class WowsShipsStatsRank_div3
    {

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Количество нанесённых повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt")]
        public Int64? MaxDamageDealt {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Максимальное количество сбитых самолётов за бой
        ///</summary>
        [JsonProperty("max_planes_killed")]
        public Int64? MaxPlanesKilled {get; set;}

        ///<summary>
        ///Максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника
        ///</summary>
        [JsonProperty("planes_killed")]
        public Int64? PlanesKilled {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Выжил в боях и победил
        ///</summary>
        [JsonProperty("survived_wins")]
        public Int64? SurvivedWins {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Общий опыт, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}

        ///<summary>
        ///Статистика использования авиации
        ///</summary>
        [JsonProperty("aircraft")]
        public WowsShipsStatsRank_div3Aircraft Aircraft {get; set;}

        ///<summary>
        ///Статистика стрельбы главным калибром
        ///</summary>
        [JsonProperty("main_battery")]
        public WowsShipsStatsRank_div3Main_battery MainBattery {get; set;}

        ///<summary>
        ///Статистика использования тарана
        ///</summary>
        [JsonProperty("ramming")]
        public WowsShipsStatsRank_div3Ramming Ramming {get; set;}

        ///<summary>
        ///Статистика стрельбы вспомогательным калибром
        ///</summary>
        [JsonProperty("second_battery")]
        public WowsShipsStatsRank_div3Second_battery SecondBattery {get; set;}

        ///<summary>
        ///Статистика стрельбы торпедами
        ///</summary>
        [JsonProperty("torpedoes")]
        public WowsShipsStatsRank_div3Torpedoes Torpedoes {get; set;}
    }
    public class WowsShipsStatsRank_div3Aircraft
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}
    }

    public class WowsShipsStatsRank_div3Main_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsShipsStatsRank_div3Ramming
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}
    }

    public class WowsShipsStatsRank_div3Second_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsShipsStatsRank_div3Torpedoes
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }


    public class WowsShipsStatsRank_solo
    {

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Количество нанесённых повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt")]
        public Int64? MaxDamageDealt {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Максимальное количество сбитых самолётов за бой
        ///</summary>
        [JsonProperty("max_planes_killed")]
        public Int64? MaxPlanesKilled {get; set;}

        ///<summary>
        ///Максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника
        ///</summary>
        [JsonProperty("planes_killed")]
        public Int64? PlanesKilled {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Выжил в боях и победил
        ///</summary>
        [JsonProperty("survived_wins")]
        public Int64? SurvivedWins {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Общий опыт, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}

        ///<summary>
        ///Статистика использования авиации
        ///</summary>
        [JsonProperty("aircraft")]
        public WowsShipsStatsRank_soloAircraft Aircraft {get; set;}

        ///<summary>
        ///Статистика стрельбы главным калибром
        ///</summary>
        [JsonProperty("main_battery")]
        public WowsShipsStatsRank_soloMain_battery MainBattery {get; set;}

        ///<summary>
        ///Статистика использования тарана
        ///</summary>
        [JsonProperty("ramming")]
        public WowsShipsStatsRank_soloRamming Ramming {get; set;}

        ///<summary>
        ///Статистика стрельбы вспомогательным калибром
        ///</summary>
        [JsonProperty("second_battery")]
        public WowsShipsStatsRank_soloSecond_battery SecondBattery {get; set;}

        ///<summary>
        ///Статистика стрельбы торпедами
        ///</summary>
        [JsonProperty("torpedoes")]
        public WowsShipsStatsRank_soloTorpedoes Torpedoes {get; set;}
    }
    public class WowsShipsStatsRank_soloAircraft
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}
    }

    public class WowsShipsStatsRank_soloMain_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsShipsStatsRank_soloRamming
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}
    }

    public class WowsShipsStatsRank_soloSecond_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsShipsStatsRank_soloTorpedoes
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }




    ///<summary>
    /// Сезоны ранговых боёв
    /// https://ru.wargaming.net/developers/api_reference/wows/seasons/info/
    ///</summary>
    [Method(Url="api.worldofwarships.ru/wows/seasons/info/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wows/seasons/info/")]
    public class RequestWowsSeasonsInfo:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"cs" — Čeština 
///"de" — Deutsch 
///"en" — English 
///"es" — Español 
///"fr" — Français 
///"ja" — 日本語 
///"pl" — Polski 
///"ru" — Русский (используется по умолчанию)
///"th" — ไทย 
///"zh-tw" — 繁體中文 
///"tr" — Türkçe 
///"zh-cn" — 中文 
///"pt-br" — Português do Brasil 
///"es-mx" — Español (México)
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Идентификатор сезона
        ///numeric, list
        ///</summary>
        [JsonProperty("season_id")]
        public string SeasonId {get; set;}
    }
    
    ///<summary>
    ///Сезоны ранговых боёв
    ///</summary>
    public class ResponseWowsSeasonsInfo:IResponse
    {

        ///<summary>
        ///Минимальный уровень послужного списка для участия в сезоне
        ///</summary>
        [JsonProperty("account_tier")]
        public Int64? AccountTier {get; set;}

        ///<summary>
        ///Время закрытия сезона
        ///</summary>
        [JsonProperty("close_at")]
        public int? CloseAt {get; set;}

        ///<summary>
        ///Время окончания сезона
        ///</summary>
        [JsonProperty("finish_at")]
        public int? FinishAt {get; set;}

        ///<summary>
        ///Максимальный уровень корабля в сезоне
        ///</summary>
        [JsonProperty("max_ship_tier")]
        public Int64? MaxShipTier {get; set;}

        ///<summary>
        ///Минимальный уровень корабля в сезоне
        ///</summary>
        [JsonProperty("min_ship_tier")]
        public Int64? MinShipTier {get; set;}

        ///<summary>
        ///Идентификатор родительского сезона
        ///</summary>
        [JsonProperty("parent_season_id")]
        public Int64? ParentSeasonId {get; set;}

        ///<summary>
        ///Идентификатор сезона
        ///</summary>
        [JsonProperty("season_id")]
        public Int64? SeasonId {get; set;}

        ///<summary>
        ///Название сезона
        ///</summary>
        [JsonProperty("season_name")]
        public string SeasonName {get; set;}

        ///<summary>
        ///Время открытия сезона
        ///</summary>
        [JsonProperty("start_at")]
        public int? StartAt {get; set;}

        ///<summary>
        ///Начальный ранг в сезоне
        ///</summary>
        [JsonProperty("start_rank")]
        public Int64? StartRank {get; set;}

        ///<summary>
        ///Изображения
        ///</summary>
        [JsonProperty("images")]
        public WowsSeasonsInfoImages Images {get; set;}
    }
    public class WowsSeasonsInfoImages
    {

        ///<summary>
        ///Фоновое изображение
        ///</summary>
        [JsonProperty("background")]
        public string Background {get; set;}

        ///<summary>
        ///Изображение знаков отличия
        ///</summary>
        [JsonProperty("insignia")]
        public string Insignia {get; set;}
    }



    ///<summary>
    /// Статистика кораблей в ранговых боях
    /// https://ru.wargaming.net/developers/api_reference/wows/seasons/shipstats/
    ///</summary>
    [Method(Url="api.worldofwarships.ru/wows/seasons/shipstats/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wows/seasons/shipstats/")]
    public class RequestWowsSeasonsShipstats:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"cs" — Čeština 
///"de" — Deutsch 
///"en" — English 
///"es" — Español 
///"fr" — Français 
///"ja" — 日本語 
///"pl" — Polski 
///"ru" — Русский (используется по умолчанию)
///"th" — ไทย 
///"zh-tw" — 繁體中文
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Ключ доступа к персональным данным пользователя. Имеет срок действия. Для получения ключа доступа необходимо запросить аутентификацию.
        ///string
        ///</summary>
        [JsonProperty("access_token")]
        public string AccessToken {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор аккаунта игрока
        ///numeric
        ///</summary>
        [JsonProperty("account_id")]
        [FieldIsMandatory]
        public string AccountId {get; set;}

        ///<summary>
        ///Идентификатор сезона
        ///numeric, list
        ///</summary>
        [JsonProperty("season_id")]
        public string SeasonId {get; set;}

        ///<summary>
        ///Идентификатор корабля
        ///numeric, list
        ///</summary>
        [JsonProperty("ship_id")]
        public string ShipId {get; set;}
    }
    
    ///<summary>
    ///Статистика кораблей в ранговых боях
    ///</summary>
    public class ResponseWowsSeasonsShipstats:IResponse
    {

        ///<summary>
        ///Идентификатор игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Идентификатор корабля
        ///</summary>
        [JsonProperty("ship_id")]
        public Int64? ShipId {get; set;}

        ///<summary>
        ///Сезоны ранговых боёв
        ///</summary>
        [JsonProperty("seasons")]
        public WowsSeasonsShipstatsSeasons Seasons {get; set;}
    }
    public class WowsSeasonsShipstatsSeasons
    {

        ///<summary>
        ///Статистика игрока в ранговых боях в составе отряда из 2 игроков
        ///</summary>
        [JsonProperty("rank_div2")]
        public WowsSeasonsShipstatsSeasonsRank_div2 RankDiv2 {get; set;}

        ///<summary>
        ///Статистика игрока в ранговых боях в составе отряда из 3 игроков
        ///</summary>
        [JsonProperty("rank_div3")]
        public WowsSeasonsShipstatsSeasonsRank_div3 RankDiv3 {get; set;}

        ///<summary>
        ///Статистика игрока в ранговых боях не в составе отряда
        ///</summary>
        [JsonProperty("rank_solo")]
        public WowsSeasonsShipstatsSeasonsRank_solo RankSolo {get; set;}
    }
    public class WowsSeasonsShipstatsSeasonsRank_div2
    {

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Количество нанесённых повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt")]
        public Int64? MaxDamageDealt {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Максимальное количество сбитых самолётов за бой
        ///</summary>
        [JsonProperty("max_planes_killed")]
        public Int64? MaxPlanesKilled {get; set;}

        ///<summary>
        ///Максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника
        ///</summary>
        [JsonProperty("planes_killed")]
        public Int64? PlanesKilled {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Выжил в боях и победил
        ///</summary>
        [JsonProperty("survived_wins")]
        public Int64? SurvivedWins {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Общий опыт, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}

        ///<summary>
        ///Статистика использования авиации
        ///</summary>
        [JsonProperty("aircraft")]
        public WowsSeasonsShipstatsSeasonsRank_div2Aircraft Aircraft {get; set;}

        ///<summary>
        ///Статистика стрельбы главным калибром
        ///</summary>
        [JsonProperty("main_battery")]
        public WowsSeasonsShipstatsSeasonsRank_div2Main_battery MainBattery {get; set;}

        ///<summary>
        ///Статистика использования тарана
        ///</summary>
        [JsonProperty("ramming")]
        public WowsSeasonsShipstatsSeasonsRank_div2Ramming Ramming {get; set;}

        ///<summary>
        ///Статистика стрельбы вспомогательным калибром
        ///</summary>
        [JsonProperty("second_battery")]
        public WowsSeasonsShipstatsSeasonsRank_div2Second_battery SecondBattery {get; set;}

        ///<summary>
        ///Статистика стрельбы торпедами
        ///</summary>
        [JsonProperty("torpedoes")]
        public WowsSeasonsShipstatsSeasonsRank_div2Torpedoes Torpedoes {get; set;}
    }
    public class WowsSeasonsShipstatsSeasonsRank_div2Aircraft
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}
    }

    public class WowsSeasonsShipstatsSeasonsRank_div2Main_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsSeasonsShipstatsSeasonsRank_div2Ramming
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}
    }

    public class WowsSeasonsShipstatsSeasonsRank_div2Second_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsSeasonsShipstatsSeasonsRank_div2Torpedoes
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }


    public class WowsSeasonsShipstatsSeasonsRank_div3
    {

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Количество нанесённых повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt")]
        public Int64? MaxDamageDealt {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Максимальное количество сбитых самолётов за бой
        ///</summary>
        [JsonProperty("max_planes_killed")]
        public Int64? MaxPlanesKilled {get; set;}

        ///<summary>
        ///Максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника
        ///</summary>
        [JsonProperty("planes_killed")]
        public Int64? PlanesKilled {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Выжил в боях и победил
        ///</summary>
        [JsonProperty("survived_wins")]
        public Int64? SurvivedWins {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Общий опыт, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}

        ///<summary>
        ///Статистика использования авиации
        ///</summary>
        [JsonProperty("aircraft")]
        public WowsSeasonsShipstatsSeasonsRank_div3Aircraft Aircraft {get; set;}

        ///<summary>
        ///Статистика стрельбы главным калибром
        ///</summary>
        [JsonProperty("main_battery")]
        public WowsSeasonsShipstatsSeasonsRank_div3Main_battery MainBattery {get; set;}

        ///<summary>
        ///Статистика использования тарана
        ///</summary>
        [JsonProperty("ramming")]
        public WowsSeasonsShipstatsSeasonsRank_div3Ramming Ramming {get; set;}

        ///<summary>
        ///Статистика стрельбы вспомогательным калибром
        ///</summary>
        [JsonProperty("second_battery")]
        public WowsSeasonsShipstatsSeasonsRank_div3Second_battery SecondBattery {get; set;}

        ///<summary>
        ///Статистика стрельбы торпедами
        ///</summary>
        [JsonProperty("torpedoes")]
        public WowsSeasonsShipstatsSeasonsRank_div3Torpedoes Torpedoes {get; set;}
    }
    public class WowsSeasonsShipstatsSeasonsRank_div3Aircraft
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}
    }

    public class WowsSeasonsShipstatsSeasonsRank_div3Main_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsSeasonsShipstatsSeasonsRank_div3Ramming
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}
    }

    public class WowsSeasonsShipstatsSeasonsRank_div3Second_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsSeasonsShipstatsSeasonsRank_div3Torpedoes
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }


    public class WowsSeasonsShipstatsSeasonsRank_solo
    {

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Количество нанесённых повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt")]
        public Int64? MaxDamageDealt {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Максимальное количество сбитых самолётов за бой
        ///</summary>
        [JsonProperty("max_planes_killed")]
        public Int64? MaxPlanesKilled {get; set;}

        ///<summary>
        ///Максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника
        ///</summary>
        [JsonProperty("planes_killed")]
        public Int64? PlanesKilled {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Выжил в боях и победил
        ///</summary>
        [JsonProperty("survived_wins")]
        public Int64? SurvivedWins {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Общий опыт, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}

        ///<summary>
        ///Статистика использования авиации
        ///</summary>
        [JsonProperty("aircraft")]
        public WowsSeasonsShipstatsSeasonsRank_soloAircraft Aircraft {get; set;}

        ///<summary>
        ///Статистика стрельбы главным калибром
        ///</summary>
        [JsonProperty("main_battery")]
        public WowsSeasonsShipstatsSeasonsRank_soloMain_battery MainBattery {get; set;}

        ///<summary>
        ///Статистика использования тарана
        ///</summary>
        [JsonProperty("ramming")]
        public WowsSeasonsShipstatsSeasonsRank_soloRamming Ramming {get; set;}

        ///<summary>
        ///Статистика стрельбы вспомогательным калибром
        ///</summary>
        [JsonProperty("second_battery")]
        public WowsSeasonsShipstatsSeasonsRank_soloSecond_battery SecondBattery {get; set;}

        ///<summary>
        ///Статистика стрельбы торпедами
        ///</summary>
        [JsonProperty("torpedoes")]
        public WowsSeasonsShipstatsSeasonsRank_soloTorpedoes Torpedoes {get; set;}
    }
    public class WowsSeasonsShipstatsSeasonsRank_soloAircraft
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}
    }

    public class WowsSeasonsShipstatsSeasonsRank_soloMain_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsSeasonsShipstatsSeasonsRank_soloRamming
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}
    }

    public class WowsSeasonsShipstatsSeasonsRank_soloSecond_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsSeasonsShipstatsSeasonsRank_soloTorpedoes
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }





    ///<summary>
    /// Статистика игроков в ранговых боях
    /// https://ru.wargaming.net/developers/api_reference/wows/seasons/accountinfo/
    ///</summary>
    [Method(Url="api.worldofwarships.ru/wows/seasons/accountinfo/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wows/seasons/accountinfo/")]
    public class RequestWowsSeasonsAccountinfo:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"cs" — Čeština 
///"de" — Deutsch 
///"en" — English 
///"es" — Español 
///"fr" — Français 
///"ja" — 日本語 
///"pl" — Polski 
///"ru" — Русский (используется по умолчанию)
///"th" — ไทย 
///"zh-tw" — 繁體中文
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Ключ доступа к персональным данным пользователя. Имеет срок действия. Для получения ключа доступа необходимо запросить аутентификацию.
        ///string
        ///</summary>
        [JsonProperty("access_token")]
        public string AccessToken {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор аккаунта игрока
        ///numeric, list
        ///</summary>
        [JsonProperty("account_id")]
        [FieldIsMandatory]
        public string AccountId {get; set;}

        ///<summary>
        ///Идентификатор сезона
        ///numeric, list
        ///</summary>
        [JsonProperty("season_id")]
        public string SeasonId {get; set;}
    }
    
    ///<summary>
    ///Статистика игроков в ранговых боях
    ///</summary>
    public class ResponseWowsSeasonsAccountinfo:IResponse
    {

        ///<summary>
        ///Идентификатор игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Сезоны ранговых боёв
        ///</summary>
        [JsonProperty("seasons")]
        public WowsSeasonsAccountinfoSeasons Seasons {get; set;}
    }
    public class WowsSeasonsAccountinfoSeasons
    {

        ///<summary>
        ///Статистика игрока в ранговых боях в составе отряда из 2 игроков
        ///</summary>
        [JsonProperty("rank_div2")]
        public WowsSeasonsAccountinfoSeasonsRank_div2 RankDiv2 {get; set;}

        ///<summary>
        ///Статистика игрока в ранговых боях в составе отряда из 3 игроков
        ///</summary>
        [JsonProperty("rank_div3")]
        public WowsSeasonsAccountinfoSeasonsRank_div3 RankDiv3 {get; set;}

        ///<summary>
        ///Информация о ранговых боях
        ///</summary>
        [JsonProperty("rank_info")]
        public WowsSeasonsAccountinfoSeasonsRank_info RankInfo {get; set;}

        ///<summary>
        ///Статистика игрока в ранговых боях не в составе отряда
        ///</summary>
        [JsonProperty("rank_solo")]
        public WowsSeasonsAccountinfoSeasonsRank_solo RankSolo {get; set;}
    }
    public class WowsSeasonsAccountinfoSeasonsRank_div2
    {

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Количество нанесённых повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt")]
        public Int64? MaxDamageDealt {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Максимальное количество сбитых самолётов за бой
        ///</summary>
        [JsonProperty("max_planes_killed")]
        public Int64? MaxPlanesKilled {get; set;}

        ///<summary>
        ///Максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника
        ///</summary>
        [JsonProperty("planes_killed")]
        public Int64? PlanesKilled {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Выжил в боях и победил
        ///</summary>
        [JsonProperty("survived_wins")]
        public Int64? SurvivedWins {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Общий опыт, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}

        ///<summary>
        ///Статистика использования авиации
        ///</summary>
        [JsonProperty("aircraft")]
        public WowsSeasonsAccountinfoSeasonsRank_div2Aircraft Aircraft {get; set;}

        ///<summary>
        ///Статистика стрельбы главным калибром
        ///</summary>
        [JsonProperty("main_battery")]
        public WowsSeasonsAccountinfoSeasonsRank_div2Main_battery MainBattery {get; set;}

        ///<summary>
        ///Статистика использования тарана
        ///</summary>
        [JsonProperty("ramming")]
        public WowsSeasonsAccountinfoSeasonsRank_div2Ramming Ramming {get; set;}

        ///<summary>
        ///Статистика стрельбы вспомогательным калибром
        ///</summary>
        [JsonProperty("second_battery")]
        public WowsSeasonsAccountinfoSeasonsRank_div2Second_battery SecondBattery {get; set;}

        ///<summary>
        ///Статистика стрельбы торпедами
        ///</summary>
        [JsonProperty("torpedoes")]
        public WowsSeasonsAccountinfoSeasonsRank_div2Torpedoes Torpedoes {get; set;}
    }
    public class WowsSeasonsAccountinfoSeasonsRank_div2Aircraft
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}
    }

    public class WowsSeasonsAccountinfoSeasonsRank_div2Main_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsSeasonsAccountinfoSeasonsRank_div2Ramming
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}
    }

    public class WowsSeasonsAccountinfoSeasonsRank_div2Second_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsSeasonsAccountinfoSeasonsRank_div2Torpedoes
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }


    public class WowsSeasonsAccountinfoSeasonsRank_div3
    {

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Количество нанесённых повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt")]
        public Int64? MaxDamageDealt {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Максимальное количество сбитых самолётов за бой
        ///</summary>
        [JsonProperty("max_planes_killed")]
        public Int64? MaxPlanesKilled {get; set;}

        ///<summary>
        ///Максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника
        ///</summary>
        [JsonProperty("planes_killed")]
        public Int64? PlanesKilled {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Выжил в боях и победил
        ///</summary>
        [JsonProperty("survived_wins")]
        public Int64? SurvivedWins {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Общий опыт, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}

        ///<summary>
        ///Статистика использования авиации
        ///</summary>
        [JsonProperty("aircraft")]
        public WowsSeasonsAccountinfoSeasonsRank_div3Aircraft Aircraft {get; set;}

        ///<summary>
        ///Статистика стрельбы главным калибром
        ///</summary>
        [JsonProperty("main_battery")]
        public WowsSeasonsAccountinfoSeasonsRank_div3Main_battery MainBattery {get; set;}

        ///<summary>
        ///Статистика использования тарана
        ///</summary>
        [JsonProperty("ramming")]
        public WowsSeasonsAccountinfoSeasonsRank_div3Ramming Ramming {get; set;}

        ///<summary>
        ///Статистика стрельбы вспомогательным калибром
        ///</summary>
        [JsonProperty("second_battery")]
        public WowsSeasonsAccountinfoSeasonsRank_div3Second_battery SecondBattery {get; set;}

        ///<summary>
        ///Статистика стрельбы торпедами
        ///</summary>
        [JsonProperty("torpedoes")]
        public WowsSeasonsAccountinfoSeasonsRank_div3Torpedoes Torpedoes {get; set;}
    }
    public class WowsSeasonsAccountinfoSeasonsRank_div3Aircraft
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}
    }

    public class WowsSeasonsAccountinfoSeasonsRank_div3Main_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsSeasonsAccountinfoSeasonsRank_div3Ramming
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}
    }

    public class WowsSeasonsAccountinfoSeasonsRank_div3Second_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsSeasonsAccountinfoSeasonsRank_div3Torpedoes
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }


    public class WowsSeasonsAccountinfoSeasonsRank_info
    {

        ///<summary>
        ///Лучший ранг игрока в текущем сезоне
        ///</summary>
        [JsonProperty("max_rank")]
        public Int64? MaxRank {get; set;}

        ///<summary>
        ///Текущий ранг игрока
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Статус текущего сезона
        ///</summary>
        [JsonProperty("stage")]
        public Int64? Stage {get; set;}

        ///<summary>
        ///Количество звёзд
        ///</summary>
        [JsonProperty("stars")]
        public Int64? Stars {get; set;}

        ///<summary>
        ///Минимальный ранг для участия в сезоне
        ///</summary>
        [JsonProperty("start_rank")]
        public Int64? StartRank {get; set;}
    }

    public class WowsSeasonsAccountinfoSeasonsRank_solo
    {

        ///<summary>
        ///Проведено боёв
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Количество нанесённых повреждений
        ///</summary>
        [JsonProperty("damage_dealt")]
        public Int64? DamageDealt {get; set;}

        ///<summary>
        ///Ничьи
        ///</summary>
        [JsonProperty("draws")]
        public Int64? Draws {get; set;}

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Поражения
        ///</summary>
        [JsonProperty("losses")]
        public Int64? Losses {get; set;}

        ///<summary>
        ///Максимальный урон за бой
        ///</summary>
        [JsonProperty("max_damage_dealt")]
        public Int64? MaxDamageDealt {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Максимальное количество сбитых самолётов за бой
        ///</summary>
        [JsonProperty("max_planes_killed")]
        public Int64? MaxPlanesKilled {get; set;}

        ///<summary>
        ///Максимальный опыт за бой, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("max_xp")]
        public Int64? MaxXp {get; set;}

        ///<summary>
        ///Уничтожено самолётов противника
        ///</summary>
        [JsonProperty("planes_killed")]
        public Int64? PlanesKilled {get; set;}

        ///<summary>
        ///Выжил в боях
        ///</summary>
        [JsonProperty("survived_battles")]
        public Int64? SurvivedBattles {get; set;}

        ///<summary>
        ///Выжил в боях и победил
        ///</summary>
        [JsonProperty("survived_wins")]
        public Int64? SurvivedWins {get; set;}

        ///<summary>
        ///Победы
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}

        ///<summary>
        ///Общий опыт, включая опыт, заработанный с премиум аккаунтом
        ///</summary>
        [JsonProperty("xp")]
        public Int64? Xp {get; set;}

        ///<summary>
        ///Статистика использования авиации
        ///</summary>
        [JsonProperty("aircraft")]
        public WowsSeasonsAccountinfoSeasonsRank_soloAircraft Aircraft {get; set;}

        ///<summary>
        ///Статистика стрельбы главным калибром
        ///</summary>
        [JsonProperty("main_battery")]
        public WowsSeasonsAccountinfoSeasonsRank_soloMain_battery MainBattery {get; set;}

        ///<summary>
        ///Статистика использования тарана
        ///</summary>
        [JsonProperty("ramming")]
        public WowsSeasonsAccountinfoSeasonsRank_soloRamming Ramming {get; set;}

        ///<summary>
        ///Статистика стрельбы вспомогательным калибром
        ///</summary>
        [JsonProperty("second_battery")]
        public WowsSeasonsAccountinfoSeasonsRank_soloSecond_battery SecondBattery {get; set;}

        ///<summary>
        ///Статистика стрельбы торпедами
        ///</summary>
        [JsonProperty("torpedoes")]
        public WowsSeasonsAccountinfoSeasonsRank_soloTorpedoes Torpedoes {get; set;}
    }
    public class WowsSeasonsAccountinfoSeasonsRank_soloAircraft
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}
    }

    public class WowsSeasonsAccountinfoSeasonsRank_soloMain_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsSeasonsAccountinfoSeasonsRank_soloRamming
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}
    }

    public class WowsSeasonsAccountinfoSeasonsRank_soloSecond_battery
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }

    public class WowsSeasonsAccountinfoSeasonsRank_soloTorpedoes
    {

        ///<summary>
        ///Потоплено кораблей
        ///</summary>
        [JsonProperty("frags")]
        public Int64? Frags {get; set;}

        ///<summary>
        ///Попадания
        ///</summary>
        [JsonProperty("hits")]
        public Int64? Hits {get; set;}

        ///<summary>
        ///Максимальное количество потопленных кораблей противника за бой
        ///</summary>
        [JsonProperty("max_frags_battle")]
        public Int64? MaxFragsBattle {get; set;}

        ///<summary>
        ///Произведено выстрелов
        ///</summary>
        [JsonProperty("shots")]
        public Int64? Shots {get; set;}
    }





}

namespace WGClient.Wargaming.NET
{
    ///<summary>
    /// Список аккаунтов
    /// https://ru.wargaming.net/developers/api_reference/wgn/account/list/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wgn/account/list/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wgn/account/list/")]
    public class RequestWgnAccountList:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Название игры, для которой производится поиск игрока. Если параметр не указан, поиск выполняется среди известных игр. Допустимые значения: 
///
///"wotb" — World of Tanks Blitz 
///"wot" — World of Tanks 
///"wows" — World of Warships 
///"wotg" — World of Tanks Generals 
///"wowp" — World of Warplanes
        ///string, list
        ///</summary>
        [JsonProperty("game")]
        public string Game {get; set;}

        ///<summary>
        ///Ти поиска. По умолчанию: startswith. Допустимые значения: 
///
///"startswith" — Поиск по начальной части имени игрока без учёта регистра. Минимальная длина: 3 символа. Максимальная длина: 24 символа. (используется по умолчанию)
///"exact" — Поиск по строгому соответствию имени игрока без учёта регистра. Допускается указание списка имён для поиска, разделённых запятыми (до 100 значений)
        ///string
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Строка поиска по имени игрока. Вид поиска и минимальная длина строки поиска зависят от параметра type. При использовании типа поиска exact допускается указание списка имён для поиска, разделённых запятыми.
        ///string
        ///</summary>
        [JsonProperty("search")]
        [FieldIsMandatory]
        public string Search {get; set;}

        ///<summary>
        ///Количество возвращаемых записей (может вернуться меньше записей, но не больше 100). Если переданный лимит превышает 100, тогда автоматически выставляется лимит в None (по умолчанию).
        ///numeric
        ///</summary>
        [JsonProperty("limit")]
        public string Limit {get; set;}
    }
    
    ///<summary>
    ///Список аккаунтов
    ///</summary>
    public class ResponseWgnAccountList:IResponse
    {

        ///<summary>
        ///Идентификатор игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Дата создания аккаунта игрока
        ///</summary>
        [JsonProperty("created_at")]
        public int? CreatedAt {get; set;}

        ///<summary>
        ///Список игр, в которые играл игрок
        ///</summary>
        [JsonProperty("games")]
        public string[] Games {get; set;}

        ///<summary>
        ///Имя игрока
        ///</summary>
        [JsonProperty("nickname")]
        public string Nickname {get; set;}
    }


    ///<summary>
    /// Информация об аккаунте
    /// https://ru.wargaming.net/developers/api_reference/wgn/account/info/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wgn/account/info/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wgn/account/info/")]
    public class RequestWgnAccountInfo:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Ключ доступа к персональным данным пользователя. Имеет срок действия. Для получения ключа доступа необходимо запросить аутентификацию.
        ///string
        ///</summary>
        [JsonProperty("access_token")]
        public string AccessToken {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор игрока
        ///numeric, list
        ///</summary>
        [JsonProperty("account_id")]
        [FieldIsMandatory]
        public string AccountId {get; set;}
    }
    
    ///<summary>
    ///Информация об аккаунте
    ///</summary>
    public class ResponseWgnAccountInfo:IResponse
    {

        ///<summary>
        ///Идентификатор игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Дата создания аккаунта игрока
        ///</summary>
        [JsonProperty("created_at")]
        public int? CreatedAt {get; set;}

        ///<summary>
        ///Список игр, в которые играл игрок
        ///</summary>
        [JsonProperty("games")]
        public string[] Games {get; set;}

        ///<summary>
        ///Имя игрока
        ///</summary>
        [JsonProperty("nickname")]
        public string Nickname {get; set;}

        ///<summary>
        ///Приватные данные игрока
        ///</summary>
        [JsonProperty("private")]
        public WgnAccountInfoPrivate Private {get; set;}
    }
    public class WgnAccountInfoPrivate
    {

        ///<summary>
        ///Количество свободного опыта
        ///</summary>
        [JsonProperty("free_xp")]
        public Int64? FreeXp {get; set;}

        ///<summary>
        ///Текущий баланс золота
        ///</summary>
        [JsonProperty("gold")]
        public Int64? Gold {get; set;}

        ///<summary>
        ///Срок действия премиум аккаунта
        ///</summary>
        [JsonProperty("premium_expires_at")]
        public int? PremiumExpiresAt {get; set;}
    }



    ///<summary>
    /// Контент
    /// https://ru.wargaming.net/developers/api_reference/wgn/wargag/content/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wgn/wargag/content/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wgn/wargag/content/")]
    public class RequestWgnWargagContent:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Ключ доступа к персональным данным пользователя. Имеет срок действия. Для получения ключа доступа необходимо запросить аутентификацию.
        ///string
        ///</summary>
        [JsonProperty("access_token")]
        public string AccessToken {get; set;}

        ///<summary>
        ///Идентификатор контента. При указании данного параметра другие переданные параметры игнорируются.
        ///numeric
        ///</summary>
        [JsonProperty("content_id")]
        public string ContentId {get; set;}

        ///<summary>
        ///Тип контента. Допустимые значения: 
///
///"quote" — тип контента «Цитата» 
///"video" — тип контента «Видео» 
///"picture" — тип контента «Картинки»
        ///string
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}

        ///<summary>
        ///Дата публикации
        ///timestamp/date
        ///</summary>
        [JsonProperty("date")]
        public string Date {get; set;}

        ///<summary>
        ///Идентификатор категории контента
        ///numeric
        ///</summary>
        [JsonProperty("category_id")]
        public string CategoryId {get; set;}

        ///<summary>
        ///Идентификатор тега
        ///numeric
        ///</summary>
        [JsonProperty("tag_id")]
        public string TagId {get; set;}

        ///<summary>
        ///Пороговое значение рейтинга публикации
        ///numeric
        ///</summary>
        [JsonProperty("rating_threshold")]
        public string RatingThreshold {get; set;}

        ///<summary>
        ///Идентификатор автора публикации
        ///numeric
        ///</summary>
        [JsonProperty("account_id")]
        public string AccountId {get; set;}

        ///<summary>
        ///Номер страницы результатов
        ///numeric
        ///</summary>
        [JsonProperty("page_no")]
        public string PageNo {get; set;}

        ///<summary>
        ///Сортировка. Допустимые значения: 
///
///"date" — по дате публикации 
///"-date" — по дате публикации в обратном порядке (используется по умолчанию)
///"rating" — по значению рейтинга 
///"-rating" — по значению рейтинга в обратном порядке
        ///string
        ///</summary>
        [JsonProperty("order_by")]
        public string OrderBy {get; set;}
    }
    
    ///<summary>
    ///Контент
    ///</summary>
    public class ResponseWgnWargagContent:IResponse
    {

        ///<summary>
        ///Идентификатор автора публикации
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Идентификатор категории контента
        ///</summary>
        [JsonProperty("category_id")]
        public Int64? CategoryId {get; set;}

        ///<summary>
        ///Идентификатор публикации
        ///</summary>
        [JsonProperty("content_id")]
        public Int64? ContentId {get; set;}

        ///<summary>
        ///Дата создания публикации в формате UNIX timestamp или ISO 8601
        ///</summary>
        [JsonProperty("created_at")]
        public int? CreatedAt {get; set;}

        ///<summary>
        ///Текст публикации
        ///</summary>
        [JsonProperty("description")]
        public string Description {get; set;}

        ///<summary>
        ///Ссылка на предпросмотр изображения. Доступно только для контента picture.
        ///</summary>
        [JsonProperty("media_preview_url")]
        public string MediaPreviewUrl {get; set;}

        ///<summary>
        ///Ссылка на картинку/видео
        ///</summary>
        [JsonProperty("media_url")]
        public string MediaUrl {get; set;}

        ///<summary>
        ///Имя игрока
        ///</summary>
        [JsonProperty("nickname")]
        public string Nickname {get; set;}

        ///<summary>
        ///Текущий рейтинг
        ///</summary>
        [JsonProperty("rating")]
        public Int64? Rating {get; set;}

        ///<summary>
        ///Тема публикации
        ///</summary>
        [JsonProperty("subject")]
        public string Subject {get; set;}

        ///<summary>
        ///Идентификатор тега
        ///</summary>
        [JsonProperty("tag_id")]
        public Int64? TagId {get; set;}

        ///<summary>
        ///Тип контента
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}

        ///<summary>
        ///Ссылка на оригинальную публикацию
        ///</summary>
        [JsonProperty("wargag_url")]
        public string WargagUrl {get; set;}

        ///<summary>
        ///Показывает возможность проголосовать за контент. Данные доступны только при наличии действующего access_token для указанного аккаунта.
        ///</summary>
        [JsonProperty("allowed_to_vote")]
        public bool AllowedToVote {get; set;}

        ///<summary>
        ///Автор контента
        ///</summary>
        [JsonProperty("author")]
        public WgnWargagContentAuthor Author {get; set;}
    }
    public class WgnWargagContentAuthor
    {

        ///<summary>
        ///Репутация автора
        ///</summary>
        [JsonProperty("reputation")]
        public Int64? Reputation {get; set;}

        ///<summary>
        ///Звание автора
        ///</summary>
        [JsonProperty("status")]
        public string Status {get; set;}

        ///<summary>
        ///Значок звания
        ///</summary>
        [JsonProperty("status_image")]
        public string StatusImage {get; set;}
    }



    ///<summary>
    /// Поиск контента
    /// https://ru.wargaming.net/developers/api_reference/wgn/wargag/search/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wgn/wargag/search/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wgn/wargag/search/")]
    public class RequestWgnWargagSearch:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Ключ доступа к персональным данным пользователя. Имеет срок действия. Для получения ключа доступа необходимо запросить аутентификацию.
        ///string
        ///</summary>
        [JsonProperty("access_token")]
        public string AccessToken {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Текст для поиска по контенту. Минимальная длина: 3 символа без учёта регистра.
        ///string
        ///</summary>
        [JsonProperty("q")]
        [FieldIsMandatory]
        public string Q {get; set;}

        ///<summary>
        ///Тип контента. Допустимые значения: 
///
///"quote" — тип контента «Цитата» 
///"video" — тип контента «Видео» 
///"picture" — тип контента «Картинки»
        ///string
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}

        ///<summary>
        ///Идентификатор категории контента
        ///numeric
        ///</summary>
        [JsonProperty("category_id")]
        public string CategoryId {get; set;}

        ///<summary>
        ///Идентификатор тега
        ///numeric
        ///</summary>
        [JsonProperty("tag_id")]
        public string TagId {get; set;}

        ///<summary>
        ///Пороговое значение рейтинга публикации
        ///numeric
        ///</summary>
        [JsonProperty("rating_threshold")]
        public string RatingThreshold {get; set;}
    }
    
    ///<summary>
    ///Поиск контента
    ///</summary>
    public class ResponseWgnWargagSearch:IResponse
    {

        ///<summary>
        ///Идентификатор автора публикации
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Идентификатор категории контента
        ///</summary>
        [JsonProperty("category_id")]
        public Int64? CategoryId {get; set;}

        ///<summary>
        ///Идентификатор публикации
        ///</summary>
        [JsonProperty("content_id")]
        public Int64? ContentId {get; set;}

        ///<summary>
        ///Дата создания публикации в формате UNIX timestamp или ISO 8601
        ///</summary>
        [JsonProperty("created_at")]
        public int? CreatedAt {get; set;}

        ///<summary>
        ///Текст публикации
        ///</summary>
        [JsonProperty("description")]
        public string Description {get; set;}

        ///<summary>
        ///Ссылка на предпросмотр изображения. Доступно только для контента picture.
        ///</summary>
        [JsonProperty("media_preview_url")]
        public string MediaPreviewUrl {get; set;}

        ///<summary>
        ///Ссылка на картинку/видео
        ///</summary>
        [JsonProperty("media_url")]
        public string MediaUrl {get; set;}

        ///<summary>
        ///Имя игрока
        ///</summary>
        [JsonProperty("nickname")]
        public string Nickname {get; set;}

        ///<summary>
        ///Текущий рейтинг
        ///</summary>
        [JsonProperty("rating")]
        public Int64? Rating {get; set;}

        ///<summary>
        ///Тема публикации
        ///</summary>
        [JsonProperty("subject")]
        public string Subject {get; set;}

        ///<summary>
        ///Идентификатор тега
        ///</summary>
        [JsonProperty("tag_id")]
        public Int64? TagId {get; set;}

        ///<summary>
        ///Тип контента
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}

        ///<summary>
        ///Ссылка на оригинальную публикацию
        ///</summary>
        [JsonProperty("wargag_url")]
        public string WargagUrl {get; set;}

        ///<summary>
        ///Показывает возможность проголосовать за контент. Данные доступны только при наличии действующего access_token для указанного аккаунта.
        ///</summary>
        [JsonProperty("allowed_to_vote")]
        public bool AllowedToVote {get; set;}

        ///<summary>
        ///Автор контента
        ///</summary>
        [JsonProperty("author")]
        public WgnWargagSearchAuthor Author {get; set;}
    }
    public class WgnWargagSearchAuthor
    {

        ///<summary>
        ///Репутация автора
        ///</summary>
        [JsonProperty("reputation")]
        public Int64? Reputation {get; set;}

        ///<summary>
        ///Звание автора
        ///</summary>
        [JsonProperty("status")]
        public string Status {get; set;}

        ///<summary>
        ///Значок звания
        ///</summary>
        [JsonProperty("status_image")]
        public string StatusImage {get; set;}
    }



    ///<summary>
    /// Комментарии
    /// https://ru.wargaming.net/developers/api_reference/wgn/wargag/comments/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wgn/wargag/comments/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wgn/wargag/comments/")]
    public class RequestWgnWargagComments:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор публикации
        ///numeric
        ///</summary>
        [JsonProperty("content_id")]
        [FieldIsMandatory]
        public string ContentId {get; set;}

        ///<summary>
        ///Номер страницы результатов
        ///numeric
        ///</summary>
        [JsonProperty("page_no")]
        public string PageNo {get; set;}
    }
    
    ///<summary>
    ///Комментарии
    ///</summary>
    public class ResponseWgnWargagComments:IResponse
    {

        ///<summary>
        ///Идентификатор автора комментария
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Текст комментария
        ///</summary>
        [JsonProperty("comment")]
        public string Comment {get; set;}

        ///<summary>
        ///Идентификатор комментария
        ///</summary>
        [JsonProperty("comment_id")]
        public Int64? CommentId {get; set;}

        ///<summary>
        ///Идентификатор публикации
        ///</summary>
        [JsonProperty("content_id")]
        public Int64? ContentId {get; set;}

        ///<summary>
        ///Дата комментария
        ///</summary>
        [JsonProperty("created_at")]
        public int? CreatedAt {get; set;}

        ///<summary>
        ///Имя игрока
        ///</summary>
        [JsonProperty("nickname")]
        public string Nickname {get; set;}

        ///<summary>
        ///Автор комментария
        ///</summary>
        [JsonProperty("author")]
        public WgnWargagCommentsAuthor Author {get; set;}
    }
    public class WgnWargagCommentsAuthor
    {

        ///<summary>
        ///Репутация автора
        ///</summary>
        [JsonProperty("reputation")]
        public Int64? Reputation {get; set;}

        ///<summary>
        ///Звание автора
        ///</summary>
        [JsonProperty("status")]
        public string Status {get; set;}

        ///<summary>
        ///Значок звания
        ///</summary>
        [JsonProperty("status_image")]
        public string StatusImage {get; set;}
    }



    ///<summary>
    /// Категории
    /// https://ru.wargaming.net/developers/api_reference/wgn/wargag/categories/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wgn/wargag/categories/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wgn/wargag/categories/")]
    public class RequestWgnWargagCategories:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Тип контента. Допустимые значения: 
///
///"video" — тип контента «Видео» 
///"picture" — тип контента «Картинки»
        ///string
        ///</summary>
        [JsonProperty("type")]
        [FieldIsMandatory]
        public string Type {get; set;}

        ///<summary>
        ///Идентификатор категории контента
        ///numeric
        ///</summary>
        [JsonProperty("category_id")]
        public string CategoryId {get; set;}
    }
    
    ///<summary>
    ///Категории
    ///</summary>
    public class ResponseWgnWargagCategories:IResponse
    {

        ///<summary>
        ///Идентификатор категории контента
        ///</summary>
        [JsonProperty("category_id")]
        public Int64? CategoryId {get; set;}

        ///<summary>
        ///Название категории контента
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Тип контента
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}
    }


    ///<summary>
    /// Теги
    /// https://ru.wargaming.net/developers/api_reference/wgn/wargag/tags/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wgn/wargag/tags/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wgn/wargag/tags/")]
    public class RequestWgnWargagTags:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Идентификатор тега
        ///numeric
        ///</summary>
        [JsonProperty("tag_id")]
        public string TagId {get; set;}
    }
    
    ///<summary>
    ///Теги
    ///</summary>
    public class ResponseWgnWargagTags:IResponse
    {

        ///<summary>
        ///Название тега
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Идентификатор тега
        ///</summary>
        [JsonProperty("tag_id")]
        public Int64? TagId {get; set;}
    }


    ///<summary>
    /// Оценка контента
    /// https://ru.wargaming.net/developers/api_reference/wgn/wargag/rate/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wgn/wargag/rate/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wgn/wargag/rate/")]
    public class RequestWgnWargagRate:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Ключ доступа к персональным данным пользователя. Имеет срок действия. Для получения ключа доступа необходимо запросить аутентификацию.
        ///string
        ///</summary>
        [JsonProperty("access_token")]
        [FieldIsMandatory]
        public string AccessToken {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор публикации
        ///numeric
        ///</summary>
        [JsonProperty("content_id")]
        [FieldIsMandatory]
        public string ContentId {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Оценка. Допустимые значения: 
///
///"up" — Увеличить рейтинг контента 
///"down" — Уменьшить рейтинг контента
        ///string
        ///</summary>
        [JsonProperty("rating")]
        [FieldIsMandatory]
        public string Rating {get; set;}
    }
    
    ///<summary>
    ///Оценка контента
    ///</summary>
    public class ResponseWgnWargagRate:IResponse
    {

        ///<summary>
        ///Идентификатор автора публикации
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Идентификатор категории контента
        ///</summary>
        [JsonProperty("category_id")]
        public Int64? CategoryId {get; set;}

        ///<summary>
        ///Идентификатор публикации
        ///</summary>
        [JsonProperty("content_id")]
        public Int64? ContentId {get; set;}

        ///<summary>
        ///Дата создания публикации в формате UNIX timestamp или ISO 8601
        ///</summary>
        [JsonProperty("created_at")]
        public int? CreatedAt {get; set;}

        ///<summary>
        ///Текст публикации
        ///</summary>
        [JsonProperty("description")]
        public string Description {get; set;}

        ///<summary>
        ///Ссылка на предпросмотр изображения. Доступно только для контента picture.
        ///</summary>
        [JsonProperty("media_preview_url")]
        public string MediaPreviewUrl {get; set;}

        ///<summary>
        ///Ссылка на картинку/видео
        ///</summary>
        [JsonProperty("media_url")]
        public string MediaUrl {get; set;}

        ///<summary>
        ///Имя игрока
        ///</summary>
        [JsonProperty("nickname")]
        public string Nickname {get; set;}

        ///<summary>
        ///Текущий рейтинг
        ///</summary>
        [JsonProperty("rating")]
        public Int64? Rating {get; set;}

        ///<summary>
        ///Тема публикации
        ///</summary>
        [JsonProperty("subject")]
        public string Subject {get; set;}

        ///<summary>
        ///Идентификатор тега
        ///</summary>
        [JsonProperty("tag_id")]
        public Int64? TagId {get; set;}

        ///<summary>
        ///Тип контента
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}

        ///<summary>
        ///Ссылка на оригинальную публикацию
        ///</summary>
        [JsonProperty("wargag_url")]
        public string WargagUrl {get; set;}

        ///<summary>
        ///Автор контента
        ///</summary>
        [JsonProperty("author")]
        public WgnWargagRateAuthor Author {get; set;}
    }
    public class WgnWargagRateAuthor
    {

        ///<summary>
        ///Репутация автора
        ///</summary>
        [JsonProperty("reputation")]
        public Int64? Reputation {get; set;}

        ///<summary>
        ///Звание автора
        ///</summary>
        [JsonProperty("status")]
        public string Status {get; set;}

        ///<summary>
        ///Значок звания
        ///</summary>
        [JsonProperty("status_image")]
        public string StatusImage {get; set;}
    }



    ///<summary>
    /// Добавление комментариев
    /// https://ru.wargaming.net/developers/api_reference/wgn/wargag/newcomment/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wgn/wargag/newcomment/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wgn/wargag/newcomment/")]
    public class RequestWgnWargagNewcomment:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Ключ доступа к персональным данным пользователя. Имеет срок действия. Для получения ключа доступа необходимо запросить аутентификацию.
        ///string
        ///</summary>
        [JsonProperty("access_token")]
        [FieldIsMandatory]
        public string AccessToken {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор публикации
        ///numeric
        ///</summary>
        [JsonProperty("content_id")]
        [FieldIsMandatory]
        public string ContentId {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Текст комментария. Максимальная длина: 1000 символов.
        ///string
        ///</summary>
        [JsonProperty("text")]
        [FieldIsMandatory]
        public string Text {get; set;}
    }
    
    ///<summary>
    ///Добавление комментариев
    ///</summary>
    public class ResponseWgnWargagNewcomment:IResponse
    {

        ///<summary>
        ///Идентификатор автора комментария
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Текст комментария
        ///</summary>
        [JsonProperty("comment")]
        public string Comment {get; set;}

        ///<summary>
        ///Идентификатор комментария
        ///</summary>
        [JsonProperty("comment_id")]
        public Int64? CommentId {get; set;}

        ///<summary>
        ///Идентификатор публикации
        ///</summary>
        [JsonProperty("content_id")]
        public Int64? ContentId {get; set;}

        ///<summary>
        ///Дата комментария
        ///</summary>
        [JsonProperty("created_at")]
        public int? CreatedAt {get; set;}

        ///<summary>
        ///Имя игрока
        ///</summary>
        [JsonProperty("nickname")]
        public string Nickname {get; set;}

        ///<summary>
        ///Автор комментария
        ///</summary>
        [JsonProperty("author")]
        public WgnWargagNewcommentAuthor Author {get; set;}
    }
    public class WgnWargagNewcommentAuthor
    {

        ///<summary>
        ///Репутация автора
        ///</summary>
        [JsonProperty("reputation")]
        public Int64? Reputation {get; set;}

        ///<summary>
        ///Звание автора
        ///</summary>
        [JsonProperty("status")]
        public string Status {get; set;}

        ///<summary>
        ///Значок звания
        ///</summary>
        [JsonProperty("status_image")]
        public string StatusImage {get; set;}
    }



    ///<summary>
    /// Удаление комментариев
    /// https://ru.wargaming.net/developers/api_reference/wgn/wargag/deletecomment/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wgn/wargag/deletecomment/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wgn/wargag/deletecomment/")]
    public class RequestWgnWargagDeletecomment:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Ключ доступа к персональным данным пользователя. Имеет срок действия. Для получения ключа доступа необходимо запросить аутентификацию.
        ///string
        ///</summary>
        [JsonProperty("access_token")]
        [FieldIsMandatory]
        public string AccessToken {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор комментария
        ///numeric
        ///</summary>
        [JsonProperty("comment_id")]
        [FieldIsMandatory]
        public string CommentId {get; set;}
    }
    
    ///<summary>
    ///Удаление комментариев
    ///</summary>
    public class ResponseWgnWargagDeletecomment:IResponse
    {
    }


    ///<summary>
    /// Лиги
    /// https://ru.wargaming.net/developers/api_reference/wgn/league/leagues/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wgn/league/leagues/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wgn/league/leagues/")]
    public class RequestWgnLeagueLeagues:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Количество возвращаемых записей (может вернуться меньше записей, но не больше 1000). Если переданный лимит превышает 1000, тогда автоматически выставляется лимит в 100 (по умолчанию).
        ///numeric
        ///</summary>
        [JsonProperty("limit")]
        public string Limit {get; set;}

        ///<summary>
        ///Номер страницы результатов
        ///numeric
        ///</summary>
        [JsonProperty("page_no")]
        public string PageNo {get; set;}

        ///<summary>
        ///Статус лиги. Допустимые значения: 
///
///"active" — Текущий 
///"complete" — Завершённый
        ///string
        ///</summary>
        [JsonProperty("status")]
        public string Status {get; set;}

        ///<summary>
        ///Идентификатор лиги
        ///numeric, list
        ///</summary>
        [JsonProperty("league_id")]
        public string LeagueId {get; set;}
    }
    
    ///<summary>
    ///Лиги
    ///</summary>
    public class ResponseWgnLeagueLeagues:IResponse
    {

        ///<summary>
        ///Идентификатор лиги
        ///</summary>
        [JsonProperty("league_id")]
        public Int64? LeagueId {get; set;}

        ///<summary>
        ///Локализованное название лиги
        ///</summary>
        [JsonProperty("name_i18n")]
        public string NameI18n {get; set;}

        ///<summary>
        ///Идентификатор родительской лиги
        ///</summary>
        [JsonProperty("parent_id")]
        public Int64? ParentId {get; set;}

        ///<summary>
        ///Статус лиги: 'active' или 'complete'
        ///</summary>
        [JsonProperty("status")]
        public string Status {get; set;}

        ///<summary>
        ///Дата последнего обновления информации о лиге
        ///</summary>
        [JsonProperty("updated_at")]
        public int? UpdatedAt {get; set;}

        ///<summary>
        ///Список сезонов лиги
        ///</summary>
        [JsonProperty("seasons")]
        public WgnLeagueLeaguesSeasons Seasons {get; set;}

        ///<summary>
        ///Список этапов лиги
        ///</summary>
        [JsonProperty("stages")]
        public WgnLeagueLeaguesStages Stages {get; set;}
    }
    public class WgnLeagueLeaguesSeasons
    {

        ///<summary>
        ///Название сезона
        ///</summary>
        [JsonProperty("name_i18n")]
        public string NameI18n {get; set;}

        ///<summary>
        ///Идентификатор сезона
        ///</summary>
        [JsonProperty("season_id")]
        public Int64? SeasonId {get; set;}

        ///<summary>
        ///Статус сезона: 'active' или 'complete'
        ///</summary>
        [JsonProperty("status")]
        public string Status {get; set;}
    }

    public class WgnLeagueLeaguesStages
    {

        ///<summary>
        ///Название этапа
        ///</summary>
        [JsonProperty("name_i18n")]
        public string NameI18n {get; set;}

        ///<summary>
        ///Идентификатор этапа
        ///</summary>
        [JsonProperty("stage_id")]
        public Int64? StageId {get; set;}
    }



    ///<summary>
    /// Турниры
    /// https://ru.wargaming.net/developers/api_reference/wgn/league/tournaments/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wgn/league/tournaments/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wgn/league/tournaments/")]
    public class RequestWgnLeagueTournaments:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Количество возвращаемых записей (может вернуться меньше записей, но не больше 1000). Если переданный лимит превышает 1000, тогда автоматически выставляется лимит в 100 (по умолчанию).
        ///numeric
        ///</summary>
        [JsonProperty("limit")]
        public string Limit {get; set;}

        ///<summary>
        ///Номер страницы результатов
        ///numeric
        ///</summary>
        [JsonProperty("page_no")]
        public string PageNo {get; set;}

        ///<summary>
        ///Статус турнира. Допустимые значения: 
///
///"active" — Текущий 
///"complete" — Завершённый
        ///string
        ///</summary>
        [JsonProperty("status")]
        public string Status {get; set;}

        ///<summary>
        ///Идентификатор турнира
        ///numeric, list
        ///</summary>
        [JsonProperty("tournament_id")]
        public string TournamentId {get; set;}

        ///<summary>
        ///Идентификатор лиги
        ///numeric
        ///</summary>
        [JsonProperty("league_id")]
        public string LeagueId {get; set;}
    }
    
    ///<summary>
    ///Турниры
    ///</summary>
    public class ResponseWgnLeagueTournaments:IResponse
    {

        ///<summary>
        ///Идентификатор лиги, в которой проходит турнир
        ///</summary>
        [JsonProperty("league_id")]
        public Int64? LeagueId {get; set;}

        ///<summary>
        ///Дата обновления информации о матчах турнира
        ///</summary>
        [JsonProperty("matches_updated_at")]
        public int? MatchesUpdatedAt {get; set;}

        ///<summary>
        ///Локализованное название турнира
        ///</summary>
        [JsonProperty("name_i18n")]
        public string NameI18n {get; set;}

        ///<summary>
        ///Идентификатор сезона, в котором проходит турнир
        ///</summary>
        [JsonProperty("season_id")]
        public Int64? SeasonId {get; set;}

        ///<summary>
        ///Идентификатор этапа, на котором проходит турнир
        ///</summary>
        [JsonProperty("stage_id")]
        public Int64? StageId {get; set;}

        ///<summary>
        ///Статус турнира: 'active' или 'complete'
        ///</summary>
        [JsonProperty("status")]
        public string Status {get; set;}

        ///<summary>
        ///Список идентификаторов команд, участвующих в турнире
        ///</summary>
        [JsonProperty("team_ids")]
        public int[] TeamIds {get; set;}

        ///<summary>
        ///Идентификатор турнира
        ///</summary>
        [JsonProperty("tournament_id")]
        public Int64? TournamentId {get; set;}

        ///<summary>
        ///Тип турнира: 'RR' - round robin, 'DE' - double elimination, 'SE' - single elimination, 'SE_KR' - single elimination for Korea
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}

        ///<summary>
        ///Дата обновления информации о турнире
        ///</summary>
        [JsonProperty("updated_at")]
        public int? UpdatedAt {get; set;}
    }


    ///<summary>
    /// Турнирная сетка
    /// https://ru.wargaming.net/developers/api_reference/wgn/league/grid/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wgn/league/grid/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wgn/league/grid/")]
    public class RequestWgnLeagueGrid:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор турнира
        ///numeric
        ///</summary>
        [JsonProperty("tournament_id")]
        [FieldIsMandatory]
        public string TournamentId {get; set;}
    }
    
    ///<summary>
    ///Турнирная сетка
    ///</summary>
    public class ResponseWgnLeagueGrid:IResponse
    {

        ///<summary>
        ///Раунд турнира
        ///</summary>
        [JsonProperty("round")]
        public Int64? Round {get; set;}

        ///<summary>
        ///Список матчей в раунде
        ///</summary>
        [JsonProperty("matches")]
        public WgnLeagueGridMatches Matches {get; set;}
    }
    public class WgnLeagueGridMatches
    {

        ///<summary>
        ///Положение матча в турнирной сетке. 'winner' и 'loser' — ветки победителей и проигравших, соответственно. Если это первый раунд, полю присваивается значение 'null'.
        ///</summary>
        [JsonProperty("bracket")]
        public string Bracket {get; set;}

        ///<summary>
        ///Идентификатор матча
        ///</summary>
        [JsonProperty("match_id")]
        public Int64? MatchId {get; set;}

        ///<summary>
        ///Позиция матча в раунде
        ///</summary>
        [JsonProperty("position")]
        public Int64? Position {get; set;}

        ///<summary>
        ///Раунд матча в турнире
        ///</summary>
        [JsonProperty("round")]
        public Int64? Round {get; set;}

        ///<summary>
        ///Время начала матча. Если матч ещё не начался, полю присваивается значение 'null'.
        ///</summary>
        [JsonProperty("start_at")]
        public int? StartAt {get; set;}

        ///<summary>
        ///Cледующий матч проигравшего
        ///</summary>
        [JsonProperty("loser")]
        public WgnLeagueGridMatchesLoser Loser {get; set;}

        ///<summary>
        ///Cледующий матч победителя
        ///</summary>
        [JsonProperty("winner")]
        public WgnLeagueGridMatchesWinner Winner {get; set;}
    }
    public class WgnLeagueGridMatchesLoser
    {

        ///<summary>
        ///Идентификатор следующего матча в турнире для команды
        ///</summary>
        [JsonProperty("next_match_id")]
        public Int64? NextMatchId {get; set;}

        ///<summary>
        ///Идентификатор следующего раунда для команды
        ///</summary>
        [JsonProperty("next_round")]
        public Int64? NextRound {get; set;}

        ///<summary>
        ///Положение команды в матче: 'left' или 'right'
        ///</summary>
        [JsonProperty("team_in_match")]
        public string TeamInMatch {get; set;}
    }

    public class WgnLeagueGridMatchesWinner
    {

        ///<summary>
        ///Идентификатор следующего матча в турнире для команды
        ///</summary>
        [JsonProperty("next_match_id")]
        public Int64? NextMatchId {get; set;}

        ///<summary>
        ///Идентификатор следующего раунда для команды
        ///</summary>
        [JsonProperty("next_round")]
        public Int64? NextRound {get; set;}

        ///<summary>
        ///Положение команды в матче: 'left' или 'right'
        ///</summary>
        [JsonProperty("team_in_match")]
        public string TeamInMatch {get; set;}
    }




    ///<summary>
    /// Матчи турнира
    /// https://ru.wargaming.net/developers/api_reference/wgn/league/matches/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wgn/league/matches/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wgn/league/matches/")]
    public class RequestWgnLeagueMatches:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор турнира
        ///numeric
        ///</summary>
        [JsonProperty("tournament_id")]
        [FieldIsMandatory]
        public string TournamentId {get; set;}

        ///<summary>
        ///Идентификатор матча в турнире
        ///numeric, list
        ///</summary>
        [JsonProperty("match_id")]
        public string MatchId {get; set;}
    }
    
    ///<summary>
    ///Матчи турнира
    ///</summary>
    public class ResponseWgnLeagueMatches:IResponse
    {

        ///<summary>
        ///Игровая карта, на которой будут проходить бои
        ///</summary>
        [JsonProperty("arena_id")]
        public string ArenaId {get; set;}

        ///<summary>
        ///Положение матча в турнирной сетке. 'winner' и 'loser' — ветки победителей и проигравших, соответственно. Если это первый раунд, полю присваивается значение 'null'.
        ///</summary>
        [JsonProperty("bracket")]
        public string Bracket {get; set;}

        ///<summary>
        ///Идентификатор следующего матча в турнире для левой команды. Если следующего матча нет, полю присваивается значение 'null'.
        ///</summary>
        [JsonProperty("left_next_match_id")]
        public Int64? LeftNextMatchId {get; set;}

        ///<summary>
        ///Счёт матча для левой команды. Если счёта нет, полю присваивается значение 'null'. Если команда дисквалифицирована, полю присваивается значение '-1 '.
        ///</summary>
        [JsonProperty("left_score")]
        public Int64? LeftScore {get; set;}

        ///<summary>
        ///Идентификатор левой команды, участвующей в матче
        ///</summary>
        [JsonProperty("left_team_id")]
        public Int64? LeftTeamId {get; set;}

        ///<summary>
        ///Идентификатор матча в турнире
        ///</summary>
        [JsonProperty("match_id")]
        public Int64? MatchId {get; set;}

        ///<summary>
        ///Позиция матча в раунде
        ///</summary>
        [JsonProperty("position")]
        public Int64? Position {get; set;}

        ///<summary>
        ///Идентификатор следующего матча в турнире для правой команды. Если следующего матча нет, полю присваивается значение 'null'.
        ///</summary>
        [JsonProperty("right_next_match_id")]
        public Int64? RightNextMatchId {get; set;}

        ///<summary>
        ///Счёт матча для правой команды. Если счёта нет, полю присваивается значение 'null'. Если команда дисквалифицирована, полю присваивается значение '-1 '.
        ///</summary>
        [JsonProperty("right_score")]
        public Int64? RightScore {get; set;}

        ///<summary>
        ///Идентификатор правой команды, участвующей в матче
        ///</summary>
        [JsonProperty("right_team_id")]
        public Int64? RightTeamId {get; set;}

        ///<summary>
        ///Раунд матча в турнире
        ///</summary>
        [JsonProperty("round")]
        public Int64? Round {get; set;}

        ///<summary>
        ///Время начала матча. Если матч ещё не начался, полю присваивается значение 'null'.
        ///</summary>
        [JsonProperty("start_at")]
        public int? StartAt {get; set;}

        ///<summary>
        ///Идентификатор турнира
        ///</summary>
        [JsonProperty("tournament_id")]
        public Int64? TournamentId {get; set;}

        ///<summary>
        ///Дата последнего обновления информации о матче
        ///</summary>
        [JsonProperty("updated_at")]
        public int? UpdatedAt {get; set;}
    }


    ///<summary>
    /// Команды
    /// https://ru.wargaming.net/developers/api_reference/wgn/league/teams/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wgn/league/teams/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wgn/league/teams/")]
    public class RequestWgnLeagueTeams:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Тип поиска. По умолчанию используется contains. Допустимые значения: 
///
///"exact" — Поиск по точному совпадению 
///"contains" — Поиск по вхождению (используется по умолчанию)
        ///string
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}

        ///<summary>
        ///Строка поиска
        ///string
        ///</summary>
        [JsonProperty("search")]
        public string Search {get; set;}

        ///<summary>
        ///Количество возвращаемых записей (может вернуться меньше записей, но не больше 1000). Если переданный лимит превышает 1000, тогда автоматически выставляется лимит в 100 (по умолчанию).
        ///numeric
        ///</summary>
        [JsonProperty("limit")]
        public string Limit {get; set;}

        ///<summary>
        ///Номер страницы результатов
        ///numeric
        ///</summary>
        [JsonProperty("page_no")]
        public string PageNo {get; set;}

        ///<summary>
        ///Поле, по которому производится поиск. По умолчанию используется abbreviation. Допустимые значения: 
///
///"name" — Поиск по названию 
///"abbreviation" — Поиск по тегу (используется по умолчанию)
        ///string
        ///</summary>
        [JsonProperty("search_by")]
        public string SearchBy {get; set;}
    }
    
    ///<summary>
    ///Команды
    ///</summary>
    public class ResponseWgnLeagueTeams:IResponse
    {

        ///<summary>
        ///Тег команды
        ///</summary>
        [JsonProperty("abbreviation")]
        public string Abbreviation {get; set;}

        ///<summary>
        ///Идентификатор аккаунта капитана. Если нет капитана, полю присваивается значение 'null'.
        ///</summary>
        [JsonProperty("captain_id")]
        public Int64? CaptainId {get; set;}

        ///<summary>
        ///Ссылка на логотип команды
        ///</summary>
        [JsonProperty("logo_url")]
        public string LogoUrl {get; set;}

        ///<summary>
        ///Название команды
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Идентификатор команды
        ///</summary>
        [JsonProperty("team_id")]
        public Int64? TeamId {get; set;}
    }


    ///<summary>
    /// Подробная информация о командах
    /// https://ru.wargaming.net/developers/api_reference/wgn/league/teaminfo/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wgn/league/teaminfo/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wgn/league/teaminfo/")]
    public class RequestWgnLeagueTeaminfo:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор команды
        ///numeric, list
        ///</summary>
        [JsonProperty("team_id")]
        [FieldIsMandatory]
        public string TeamId {get; set;}
    }
    
    ///<summary>
    ///Подробная информация о командах
    ///</summary>
    public class ResponseWgnLeagueTeaminfo:IResponse
    {

        ///<summary>
        ///Тег команды
        ///</summary>
        [JsonProperty("abbreviation")]
        public string Abbreviation {get; set;}

        ///<summary>
        ///Идентификатор аккаунта капитана. Если нет капитана, полю присваивается значение 'null'.
        ///</summary>
        [JsonProperty("captain_id")]
        public Int64? CaptainId {get; set;}

        ///<summary>
        ///Город команды
        ///</summary>
        [JsonProperty("city")]
        public string City {get; set;}

        ///<summary>
        ///Страна команды
        ///</summary>
        [JsonProperty("country")]
        public string Country {get; set;}

        ///<summary>
        ///Описание команды
        ///</summary>
        [JsonProperty("description")]
        public string Description {get; set;}

        ///<summary>
        ///Ссылка на логотип команды
        ///</summary>
        [JsonProperty("logo_url")]
        public string LogoUrl {get; set;}

        ///<summary>
        ///Название команды
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Список идентификаторов аккаунтов игроков команды
        ///</summary>
        [JsonProperty("player_ids")]
        public int[] PlayerIds {get; set;}

        ///<summary>
        ///Идентификатор команды
        ///</summary>
        [JsonProperty("team_id")]
        public Int64? TeamId {get; set;}

        ///<summary>
        ///Дата последнего обновления информации о команде
        ///</summary>
        [JsonProperty("updated_at")]
        public int? UpdatedAt {get; set;}

        ///<summary>
        ///Ссылки на страницы команды в социальных сетях
        ///</summary>
        [JsonProperty("socials")]
        public WgnLeagueTeaminfoSocials Socials {get; set;}

        ///<summary>
        ///Список спонсоров
        ///</summary>
        [JsonProperty("sponsors")]
        public WgnLeagueTeaminfoSponsors Sponsors {get; set;}

        ///<summary>
        ///Статистика команды
        ///</summary>
        [JsonProperty("statistics")]
        public WgnLeagueTeaminfoStatistics Statistics {get; set;}
    }
    public class WgnLeagueTeaminfoSocials
    {

        ///<summary>
        ///Ссылка на Facebook
        ///</summary>
        [JsonProperty("facebook")]
        public string Facebook {get; set;}

        ///<summary>
        ///Ссылка на Twitch
        ///</summary>
        [JsonProperty("twitch")]
        public string Twitch {get; set;}

        ///<summary>
        ///Ссылка на Twitter
        ///</summary>
        [JsonProperty("twitter")]
        public string Twitter {get; set;}

        ///<summary>
        ///Ссылка на Vkontakte
        ///</summary>
        [JsonProperty("vkontakte")]
        public string Vkontakte {get; set;}

        ///<summary>
        ///Ссылка на YouTube
        ///</summary>
        [JsonProperty("youtube")]
        public string Youtube {get; set;}
    }

    public class WgnLeagueTeaminfoSponsors
    {

        ///<summary>
        ///Ссылка на логотип спонсора
        ///</summary>
        [JsonProperty("logo_url")]
        public string LogoUrl {get; set;}

        ///<summary>
        ///Название спонсора
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Ссылка на сайт спонсора
        ///</summary>
        [JsonProperty("website_url")]
        public string WebsiteUrl {get; set;}
    }

    public class WgnLeagueTeaminfoStatistics
    {

        ///<summary>
        ///Общее количество проведённых матчей
        ///</summary>
        [JsonProperty("battles")]
        public Int64? Battles {get; set;}

        ///<summary>
        ///Количество выигранных матчей
        ///</summary>
        [JsonProperty("wins")]
        public Int64? Wins {get; set;}
    }



    ///<summary>
    /// Зал славы
    /// https://ru.wargaming.net/developers/api_reference/wgn/league/halloffame/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wgn/league/halloffame/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wgn/league/halloffame/")]
    public class RequestWgnLeagueHalloffame:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Количество возвращаемых записей (может вернуться меньше записей, но не больше 1000). Если переданный лимит превышает 1000, тогда автоматически выставляется лимит в 100 (по умолчанию).
        ///numeric
        ///</summary>
        [JsonProperty("limit")]
        public string Limit {get; set;}

        ///<summary>
        ///Номер страницы результатов
        ///numeric
        ///</summary>
        [JsonProperty("page_no")]
        public string PageNo {get; set;}

        ///<summary>
        ///Сортировка. Можно указать несколько параметров через запятую. Для сортировки по убыванию, добавьте перед параметром "-". Допустимые значения: 
///
///"fct" — боевая эффективность 
///"dmg" — количество нанесённых повреждений 
///"frg" — количество уничтоженных противников 
///"spt" — количество обнаруженных противников 
///"cpt" — очки захвата базы 
///"dpt" — очки защиты базы 
///"gpl" — количество боёв
        ///string, list
        ///</summary>
        [JsonProperty("order_by")]
        public string OrderBy {get; set;}

        ///<summary>
        ///Идентификаторы игроков
        ///numeric, list
        ///</summary>
        [JsonProperty("account_id")]
        public string AccountId {get; set;}
    }
    
    ///<summary>
    ///Зал славы
    ///</summary>
    public class ResponseWgnLeagueHalloffame:IResponse
    {

        ///<summary>
        ///Идентификатор аккаунта игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Псевдоним игрока
        ///</summary>
        [JsonProperty("nickname")]
        public string Nickname {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("cpt")]
        public WgnLeagueHalloffameCpt Cpt {get; set;}

        ///<summary>
        ///Количество нанесённых повреждений
        ///</summary>
        [JsonProperty("dmg")]
        public WgnLeagueHalloffameDmg Dmg {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dpt")]
        public WgnLeagueHalloffameDpt Dpt {get; set;}

        ///<summary>
        ///Боевая эффективность
        ///</summary>
        [JsonProperty("fct")]
        public WgnLeagueHalloffameFct Fct {get; set;}

        ///<summary>
        ///Количество уничтоженных противников
        ///</summary>
        [JsonProperty("frg")]
        public WgnLeagueHalloffameFrg Frg {get; set;}

        ///<summary>
        ///Количество боёв клана
        ///</summary>
        [JsonProperty("gpl")]
        public WgnLeagueHalloffameGpl Gpl {get; set;}

        ///<summary>
        ///Количество обнаруженных противников
        ///</summary>
        [JsonProperty("spt")]
        public WgnLeagueHalloffameSpt Spt {get; set;}
    }
    public class WgnLeagueHalloffameCpt
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WgnLeagueHalloffameDmg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WgnLeagueHalloffameDpt
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WgnLeagueHalloffameFct
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public double Value {get; set;}
    }

    public class WgnLeagueHalloffameFrg
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WgnLeagueHalloffameGpl
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }

    public class WgnLeagueHalloffameSpt
    {

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("rank")]
        public Int64? Rank {get; set;}

        ///<summary>
        ///Абсолютное значение
        ///</summary>
        [JsonProperty("value")]
        public Int64? Value {get; set;}
    }



    ///<summary>
    /// Игроки
    /// https://ru.wargaming.net/developers/api_reference/wgn/league/players/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wgn/league/players/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wgn/league/players/")]
    public class RequestWgnLeaguePlayers:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Тип поиска. По умолчанию используется contains. Допустимые значения: 
///
///"exact" — Поиск по точному совпадению 
///"contains" — Поиск по вхождению (используется по умолчанию)
        ///string
        ///</summary>
        [JsonProperty("type")]
        public string Type {get; set;}

        ///<summary>
        ///Строка поиска
        ///string
        ///</summary>
        [JsonProperty("search")]
        public string Search {get; set;}

        ///<summary>
        ///Количество возвращаемых записей (может вернуться меньше записей, но не больше 1000). Если переданный лимит превышает 1000, тогда автоматически выставляется лимит в 100 (по умолчанию).
        ///numeric
        ///</summary>
        [JsonProperty("limit")]
        public string Limit {get; set;}

        ///<summary>
        ///Номер страницы результатов
        ///numeric
        ///</summary>
        [JsonProperty("page_no")]
        public string PageNo {get; set;}

        ///<summary>
        ///Идентификатор команды
        ///numeric
        ///</summary>
        [JsonProperty("team_id")]
        public string TeamId {get; set;}
    }
    
    ///<summary>
    ///Игроки
    ///</summary>
    public class ResponseWgnLeaguePlayers:IResponse
    {

        ///<summary>
        ///Идентификатор аккаунта игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Псевдоним игрока
        ///</summary>
        [JsonProperty("nickname")]
        public string Nickname {get; set;}

        ///<summary>
        ///Список идентификаторов команд, в которых состоит игрок
        ///</summary>
        [JsonProperty("team_ids")]
        public int[] TeamIds {get; set;}
    }


    ///<summary>
    /// Подробная информация об игроках
    /// https://ru.wargaming.net/developers/api_reference/wgn/league/playerinfo/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wgn/league/playerinfo/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wgn/league/playerinfo/")]
    public class RequestWgnLeaguePlayerinfo:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификаторы игроков
        ///numeric, list
        ///</summary>
        [JsonProperty("account_id")]
        [FieldIsMandatory]
        public string AccountId {get; set;}
    }
    
    ///<summary>
    ///Подробная информация об игроках
    ///</summary>
    public class ResponseWgnLeaguePlayerinfo:IResponse
    {

        ///<summary>
        ///Идентификатор аккаунта игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Город игрока
        ///</summary>
        [JsonProperty("city")]
        public string City {get; set;}

        ///<summary>
        ///Страна игрока
        ///</summary>
        [JsonProperty("country")]
        public string Country {get; set;}

        ///<summary>
        ///Дата рождения игрока, в формате YYYYMMDD
        ///</summary>
        [JsonProperty("date_of_birth")]
        public string DateOfBirth {get; set;}

        ///<summary>
        ///Имя игрока
        ///</summary>
        [JsonProperty("first_name")]
        public string FirstName {get; set;}

        ///<summary>
        ///Фамилия игрока
        ///</summary>
        [JsonProperty("last_name")]
        public string LastName {get; set;}

        ///<summary>
        ///Псевдоним игрока
        ///</summary>
        [JsonProperty("nickname")]
        public string Nickname {get; set;}

        ///<summary>
        ///Идентификатор команды, в которой данный игрок является капитаном. Если игрок не является капитаном ни одной из команд, полю присваивается значение 'null'.
        ///</summary>
        [JsonProperty("own_team_id")]
        public Int64? OwnTeamId {get; set;}

        ///<summary>
        ///Ссылка на фото игрока
        ///</summary>
        [JsonProperty("photo_url")]
        public string PhotoUrl {get; set;}

        ///<summary>
        ///Список идентификаторов команд, в которых состоит игрок
        ///</summary>
        [JsonProperty("team_ids")]
        public int[] TeamIds {get; set;}

        ///<summary>
        ///Ссылки на страницы игрока в социальных сетях
        ///</summary>
        [JsonProperty("socials")]
        public WgnLeaguePlayerinfoSocials Socials {get; set;}

        ///<summary>
        ///Статистика игрока
        ///</summary>
        [JsonProperty("statistics")]
        public WgnLeaguePlayerinfoStatistics Statistics {get; set;}
    }
    public class WgnLeaguePlayerinfoSocials
    {

        ///<summary>
        ///Ссылка на Facebook
        ///</summary>
        [JsonProperty("facebook")]
        public string Facebook {get; set;}

        ///<summary>
        ///Ссылка на Twitch
        ///</summary>
        [JsonProperty("twitch")]
        public string Twitch {get; set;}

        ///<summary>
        ///Ссылка на Twitter
        ///</summary>
        [JsonProperty("twitter")]
        public string Twitter {get; set;}

        ///<summary>
        ///Ссылка на Vkontakte
        ///</summary>
        [JsonProperty("vkontakte")]
        public string Vkontakte {get; set;}

        ///<summary>
        ///Ссылка на YouTube
        ///</summary>
        [JsonProperty("youtube")]
        public string Youtube {get; set;}
    }

    public class WgnLeaguePlayerinfoStatistics
    {

        ///<summary>
        ///Средний урон за бой
        ///</summary>
        [JsonProperty("avg_battle_damage")]
        public double AvgBattleDamage {get; set;}

        ///<summary>
        ///Очки захвата базы
        ///</summary>
        [JsonProperty("cpt")]
        public Int64? Cpt {get; set;}

        ///<summary>
        ///Количество нанесённых повреждений
        ///</summary>
        [JsonProperty("dmg")]
        public Int64? Dmg {get; set;}

        ///<summary>
        ///Очки защиты базы
        ///</summary>
        [JsonProperty("dpt")]
        public Int64? Dpt {get; set;}

        ///<summary>
        ///Боевая эффективность
        ///</summary>
        [JsonProperty("fct")]
        public double Fct {get; set;}

        ///<summary>
        ///Количество уничтоженных противников
        ///</summary>
        [JsonProperty("frg")]
        public Int64? Frg {get; set;}

        ///<summary>
        ///Количество боёв
        ///</summary>
        [JsonProperty("gpl")]
        public Int64? Gpl {get; set;}

        ///<summary>
        ///Количество обнаруженных противников
        ///</summary>
        [JsonProperty("spt")]
        public Int64? Spt {get; set;}

        ///<summary>
        ///Процент побед
        ///</summary>
        [JsonProperty("won_battles_percent")]
        public double WonBattlesPercent {get; set;}
    }



    ///<summary>
    /// Кланы
    /// https://ru.wargaming.net/developers/api_reference/wgn/clans/list/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wgn/clans/list/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wgn/clans/list/")]
    public class RequestWgnClansList:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Часть названия или тега клана, по которому осуществляется поиск. Не может быть меньше 2 символов
        ///string
        ///</summary>
        [JsonProperty("search")]
        public string Search {get; set;}

        ///<summary>
        ///Количество возвращаемых записей (может вернуться меньше записей, но не больше 100). Если переданный лимит превышает 100, тогда автоматически выставляется лимит в 100 (по умолчанию).
        ///numeric
        ///</summary>
        [JsonProperty("limit")]
        public string Limit {get; set;}

        ///<summary>
        ///Номер страницы
        ///numeric
        ///</summary>
        [JsonProperty("page_no")]
        public string PageNo {get; set;}
    }
    
    ///<summary>
    ///Кланы
    ///</summary>
    public class ResponseWgnClansList:IResponse
    {

        ///<summary>
        ///Идентификатор клана
        ///</summary>
        [JsonProperty("clan_id")]
        public Int64? ClanId {get; set;}

        ///<summary>
        ///Цвет клана в формате HEX #RRGGBB
        ///</summary>
        [JsonProperty("color")]
        public string Color {get; set;}

        ///<summary>
        ///Дата создания клана
        ///</summary>
        [JsonProperty("created_at")]
        public int? CreatedAt {get; set;}

        ///<summary>
        ///Количество игроков клана
        ///</summary>
        [JsonProperty("members_count")]
        public Int64? MembersCount {get; set;}

        ///<summary>
        ///Название клана
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Тег клана
        ///</summary>
        [JsonProperty("tag")]
        public string Tag {get; set;}

        ///<summary>
        ///Информация об эмблемах клана в играх и на клановом портале
        ///</summary>
        [JsonProperty("emblems")]
        public WgnClansListEmblems Emblems {get; set;}
    }
    public class WgnClansListEmblems
    {

        ///<summary>
        ///Перечень ссылок на эмблемы 195x195 px
        ///</summary>
        [JsonProperty("x195")]
        public Dictionary<string,string> X195 {get; set;}

        ///<summary>
        ///Перечень ссылок на эмблемы 24x24 px
        ///</summary>
        [JsonProperty("x24")]
        public Dictionary<string,string> X24 {get; set;}

        ///<summary>
        ///Перечень ссылок на эмблемы 256x256 px
        ///</summary>
        [JsonProperty("x256")]
        public Dictionary<string,string> X256 {get; set;}

        ///<summary>
        ///Перечень ссылок на эмблемы 32x32 px
        ///</summary>
        [JsonProperty("x32")]
        public Dictionary<string,string> X32 {get; set;}

        ///<summary>
        ///Перечень ссылок на эмблемы 64x64 px
        ///</summary>
        [JsonProperty("x64")]
        public Dictionary<string,string> X64 {get; set;}
    }



    ///<summary>
    /// Данные клана
    /// https://ru.wargaming.net/developers/api_reference/wgn/clans/info/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wgn/clans/info/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wgn/clans/info/")]
    public class RequestWgnClansInfo:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Ключ доступа к персональным данным пользователя. Имеет срок действия. Для получения ключа доступа необходимо запросить аутентификацию.
        ///string
        ///</summary>
        [JsonProperty("access_token")]
        public string AccessToken {get; set;}

        ///<summary>
        ///Дополнительные поля, которые будут включены в ответ. Допустимые значения: 
///
///private.online_members
        ///string, list
        ///</summary>
        [JsonProperty("extra")]
        public string Extra {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор клана
        ///numeric, list
        ///</summary>
        [JsonProperty("clan_id")]
        [FieldIsMandatory]
        public string ClanId {get; set;}

        ///<summary>
        ///Данный параметр изменяет тип поля members. Допустимые значения: 
///
///"id" — Поле members в ответе будет содержать associative array c индексацией по account_id
        ///string
        ///</summary>
        [JsonProperty("members_key")]
        public string MembersKey {get; set;}
    }
    
    ///<summary>
    ///Данные клана
    ///</summary>
    public class ResponseWgnClansInfo:IResponse
    {

        ///<summary>
        ///Клан может приглашать игроков
        ///</summary>
        [JsonProperty("accepts_join_requests")]
        public bool AcceptsJoinRequests {get; set;}

        ///<summary>
        ///Идентификатор клана
        ///</summary>
        [JsonProperty("clan_id")]
        public Int64? ClanId {get; set;}

        ///<summary>
        ///Цвет клана в формате HEX #RRGGBB
        ///</summary>
        [JsonProperty("color")]
        public string Color {get; set;}

        ///<summary>
        ///Дата создания клана
        ///</summary>
        [JsonProperty("created_at")]
        public int? CreatedAt {get; set;}

        ///<summary>
        ///Идентификатор игрока, создавшего клан
        ///</summary>
        [JsonProperty("creator_id")]
        public Int64? CreatorId {get; set;}

        ///<summary>
        ///Имя игрока, создавшего клан
        ///</summary>
        [JsonProperty("creator_name")]
        public string CreatorName {get; set;}

        ///<summary>
        ///Описание клана
        ///</summary>
        [JsonProperty("description")]
        public string Description {get; set;}

        ///<summary>
        ///Описание клана в HTML
        ///</summary>
        [JsonProperty("description_html")]
        public string DescriptionHtml {get; set;}

        ///<summary>
        ///Клан удалён. Информация об удалённом клане содержит актуальные значения только для следующих полей: clan_id, is_clan_disbanded, updated_at.
        ///</summary>
        [JsonProperty("is_clan_disbanded")]
        public bool IsClanDisbanded {get; set;}

        ///<summary>
        ///Идентификатор Командующего клана
        ///</summary>
        [JsonProperty("leader_id")]
        public Int64? LeaderId {get; set;}

        ///<summary>
        ///Имя Командующего
        ///</summary>
        [JsonProperty("leader_name")]
        public string LeaderName {get; set;}

        ///<summary>
        ///Количество игроков клана
        ///</summary>
        [JsonProperty("members_count")]
        public Int64? MembersCount {get; set;}

        ///<summary>
        ///Девиз клана
        ///</summary>
        [JsonProperty("motto")]
        public string Motto {get; set;}

        ///<summary>
        ///Название клана
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Старое название клана
        ///</summary>
        [JsonProperty("old_name")]
        public string OldName {get; set;}

        ///<summary>
        ///Старый тег клана
        ///</summary>
        [JsonProperty("old_tag")]
        public string OldTag {get; set;}

        ///<summary>
        ///Время последнего переименования клана в UTC
        ///</summary>
        [JsonProperty("renamed_at")]
        public int? RenamedAt {get; set;}

        ///<summary>
        ///Тег клана
        ///</summary>
        [JsonProperty("tag")]
        public string Tag {get; set;}

        ///<summary>
        ///Время обновления информации о клане
        ///</summary>
        [JsonProperty("updated_at")]
        public int? UpdatedAt {get; set;}

        ///<summary>
        ///Информация об эмблемах клана в играх и на клановом портале
        ///</summary>
        [JsonProperty("emblems")]
        public WgnClansInfoEmblems Emblems {get; set;}

        ///<summary>
        ///Информация об игроках клана. Формат поля зависит от входящего параметра members_key.
        ///</summary>
        [JsonProperty("members")]
        public WgnClansInfoMembers Members {get; set;}

        ///<summary>
        ///Cекретная информация клана
        ///</summary>
        [JsonProperty("private")]
        public WgnClansInfoPrivate Private {get; set;}
    }
    public class WgnClansInfoEmblems
    {

        ///<summary>
        ///Перечень ссылок на эмблемы 195x195 px
        ///</summary>
        [JsonProperty("x195")]
        public Dictionary<string,string> X195 {get; set;}

        ///<summary>
        ///Перечень ссылок на эмблемы 24x24 px
        ///</summary>
        [JsonProperty("x24")]
        public Dictionary<string,string> X24 {get; set;}

        ///<summary>
        ///Перечень ссылок на эмблемы 256x256 px
        ///</summary>
        [JsonProperty("x256")]
        public Dictionary<string,string> X256 {get; set;}

        ///<summary>
        ///Перечень ссылок на эмблемы 32x32 px
        ///</summary>
        [JsonProperty("x32")]
        public Dictionary<string,string> X32 {get; set;}

        ///<summary>
        ///Перечень ссылок на эмблемы 64x64 px
        ///</summary>
        [JsonProperty("x64")]
        public Dictionary<string,string> X64 {get; set;}
    }

    public class WgnClansInfoMembers
    {

        ///<summary>
        ///Идентификатор аккаунта игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Имя игрока
        ///</summary>
        [JsonProperty("account_name")]
        public string AccountName {get; set;}

        ///<summary>
        ///Дата вступления в клан
        ///</summary>
        [JsonProperty("joined_at")]
        public int? JoinedAt {get; set;}

        ///<summary>
        ///Техническое название должности
        ///</summary>
        [JsonProperty("role")]
        public string Role {get; set;}

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("role_i18n")]
        public string RoleI18n {get; set;}
    }

    public class WgnClansInfoPrivate
    {

        ///<summary>
        ///Список игроков клана c активной игровой сессией в World of Tanks.
///Дополнительное поле.
        ///</summary>
        [JsonProperty("online_members")]
        public int[] OnlineMembers {get; set;}

        ///<summary>
        ///Золото в казне клана
        ///</summary>
        [JsonProperty("treasury")]
        public Int64? Treasury {get; set;}
    }



    ///<summary>
    /// Подробные данные игрока клана
    /// https://ru.wargaming.net/developers/api_reference/wgn/clans/membersinfo/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wgn/clans/membersinfo/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wgn/clans/membersinfo/")]
    public class RequestWgnClansMembersinfo:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор аккаунта
        ///numeric, list
        ///</summary>
        [JsonProperty("account_id")]
        [FieldIsMandatory]
        public string AccountId {get; set;}
    }
    
    ///<summary>
    ///Подробные данные игрока клана
    ///</summary>
    public class ResponseWgnClansMembersinfo:IResponse
    {

        ///<summary>
        ///Идентификатор игрока
        ///</summary>
        [JsonProperty("account_id")]
        public Int64? AccountId {get; set;}

        ///<summary>
        ///Имя игрока
        ///</summary>
        [JsonProperty("account_name")]
        public string AccountName {get; set;}

        ///<summary>
        ///Дата вступления в клан
        ///</summary>
        [JsonProperty("joined_at")]
        public int? JoinedAt {get; set;}

        ///<summary>
        ///Техническое название должности
        ///</summary>
        [JsonProperty("role")]
        public string Role {get; set;}

        ///<summary>
        ///Позиция
        ///</summary>
        [JsonProperty("role_i18n")]
        public string RoleI18n {get; set;}

        ///<summary>
        ///Краткая информация о клане
        ///</summary>
        [JsonProperty("clan")]
        public WgnClansMembersinfoClan Clan {get; set;}
    }
    public class WgnClansMembersinfoClan
    {

        ///<summary>
        ///Идентификатор клана
        ///</summary>
        [JsonProperty("clan_id")]
        public Int64? ClanId {get; set;}

        ///<summary>
        ///Цвет клана в формате HEX #RRGGBB
        ///</summary>
        [JsonProperty("color")]
        public string Color {get; set;}

        ///<summary>
        ///Дата создания клана
        ///</summary>
        [JsonProperty("created_at")]
        public int? CreatedAt {get; set;}

        ///<summary>
        ///Количество игроков клана
        ///</summary>
        [JsonProperty("members_count")]
        public Int64? MembersCount {get; set;}

        ///<summary>
        ///Название клана
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Тег клана
        ///</summary>
        [JsonProperty("tag")]
        public string Tag {get; set;}

        ///<summary>
        ///Информация об эмблемах клана в играх и на клановом портале
        ///</summary>
        [JsonProperty("emblems")]
        public WgnClansMembersinfoClanEmblems Emblems {get; set;}
    }
    public class WgnClansMembersinfoClanEmblems
    {

        ///<summary>
        ///Перечень ссылок на эмблемы 195x195 px
        ///</summary>
        [JsonProperty("x195")]
        public Dictionary<string,string> X195 {get; set;}

        ///<summary>
        ///Перечень ссылок на эмблемы 24x24 px
        ///</summary>
        [JsonProperty("x24")]
        public Dictionary<string,string> X24 {get; set;}

        ///<summary>
        ///Перечень ссылок на эмблемы 256x256 px
        ///</summary>
        [JsonProperty("x256")]
        public Dictionary<string,string> X256 {get; set;}

        ///<summary>
        ///Перечень ссылок на эмблемы 32x32 px
        ///</summary>
        [JsonProperty("x32")]
        public Dictionary<string,string> X32 {get; set;}

        ///<summary>
        ///Перечень ссылок на эмблемы 64x64 px
        ///</summary>
        [JsonProperty("x64")]
        public Dictionary<string,string> X64 {get; set;}
    }




    ///<summary>
    /// Глоссарий кланов
    /// https://ru.wargaming.net/developers/api_reference/wgn/clans/glossary/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wgn/clans/glossary/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wgn/clans/glossary/")]
    public class RequestWgnClansGlossary:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}
    }
    
    ///<summary>
    ///Глоссарий кланов
    ///</summary>
    public class ResponseWgnClansGlossary:IResponse
    {

        ///<summary>
        ///Возможные должности игроков в клане
        ///</summary>
        [JsonProperty("clans_roles")]
        public Dictionary<string,string> ClansRoles {get; set;}
    }


    ///<summary>
    /// Доска объявлений
    /// https://ru.wargaming.net/developers/api_reference/wgn/clans/messageboard/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wgn/clans/messageboard/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wgn/clans/messageboard/")]
    public class RequestWgnClansMessageboard:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Обязательный параметер
        ///Ключ доступа к персональным данным пользователя. Имеет срок действия. Для получения ключа доступа необходимо запросить аутентификацию.
        ///string
        ///</summary>
        [JsonProperty("access_token")]
        [FieldIsMandatory]
        public string AccessToken {get; set;}
    }
    
    ///<summary>
    ///Доска объявлений
    ///</summary>
    public class ResponseWgnClansMessageboard:IResponse
    {

        ///<summary>
        ///Идентификатор автора объявления
        ///</summary>
        [JsonProperty("author_id")]
        public Int64? AuthorId {get; set;}

        ///<summary>
        ///Дата создания объявления
        ///</summary>
        [JsonProperty("created_at")]
        public int? CreatedAt {get; set;}

        ///<summary>
        ///Идентификатор игрока, изменившего объявление
        ///</summary>
        [JsonProperty("editor_id")]
        public Int64? EditorId {get; set;}

        ///<summary>
        ///Показывает, прочитано ли объявление
        ///</summary>
        [JsonProperty("is_read")]
        public bool IsRead {get; set;}

        ///<summary>
        ///Текст сообщения
        ///</summary>
        [JsonProperty("message")]
        public string Message {get; set;}

        ///<summary>
        ///Дата обновления сообщения
        ///</summary>
        [JsonProperty("updated_at")]
        public int? UpdatedAt {get; set;}
    }


    ///<summary>
    /// Теги
    /// https://ru.wargaming.net/developers/api_reference/wgn/wgtv/tags/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wgn/wgtv/tags/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wgn/wgtv/tags/")]
    public class RequestWgnWgtvTags:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}
    }
    
    ///<summary>
    ///Теги
    ///</summary>
    public class ResponseWgnWgtvTags:IResponse
    {

        ///<summary>
        ///Список категорий
        ///</summary>
        [JsonProperty("categories")]
        public WgnWgtvTagsCategories Categories {get; set;}

        ///<summary>
        ///Список программ
        ///</summary>
        [JsonProperty("programs")]
        public WgnWgtvTagsPrograms Programs {get; set;}

        ///<summary>
        ///Список проектов
        ///</summary>
        [JsonProperty("projects")]
        public WgnWgtvTagsProjects Projects {get; set;}
    }
    public class WgnWgtvTagsCategories
    {

        ///<summary>
        ///Идентификатор категории контента
        ///</summary>
        [JsonProperty("category_id")]
        public Int64? CategoryId {get; set;}

        ///<summary>
        ///Локализованное название категории
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Порядок сортировки
        ///</summary>
        [JsonProperty("order")]
        public Int64? Order {get; set;}
    }

    public class WgnWgtvTagsPrograms
    {

        ///<summary>
        ///Локализованное название программы
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Порядок сортировки
        ///</summary>
        [JsonProperty("order")]
        public Int64? Order {get; set;}

        ///<summary>
        ///Идентификатор программы
        ///</summary>
        [JsonProperty("program_id")]
        public Int64? ProgramId {get; set;}
    }

    public class WgnWgtvTagsProjects
    {

        ///<summary>
        ///Название игрового проекта
        ///</summary>
        [JsonProperty("name")]
        public string Name {get; set;}

        ///<summary>
        ///Порядок сортировки
        ///</summary>
        [JsonProperty("order")]
        public Int64? Order {get; set;}

        ///<summary>
        ///Идентификатор игрового проекта
        ///</summary>
        [JsonProperty("project_id")]
        public Int64? ProjectId {get; set;}
    }



    ///<summary>
    /// Список видео
    /// https://ru.wargaming.net/developers/api_reference/wgn/wgtv/videos/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wgn/wgtv/videos/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wgn/wgtv/videos/")]
    public class RequestWgnWgtvVideos:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Идентификатор видео на Youtube
        ///string, list
        ///</summary>
        [JsonProperty("video_id")]
        public string VideoId {get; set;}

        ///<summary>
        ///Идентификатор игрового проекта
        ///numeric, list
        ///</summary>
        [JsonProperty("project_id")]
        public string ProjectId {get; set;}

        ///<summary>
        ///Идентификатор категории контента
        ///numeric, list
        ///</summary>
        [JsonProperty("category_id")]
        public string CategoryId {get; set;}

        ///<summary>
        ///Идентификатор программы
        ///numeric, list
        ///</summary>
        [JsonProperty("program_id")]
        public string ProgramId {get; set;}

        ///<summary>
        ///Текст для поиска по названию
        ///string
        ///</summary>
        [JsonProperty("q")]
        public string Q {get; set;}

        ///<summary>
        ///Отметка «Важное»
        ///numeric
        ///</summary>
        [JsonProperty("important")]
        public string Important {get; set;}

        ///<summary>
        ///Не старше указанной даты
        ///timestamp/date
        ///</summary>
        [JsonProperty("date_from")]
        public string DateFrom {get; set;}

        ///<summary>
        ///Количество возвращаемых записей (может вернуться меньше записей, но не больше 1000). Если переданный лимит превышает 1000, тогда автоматически выставляется лимит в 100 (по умолчанию).
        ///numeric
        ///</summary>
        [JsonProperty("limit")]
        public string Limit {get; set;}

        ///<summary>
        ///Номер страницы результатов
        ///numeric
        ///</summary>
        [JsonProperty("page_no")]
        public string PageNo {get; set;}

        ///<summary>
        ///Идентификатор техники
        ///numeric, list
        ///</summary>
        [JsonProperty("vehicle_id")]
        public string VehicleId {get; set;}
    }
    
    ///<summary>
    ///Список видео
    ///</summary>
    public class ResponseWgnWgtvVideos:IResponse
    {

        ///<summary>
        ///Список идентификаторов категорий
        ///</summary>
        [JsonProperty("category_id")]
        public int[] CategoryId {get; set;}

        ///<summary>
        ///Локализованное описание видео
        ///</summary>
        [JsonProperty("description")]
        public string Description {get; set;}

        ///<summary>
        ///Длительность видео в секундах. Поле может возвращать null.
        ///</summary>
        [JsonProperty("duration")]
        public Int64? Duration {get; set;}

        ///<summary>
        ///Название видео на Youtube
        ///</summary>
        [JsonProperty("ext_title")]
        public string ExtTitle {get; set;}

        ///<summary>
        ///Отметка «Важное»
        ///</summary>
        [JsonProperty("important")]
        public bool Important {get; set;}

        ///<summary>
        ///Идентификатор программы
        ///</summary>
        [JsonProperty("program_id")]
        public Int64? ProgramId {get; set;}

        ///<summary>
        ///Список идентификаторов проектов
        ///</summary>
        [JsonProperty("project_id")]
        public int[] ProjectId {get; set;}

        ///<summary>
        ///Дата и время публикации
        ///</summary>
        [JsonProperty("published_at")]
        public int? PublishedAt {get; set;}

        ///<summary>
        ///Локализованное название видео
        ///</summary>
        [JsonProperty("title")]
        public string Title {get; set;}

        ///<summary>
        ///Список ID техники, которым посвящено видео
        ///</summary>
        [JsonProperty("vehicles")]
        public Dictionary<string,string> Vehicles {get; set;}

        ///<summary>
        ///Идентификатор видео на Youtube
        ///</summary>
        [JsonProperty("video_id")]
        public string VideoId {get; set;}

        ///<summary>
        ///Ссылка на Youtube
        ///</summary>
        [JsonProperty("video_url")]
        public string VideoUrl {get; set;}

        ///<summary>
        ///Список изображений
        ///</summary>
        [JsonProperty("thumbnails")]
        public WgnWgtvVideosThumbnails Thumbnails {get; set;}
    }
    public class WgnWgtvVideosThumbnails
    {

        ///<summary>
        ///Высота
        ///</summary>
        [JsonProperty("height")]
        public Int64? Height {get; set;}

        ///<summary>
        ///Ссылка на изображение
        ///</summary>
        [JsonProperty("url")]
        public string Url {get; set;}

        ///<summary>
        ///Ширина
        ///</summary>
        [JsonProperty("width")]
        public Int64? Width {get; set;}
    }



    ///<summary>
    /// Техника
    /// https://ru.wargaming.net/developers/api_reference/wgn/wgtv/vehicles/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wgn/wgtv/vehicles/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wgn/wgtv/vehicles/")]
    public class RequestWgnWgtvVehicles:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Идентификатор игрового проекта
        ///numeric, list
        ///</summary>
        [JsonProperty("project_id")]
        public string ProjectId {get; set;}

        ///<summary>
        ///Идентификатор категории контента
        ///numeric, list
        ///</summary>
        [JsonProperty("category_id")]
        public string CategoryId {get; set;}

        ///<summary>
        ///Идентификатор программы
        ///numeric, list
        ///</summary>
        [JsonProperty("program_id")]
        public string ProgramId {get; set;}
    }
    
    ///<summary>
    ///Техника
    ///</summary>
    public class ResponseWgnWgtvVehicles:IResponse
    {

        ///<summary>
        ///Список идентификаторов техники по играм
        ///</summary>
        [JsonProperty("vehicles")]
        public Dictionary<string,string> Vehicles {get; set;}
    }


    ///<summary>
    /// Игровые серверы
    /// https://ru.wargaming.net/developers/api_reference/wgn/servers/info/
    ///</summary>
    [Method(Url="api.worldoftanks.ru/wgn/servers/info/")]
    [DescriptionUrl(Url= "https://ru.wargaming.net/developers/api_reference/wgn/servers/info/")]
    public class RequestWgnServersInfo:IRequest
    {

        ///<summary>
        ///Обязательный параметер
        ///Идентификатор приложения
        ///string
        ///</summary>
        [JsonProperty("application_id")]
        [FieldIsMandatory]
        public string ApplicationId {get; set;}

        ///<summary>
        ///Язык локализации. Допустимые значения: 
///
///"en" — English 
///"ru" — Русский (используется по умолчанию)
///"pl" — Polski 
///"de" — Deutsch 
///"fr" — Français 
///"es" — Español 
///"zh-cn" — 简体中文 
///"tr" — Türkçe 
///"cs" — Čeština 
///"th" — ไทย 
///"vi" — Tiếng Việt 
///"ko" — 한국어
        ///string
        ///</summary>
        [JsonProperty("language")]
        public string Language {get; set;}

        ///<summary>
        ///Поля ответа. Поля разделяются запятыми. Вложенные поля разделяются точками. Для исключения поля используется знак «-» перед названием поля. Если параметр не указан, возвращаются все поля.
        ///string, list
        ///</summary>
        [JsonProperty("fields")]
        public string Fields {get; set;}

        ///<summary>
        ///Идентификатор игры. Допустимые значения: 
///
///"wot" — World of Tanks 
///"wotb" — World of Tanks Blitz 
///"wowp" — World of Warplanes
        ///string, list
        ///</summary>
        [JsonProperty("game")]
        public string Game {get; set;}
    }
    
    ///<summary>
    ///Игровые серверы
    ///</summary>
    public class ResponseWgnServersInfo:IResponse
    {

        ///<summary>
        ///Количество игроков онлайн
        ///</summary>
        [JsonProperty("players_online")]
        public Int64? PlayersOnline {get; set;}

        ///<summary>
        ///Идентификатор сервера
        ///</summary>
        [JsonProperty("server")]
        public string Server {get; set;}
    }


}
